{
  "version": 3,
  "sources": ["../../tslib/tslib.js", "../../js-sha256/src/sha256.js", "../../web-worker/cjs/browser.js", "../../tslib/modules/index.js", "../../apache-arrow/util/util/buffer.ts", "../../apache-arrow/util/util/utf8.ts", "../../apache-arrow/util/util/compat.ts", "../../apache-arrow/io/io/adapters.ts", "../../apache-arrow/enum.ts", "../../apache-arrow/util/util/vector.ts", "../../apache-arrow/util/util/pretty.ts", "../../apache-arrow/util/util/bn.ts", "../../apache-arrow/type.ts", "../../apache-arrow/visitor.ts", "../../apache-arrow/util/util/math.ts", "../../apache-arrow/visitor/visitor/set.ts", "../../apache-arrow/row/row/struct.ts", "../../apache-arrow/visitor/visitor/get.ts", "../../apache-arrow/row/row/map.ts", "../../apache-arrow/util/util/bit.ts", "../../apache-arrow/data.ts", "../../apache-arrow/util/util/chunk.ts", "../../apache-arrow/visitor/visitor/indexof.ts", "../../apache-arrow/visitor/visitor/iterator.ts", "../../apache-arrow/visitor/visitor/bytelength.ts", "../../apache-arrow/vector.ts", "../../apache-arrow/builder/builder/valid.ts", "../../apache-arrow/builder/builder/buffer.ts", "../../apache-arrow/builder.ts", "../../apache-arrow/fb/fb/block.ts", "../../flatbuffers/mjs/constants.js", "../../flatbuffers/mjs/utils.js", "../../flatbuffers/mjs/long.js", "../../flatbuffers/mjs/encoding.js", "../../flatbuffers/mjs/byte-buffer.js", "../../flatbuffers/mjs/builder.js", "../../apache-arrow/fb/fb/key-value.ts", "../../apache-arrow/fb/fb/metadata-version.ts", "../../apache-arrow/fb/fb/endianness.ts", "../../apache-arrow/fb/fb/dictionary-kind.ts", "../../apache-arrow/fb/fb/int.ts", "../../apache-arrow/fb/fb/dictionary-encoding.ts", "../../apache-arrow/fb/fb/binary.ts", "../../apache-arrow/fb/fb/bool.ts", "../../apache-arrow/fb/fb/date-unit.ts", "../../apache-arrow/fb/fb/date.ts", "../../apache-arrow/fb/fb/decimal.ts", "../../apache-arrow/fb/fb/time-unit.ts", "../../apache-arrow/fb/fb/fixed-size-binary.ts", "../../apache-arrow/fb/fb/fixed-size-list.ts", "../../apache-arrow/fb/fb/precision.ts", "../../apache-arrow/fb/fb/floating-point.ts", "../../apache-arrow/fb/fb/interval-unit.ts", "../../apache-arrow/fb/fb/interval.ts", "../../apache-arrow/fb/fb/list.ts", "../../apache-arrow/fb/fb/map.ts", "../../apache-arrow/fb/fb/null.ts", "../../apache-arrow/fb/fb/struct_.ts", "../../apache-arrow/fb/fb/time.ts", "../../apache-arrow/fb/fb/timestamp.ts", "../../apache-arrow/fb/fb/union-mode.ts", "../../apache-arrow/fb/fb/union.ts", "../../apache-arrow/fb/fb/utf8.ts", "../../apache-arrow/fb/fb/type.ts", "../../apache-arrow/fb/fb/field.ts", "../../apache-arrow/fb/fb/schema.ts", "../../apache-arrow/fb/fb/footer.ts", "../../apache-arrow/schema.ts", "../../apache-arrow/ipc/metadata/ipc/metadata/file.ts", "../../apache-arrow/io/io/interfaces.ts", "../../apache-arrow/io/io/stream.ts", "../../apache-arrow/io/io/file.ts", "../../apache-arrow/util/util/int.ts", "../../apache-arrow/visitor/visitor/vectorloader.ts", "../../apache-arrow/builder/builder/binary.ts", "../../apache-arrow/builder/builder/bool.ts", "../../apache-arrow/builder/builder/date.ts", "../../apache-arrow/builder/builder/decimal.ts", "../../apache-arrow/builder/builder/dictionary.ts", "../../apache-arrow/builder/builder/fixedsizebinary.ts", "../../apache-arrow/builder/builder/fixedsizelist.ts", "../../apache-arrow/builder/builder/float.ts", "../../apache-arrow/builder/builder/interval.ts", "../../apache-arrow/builder/builder/int.ts", "../../apache-arrow/builder/builder/list.ts", "../../apache-arrow/builder/builder/map.ts", "../../apache-arrow/builder/builder/null.ts", "../../apache-arrow/builder/builder/struct.ts", "../../apache-arrow/builder/builder/timestamp.ts", "../../apache-arrow/builder/builder/time.ts", "../../apache-arrow/builder/builder/union.ts", "../../apache-arrow/builder/builder/utf8.ts", "../../apache-arrow/visitor/visitor/builderctor.ts", "../../apache-arrow/visitor/visitor/typecomparator.ts", "../../apache-arrow/factories.ts", "../../apache-arrow/util/util/recordbatch.ts", "../../apache-arrow/table.ts", "../../apache-arrow/recordbatch.ts", "../../apache-arrow/fb/fb/body-compression-method.ts", "../../apache-arrow/fb/fb/compression-type.ts", "../../apache-arrow/fb/fb/body-compression.ts", "../../apache-arrow/fb/fb/buffer.ts", "../../apache-arrow/fb/fb/field-node.ts", "../../apache-arrow/fb/fb/record-batch.ts", "../../apache-arrow/fb/fb/dictionary-batch.ts", "../../apache-arrow/fb/fb/message-header.ts", "../../apache-arrow/fb/fb/message.ts", "../../apache-arrow/visitor/visitor/typeassembler.ts", "../../apache-arrow/ipc/metadata/ipc/metadata/json.ts", "../../apache-arrow/ipc/metadata/ipc/metadata/message.ts", "../../apache-arrow/ipc/ipc/message.ts", "../../apache-arrow/ipc/ipc/reader.ts", "../../apache-arrow/visitor/visitor/vectorassembler.ts", "../../apache-arrow/ipc/ipc/writer.ts", "../../apache-arrow/io/whatwg/io/whatwg/iterable.ts", "../../apache-arrow/io/whatwg/io/whatwg/builder.ts", "../../apache-arrow/io/whatwg/io/whatwg/reader.ts", "../../apache-arrow/io/whatwg/io/whatwg/writer.ts", "../../apache-arrow/ipc/ipc/serialization.ts", "../../apache-arrow/Arrow.ts", "../../apache-arrow/Arrow.dom.ts", "../src/bindings/connection.ts", "../src/bindings/udf_runtime.ts", "../src/bindings/runtime.ts", "../src/bindings/file_stats.ts", "../src/json_typedef.ts", "../src/bindings/bindings_base.ts", "../src/log.ts", "../../wasm-feature-detect/dist/esm/index.js", "../src/platform.ts", "../src/utils/s3_helper.ts", "../src/bindings/runtime_browser.ts", "../src/bindings/duckdb-mvp.js", "../src/bindings/bindings_browser_base.ts", "../src/bindings/bindings_browser_mvp.ts", "../src/bindings/duckdb-eh.js", "../src/bindings/bindings_browser_eh.ts", "../src/targets/duckdb-browser-blocking.ts", "../src/parallel/async_connection.ts", "../src/parallel/worker_request.ts", "../src/parallel/async_bindings.ts", "../src/worker.ts", "../test/all_types.test.ts", "../test/httpfs_test.ts", "../test/bindings.test.ts", "../test/batch_stream.test.ts", "../test/batch_stream_async.test.ts", "../test/filesystem.test.ts", "../test/table_test.ts", "../test/insert_arrow.test.ts", "../test/insert_json.test.ts", "../test/insert_csv.test.ts", "../test/tokenizer.test.ts", "../test/tablenames.test.ts", "../test/regression/github_332.test.ts", "../test/regression/github_334.test.ts", "../test/regression/github_393.test.ts", "../test/regression/github_448.test.ts", "../test/regression/github_470.test.ts", "../test/regression/github_477.test.ts", "../test/regression/index.ts", "../test/udf.test.ts", "../test/index_browser.ts"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __classPrivateFieldIn;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        var desc = Object.getOwnPropertyDescriptor(m, k);\r\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n            desc = { enumerable: true, get: function() { return m[k]; } };\r\n        }\r\n        Object.defineProperty(o, k2, desc);\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    __classPrivateFieldIn = function (state, receiver) {\r\n        if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n        return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n    exporter(\"__classPrivateFieldIn\", __classPrivateFieldIn);\r\n});\r\n", "/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;", "import tslib from '../tslib.js';\r\nconst {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n} = tslib;\r\nexport {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export const SIZEOF_SHORT = 2;\r\nexport const SIZEOF_INT = 4;\r\nexport const FILE_IDENTIFIER_LENGTH = 4;\r\nexport const SIZE_PREFIX_LENGTH = 4;\r\n", "export const int32 = new Int32Array(2);\r\nexport const float32 = new Float32Array(int32.buffer);\r\nexport const float64 = new Float64Array(int32.buffer);\r\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n", "export function createLong(low, high) {\r\n    return Long.create(low, high);\r\n}\r\nexport class Long {\r\n    constructor(low, high) {\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n    }\r\n    static create(low, high) {\r\n        // Special-case zero to avoid GC overhead for default values\r\n        return low == 0 && high == 0 ? Long.ZERO : new Long(low, high);\r\n    }\r\n    toFloat64() {\r\n        return (this.low >>> 0) + this.high * 0x100000000;\r\n    }\r\n    equals(other) {\r\n        return this.low == other.low && this.high == other.high;\r\n    }\r\n}\r\nLong.ZERO = new Long(0, 0);\r\n", "export var Encoding;\r\n(function (Encoding) {\r\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\r\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\r\n})(Encoding || (Encoding = {}));\r\n", "import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nimport { int32, isLittleEndian, float32, float64 } from \"./utils\";\r\nimport { Encoding } from \"./encoding\";\r\nexport class ByteBuffer {\r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(bytes_) {\r\n        this.bytes_ = bytes_;\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size) {\r\n        return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n    clear() {\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes() {\r\n        return this.bytes_;\r\n    }\r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position() {\r\n        return this.position_;\r\n    }\r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position) {\r\n        this.position_ = position;\r\n    }\r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity() {\r\n        return this.bytes_.length;\r\n    }\r\n    readInt8(offset) {\r\n        return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n    readUint8(offset) {\r\n        return this.bytes_[offset];\r\n    }\r\n    readInt16(offset) {\r\n        return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n    readUint16(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n    readInt32(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n    readUint32(offset) {\r\n        return this.readInt32(offset) >>> 0;\r\n    }\r\n    readInt64(offset) {\r\n        return new Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n    }\r\n    readUint64(offset) {\r\n        return new Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n    }\r\n    readFloat32(offset) {\r\n        int32[0] = this.readInt32(offset);\r\n        return float32[0];\r\n    }\r\n    readFloat64(offset) {\r\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n        return float64[0];\r\n    }\r\n    writeInt8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeUint8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeInt16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeUint16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeInt32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeUint32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeInt64(offset, value) {\r\n        this.writeInt32(offset, value.low);\r\n        this.writeInt32(offset + 4, value.high);\r\n    }\r\n    writeUint64(offset, value) {\r\n        this.writeUint32(offset, value.low);\r\n        this.writeUint32(offset + 4, value.high);\r\n    }\r\n    writeFloat32(offset, value) {\r\n        float32[0] = value;\r\n        this.writeInt32(offset, int32[0]);\r\n    }\r\n    writeFloat64(offset, value) {\r\n        float64[0] = value;\r\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\r\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\r\n    }\r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier() {\r\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\r\n            FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n        }\r\n        let result = \"\";\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos, vtable_offset) {\r\n        const vtable = bb_pos - this.readInt32(bb_pos);\r\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t, offset) {\r\n        t.bb_pos = offset + this.readInt32(offset);\r\n        t.bb = this;\r\n        return t;\r\n    }\r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset, opt_encoding) {\r\n        offset += this.readInt32(offset);\r\n        const length = this.readInt32(offset);\r\n        let result = '';\r\n        let i = 0;\r\n        offset += SIZEOF_INT;\r\n        if (opt_encoding === Encoding.UTF8_BYTES) {\r\n            return this.bytes_.subarray(offset, offset + length);\r\n        }\r\n        while (i < length) {\r\n            let codePoint;\r\n            // Decode UTF-8\r\n            const a = this.readUint8(offset + i++);\r\n            if (a < 0xC0) {\r\n                codePoint = a;\r\n            }\r\n            else {\r\n                const b = this.readUint8(offset + i++);\r\n                if (a < 0xE0) {\r\n                    codePoint =\r\n                        ((a & 0x1F) << 6) |\r\n                            (b & 0x3F);\r\n                }\r\n                else {\r\n                    const c = this.readUint8(offset + i++);\r\n                    if (a < 0xF0) {\r\n                        codePoint =\r\n                            ((a & 0x0F) << 12) |\r\n                                ((b & 0x3F) << 6) |\r\n                                (c & 0x3F);\r\n                    }\r\n                    else {\r\n                        const d = this.readUint8(offset + i++);\r\n                        codePoint =\r\n                            ((a & 0x07) << 18) |\r\n                                ((b & 0x3F) << 12) |\r\n                                ((c & 0x3F) << 6) |\r\n                                (d & 0x3F);\r\n                    }\r\n                }\r\n            }\r\n            // Encode UTF-16\r\n            if (codePoint < 0x10000) {\r\n                result += String.fromCharCode(codePoint);\r\n            }\r\n            else {\r\n                codePoint -= 0x10000;\r\n                result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\r\n     * if a string then return a new one\r\n     *\r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o, offset) {\r\n        if (typeof o === 'string') {\r\n            return this.__string(offset);\r\n        }\r\n        return this.__union(o, offset);\r\n    }\r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset) {\r\n        return offset + this.readInt32(offset);\r\n    }\r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset) {\r\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\r\n    }\r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset) {\r\n        return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n    __has_identifier(ident) {\r\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: file identifier must be length ' +\r\n                FILE_IDENTIFIER_LENGTH);\r\n        }\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            if (listAccessor(i) !== null) {\r\n                ret.push(listAccessor(i));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            const val = listAccessor(i);\r\n            if (val !== null) {\r\n                ret.push(val.unpack());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n", "import { ByteBuffer } from \"./byte-buffer\";\r\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nexport class Builder {\r\n    /**\r\n     * Create a FlatBufferBuilder.\r\n     */\r\n    constructor(opt_initial_size) {\r\n        /** Minimum alignment encountered so far. */\r\n        this.minalign = 1;\r\n        /** The vtable for the current table. */\r\n        this.vtable = null;\r\n        /** The amount of fields we're actually using. */\r\n        this.vtable_in_use = 0;\r\n        /** Whether we are currently serializing a table. */\r\n        this.isNested = false;\r\n        /** Starting offset of the current struct/table. */\r\n        this.object_start = 0;\r\n        /** List of offsets of all vtables. */\r\n        this.vtables = [];\r\n        /** For the current vector being built. */\r\n        this.vector_num_elems = 0;\r\n        /** False omits default values from the serialized data */\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n        let initial_size;\r\n        if (!opt_initial_size) {\r\n            initial_size = 1024;\r\n        }\r\n        else {\r\n            initial_size = opt_initial_size;\r\n        }\r\n        /**\r\n         * @type {ByteBuffer}\r\n         * @private\r\n         */\r\n        this.bb = ByteBuffer.allocate(initial_size);\r\n        this.space = initial_size;\r\n    }\r\n    clear() {\r\n        this.bb.clear();\r\n        this.space = this.bb.capacity();\r\n        this.minalign = 1;\r\n        this.vtable = null;\r\n        this.vtable_in_use = 0;\r\n        this.isNested = false;\r\n        this.object_start = 0;\r\n        this.vtables = [];\r\n        this.vector_num_elems = 0;\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n    }\r\n    /**\r\n     * In order to save space, fields that are set to their default value\r\n     * don't get serialized into the buffer. Forcing defaults provides a\r\n     * way to manually disable this optimization.\r\n     *\r\n     * @param forceDefaults true always serializes default values\r\n     */\r\n    forceDefaults(forceDefaults) {\r\n        this.force_defaults = forceDefaults;\r\n    }\r\n    /**\r\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n     * called finish(). The actual data starts at the ByteBuffer's current position,\r\n     * not necessarily at 0.\r\n     */\r\n    dataBuffer() {\r\n        return this.bb;\r\n    }\r\n    /**\r\n     * Get the bytes representing the FlatBuffer. Only call this after you've\r\n     * called finish().\r\n     */\r\n    asUint8Array() {\r\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n    }\r\n    /**\r\n     * Prepare to write an element of `size` after `additional_bytes` have been\r\n     * written, e.g. if you write a string, you need to align such the int length\r\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n     * you need to do is alignment, `additional_bytes` will be 0.\r\n     *\r\n     * @param size This is the of the new element to write\r\n     * @param additional_bytes The padding size\r\n     */\r\n    prep(size, additional_bytes) {\r\n        // Track the biggest thing we've ever aligned to.\r\n        if (size > this.minalign) {\r\n            this.minalign = size;\r\n        }\r\n        // Find the amount of alignment needed such that `size` is properly\r\n        // aligned after `additional_bytes`\r\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n        // Reallocate the buffer if needed.\r\n        while (this.space < align_size + size + additional_bytes) {\r\n            const old_buf_size = this.bb.capacity();\r\n            this.bb = Builder.growByteBuffer(this.bb);\r\n            this.space += this.bb.capacity() - old_buf_size;\r\n        }\r\n        this.pad(align_size);\r\n    }\r\n    pad(byte_size) {\r\n        for (let i = 0; i < byte_size; i++) {\r\n            this.bb.writeInt8(--this.space, 0);\r\n        }\r\n    }\r\n    writeInt8(value) {\r\n        this.bb.writeInt8(this.space -= 1, value);\r\n    }\r\n    writeInt16(value) {\r\n        this.bb.writeInt16(this.space -= 2, value);\r\n    }\r\n    writeInt32(value) {\r\n        this.bb.writeInt32(this.space -= 4, value);\r\n    }\r\n    writeInt64(value) {\r\n        this.bb.writeInt64(this.space -= 8, value);\r\n    }\r\n    writeFloat32(value) {\r\n        this.bb.writeFloat32(this.space -= 4, value);\r\n    }\r\n    writeFloat64(value) {\r\n        this.bb.writeFloat64(this.space -= 8, value);\r\n    }\r\n    /**\r\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int8` to add the the buffer.\r\n     */\r\n    addInt8(value) {\r\n        this.prep(1, 0);\r\n        this.writeInt8(value);\r\n    }\r\n    /**\r\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int16` to add the the buffer.\r\n     */\r\n    addInt16(value) {\r\n        this.prep(2, 0);\r\n        this.writeInt16(value);\r\n    }\r\n    /**\r\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int32` to add the the buffer.\r\n     */\r\n    addInt32(value) {\r\n        this.prep(4, 0);\r\n        this.writeInt32(value);\r\n    }\r\n    /**\r\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int64` to add the the buffer.\r\n     */\r\n    addInt64(value) {\r\n        this.prep(8, 0);\r\n        this.writeInt64(value);\r\n    }\r\n    /**\r\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float32` to add the the buffer.\r\n     */\r\n    addFloat32(value) {\r\n        this.prep(4, 0);\r\n        this.writeFloat32(value);\r\n    }\r\n    /**\r\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float64` to add the the buffer.\r\n     */\r\n    addFloat64(value) {\r\n        this.prep(8, 0);\r\n        this.writeFloat64(value);\r\n    }\r\n    addFieldInt8(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt8(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt16(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt16(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || !value.equals(defaultValue)) {\r\n            this.addInt64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldOffset(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addOffset(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n     */\r\n    addFieldStruct(voffset, value, defaultValue) {\r\n        if (value != defaultValue) {\r\n            this.nested(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structures are always stored inline, they need to be created right\r\n     * where they're used.  You'll get this assertion failure if you\r\n     * created it elsewhere.\r\n     */\r\n    nested(obj) {\r\n        if (obj != this.offset()) {\r\n            throw new Error('FlatBuffers: struct must be serialized inline.');\r\n        }\r\n    }\r\n    /**\r\n     * Should not be creating any other object, string or vector\r\n     * while an object is being constructed\r\n     */\r\n    notNested() {\r\n        if (this.isNested) {\r\n            throw new Error('FlatBuffers: object serialization must not be nested.');\r\n        }\r\n    }\r\n    /**\r\n     * Set the current vtable at `voffset` to the current location in the buffer.\r\n     */\r\n    slot(voffset) {\r\n        if (this.vtable !== null)\r\n            this.vtable[voffset] = this.offset();\r\n    }\r\n    /**\r\n     * @returns Offset relative to the end of the buffer.\r\n     */\r\n    offset() {\r\n        return this.bb.capacity() - this.space;\r\n    }\r\n    /**\r\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n     * the end of the new buffer (since we build the buffer backwards).\r\n     *\r\n     * @param bb The current buffer with the existing data\r\n     * @returns A new byte buffer with the old data copied\r\n     * to it. The data is located at the end of the buffer.\r\n     *\r\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n     * it a uint8Array we need to suppress the type check:\r\n     * @suppress {checkTypes}\r\n     */\r\n    static growByteBuffer(bb) {\r\n        const old_buf_size = bb.capacity();\r\n        // Ensure we don't grow beyond what fits in an int.\r\n        if (old_buf_size & 0xC0000000) {\r\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n        }\r\n        const new_buf_size = old_buf_size << 1;\r\n        const nbb = ByteBuffer.allocate(new_buf_size);\r\n        nbb.setPosition(new_buf_size - old_buf_size);\r\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n        return nbb;\r\n    }\r\n    /**\r\n     * Adds on offset, relative to where it will be written.\r\n     *\r\n     * @param offset The offset to add.\r\n     */\r\n    addOffset(offset) {\r\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\r\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\r\n    }\r\n    /**\r\n     * Start encoding a new object in the buffer.  Users will not usually need to\r\n     * call this directly. The FlatBuffers compiler will generate helper methods\r\n     * that call this method internally.\r\n     */\r\n    startObject(numfields) {\r\n        this.notNested();\r\n        if (this.vtable == null) {\r\n            this.vtable = [];\r\n        }\r\n        this.vtable_in_use = numfields;\r\n        for (let i = 0; i < numfields; i++) {\r\n            this.vtable[i] = 0; // This will push additional elements as needed\r\n        }\r\n        this.isNested = true;\r\n        this.object_start = this.offset();\r\n    }\r\n    /**\r\n     * Finish off writing the object that is under construction.\r\n     *\r\n     * @returns The offset to the object inside `dataBuffer`\r\n     */\r\n    endObject() {\r\n        if (this.vtable == null || !this.isNested) {\r\n            throw new Error('FlatBuffers: endObject called without startObject');\r\n        }\r\n        this.addInt32(0);\r\n        const vtableloc = this.offset();\r\n        // Trim trailing zeroes.\r\n        let i = this.vtable_in_use - 1;\r\n        // eslint-disable-next-line no-empty\r\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\r\n        const trimmed_size = i + 1;\r\n        // Write out the current vtable.\r\n        for (; i >= 0; i--) {\r\n            // Offset relative to the start of the table.\r\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n        }\r\n        const standard_fields = 2; // The fields below:\r\n        this.addInt16(vtableloc - this.object_start);\r\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\r\n        this.addInt16(len);\r\n        // Search for an existing vtable that matches the current one.\r\n        let existing_vtable = 0;\r\n        const vt1 = this.space;\r\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\r\n            const vt2 = this.bb.capacity() - this.vtables[i];\r\n            if (len == this.bb.readInt16(vt2)) {\r\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\r\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n                        continue outer_loop;\r\n                    }\r\n                }\r\n                existing_vtable = this.vtables[i];\r\n                break;\r\n            }\r\n        }\r\n        if (existing_vtable) {\r\n            // Found a match:\r\n            // Remove the current vtable.\r\n            this.space = this.bb.capacity() - vtableloc;\r\n            // Point table to existing vtable.\r\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n        }\r\n        else {\r\n            // No match:\r\n            // Add the location of the current vtable to the list of vtables.\r\n            this.vtables.push(this.offset());\r\n            // Point table to current vtable.\r\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n        }\r\n        this.isNested = false;\r\n        return vtableloc;\r\n    }\r\n    /**\r\n     * Finalize a buffer, poiting to the given `root_table`.\r\n     */\r\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\r\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\r\n        if (opt_file_identifier) {\r\n            const file_identifier = opt_file_identifier;\r\n            this.prep(this.minalign, SIZEOF_INT +\r\n                FILE_IDENTIFIER_LENGTH + size_prefix);\r\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\r\n                throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    FILE_IDENTIFIER_LENGTH);\r\n            }\r\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n                this.writeInt8(file_identifier.charCodeAt(i));\r\n            }\r\n        }\r\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\r\n        this.addOffset(root_table);\r\n        if (size_prefix) {\r\n            this.addInt32(this.bb.capacity() - this.space);\r\n        }\r\n        this.bb.setPosition(this.space);\r\n    }\r\n    /**\r\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\r\n     */\r\n    finishSizePrefixed(root_table, opt_file_identifier) {\r\n        this.finish(root_table, opt_file_identifier, true);\r\n    }\r\n    /**\r\n     * This checks a required field has been set in a given table that has\r\n     * just been constructed.\r\n     */\r\n    requiredField(table, field) {\r\n        const table_start = this.bb.capacity() - table;\r\n        const vtable_start = table_start - this.bb.readInt32(table_start);\r\n        const ok = this.bb.readInt16(vtable_start + field) != 0;\r\n        // If this fails, the caller will show what field needs to be set.\r\n        if (!ok) {\r\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n        }\r\n    }\r\n    /**\r\n     * Start a new array/vector of objects.  Users usually will not call\r\n     * this directly. The FlatBuffers compiler will create a start/end\r\n     * method for vector types in generated code.\r\n     *\r\n     * @param elem_size The size of each element in the array\r\n     * @param num_elems The number of elements in the array\r\n     * @param alignment The alignment of the array\r\n     */\r\n    startVector(elem_size, num_elems, alignment) {\r\n        this.notNested();\r\n        this.vector_num_elems = num_elems;\r\n        this.prep(SIZEOF_INT, elem_size * num_elems);\r\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n    }\r\n    /**\r\n     * Finish off the creation of an array and all its elements. The array must be\r\n     * created with `startVector`.\r\n     *\r\n     * @returns The offset at which the newly created array\r\n     * starts.\r\n     */\r\n    endVector() {\r\n        this.writeInt32(this.vector_num_elems);\r\n        return this.offset();\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\r\n     * already been seen, we return the offset of the already written string\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createSharedString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        if (!this.string_maps) {\r\n            this.string_maps = new Map();\r\n        }\r\n        if (this.string_maps.has(s)) {\r\n            return this.string_maps.get(s);\r\n        }\r\n        const offset = this.createString(s);\r\n        this.string_maps.set(s, offset);\r\n        return offset;\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        let utf8;\r\n        if (s instanceof Uint8Array) {\r\n            utf8 = s;\r\n        }\r\n        else {\r\n            utf8 = [];\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                let codePoint;\r\n                // Decode UTF-16\r\n                const a = s.charCodeAt(i++);\r\n                if (a < 0xD800 || a >= 0xDC00) {\r\n                    codePoint = a;\r\n                }\r\n                else {\r\n                    const b = s.charCodeAt(i++);\r\n                    codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n                }\r\n                // Encode UTF-8\r\n                if (codePoint < 0x80) {\r\n                    utf8.push(codePoint);\r\n                }\r\n                else {\r\n                    if (codePoint < 0x800) {\r\n                        utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n                    }\r\n                    else {\r\n                        if (codePoint < 0x10000) {\r\n                            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n                        }\r\n                        else {\r\n                            utf8.push(((codePoint >> 18) & 0x07) | 0xF0, ((codePoint >> 12) & 0x3F) | 0x80);\r\n                        }\r\n                        utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n                    }\r\n                    utf8.push((codePoint & 0x3F) | 0x80);\r\n                }\r\n            }\r\n        }\r\n        this.addInt8(0);\r\n        this.startVector(1, utf8.length, 1);\r\n        this.bb.setPosition(this.space -= utf8.length);\r\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n            bytes[offset++] = utf8[i];\r\n        }\r\n        return this.endVector();\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function to pack an object\r\n     *\r\n     * @returns offset of obj\r\n     */\r\n    createObjectOffset(obj) {\r\n        if (obj === null) {\r\n            return 0;\r\n        }\r\n        if (typeof obj === 'string') {\r\n            return this.createString(obj);\r\n        }\r\n        else {\r\n            return obj.pack(this);\r\n        }\r\n    }\r\n    /**\r\n     * A helper function to pack a list of object\r\n     *\r\n     * @returns list of offsets of each non null object\r\n     */\r\n    createObjectOffsetList(list) {\r\n        const ret = [];\r\n        for (let i = 0; i < list.length; ++i) {\r\n            const val = list[i];\r\n            if (val !== null) {\r\n                ret.push(this.createObjectOffset(val));\r\n            }\r\n            else {\r\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    createStructOffsetList(list, startFunc) {\r\n        startFunc(this, list.length);\r\n        this.createObjectOffsetList(list);\r\n        return this.endVector();\r\n    }\r\n}\r\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import * as arrow from 'apache-arrow';\r\nimport { DuckDBBindings } from './bindings_interface';\r\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\r\n\r\n/** A thin helper to bind the connection id and talk record batches */\r\nexport class DuckDBConnection {\r\n    /** The bindings */\r\n    protected _bindings: DuckDBBindings;\r\n    /** The connection handle */\r\n    protected _conn: number;\r\n\r\n    /** Constructor */\r\n    constructor(bindings: DuckDBBindings, conn: number) {\r\n        this._bindings = bindings;\r\n        this._conn = conn;\r\n    }\r\n\r\n    /** Close a connection */\r\n    public close(): void {\r\n        this._bindings.disconnect(this._conn);\r\n    }\r\n\r\n    /** Brave souls may use this function to consume the underlying connection id */\r\n    public useUnsafe<R>(callback: (bindings: DuckDBBindings, conn: number) => R) {\r\n        return callback(this._bindings, this._conn);\r\n    }\r\n\r\n    /** Run a query */\r\n    public query<T extends { [key: string]: arrow.DataType } = any>(text: string): arrow.Table<T> {\r\n        const buffer = this._bindings.runQuery(this._conn, text);\r\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\r\n        console.assert(reader.isSync());\r\n        console.assert(reader.isFile());\r\n        return new arrow.Table(reader);\r\n    }\r\n\r\n    /** Send a query */\r\n    public async send<T extends { [key: string]: arrow.DataType } = any>(\r\n        text: string,\r\n    ): Promise<arrow.RecordBatchStreamReader<T>> {\r\n        let header = this._bindings.startPendingQuery(this._conn, text);\r\n        while (header == null) {\r\n            header = await new Promise((resolve, reject) => {\r\n                try {\r\n                    resolve(this._bindings.pollPendingQuery(this._conn));\r\n                } catch (e: any) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        }\r\n        const iter = new ResultStreamIterator(this._bindings, this._conn, header);\r\n        const reader = arrow.RecordBatchReader.from<T>(iter);\r\n        console.assert(reader.isSync());\r\n        console.assert(reader.isStream());\r\n        return reader;\r\n    }\r\n\r\n    /** Cancel a query that was sent earlier */\r\n    public cancelSent(): boolean {\r\n        return this._bindings.cancelPendingQuery(this._conn);\r\n    }\r\n\r\n    /** Get table names */\r\n    public getTableNames(query: string): string[] {\r\n        return this._bindings.getTableNames(this._conn, query);\r\n    }\r\n\r\n    /** Create a prepared statement */\r\n    public prepare<T extends { [key: string]: arrow.DataType } = any>(text: string): PreparedStatement {\r\n        const stmt = this._bindings.createPrepared(this._conn, text);\r\n        return new PreparedStatement<T>(this._bindings, this._conn, stmt);\r\n    }\r\n\r\n    /** Create a scalar function */\r\n    public createScalarFunction(name: string, returns: arrow.DataType, func: (...args: any[]) => void): void {\r\n        this._bindings.createScalarFunction(this._conn, name, returns, func);\r\n    }\r\n\r\n    /** Insert an arrow table */\r\n    public insertArrowTable(table: arrow.Table, options: ArrowInsertOptions): void {\r\n\tconst buffer = arrow.tableToIPC(table, 'stream');\r\n        this.insertArrowFromIPCStream(buffer, options);\r\n    }\r\n    /** Insert an arrow table from an ipc stream */\r\n    public insertArrowFromIPCStream(buffer: Uint8Array, options: ArrowInsertOptions): void {\r\n        this._bindings.insertArrowFromIPCStream(this._conn, buffer, options);\r\n    }\r\n\r\n    /** Inesrt csv file from path */\r\n    public insertCSVFromPath(path: string, options: CSVInsertOptions): void {\r\n        this._bindings.insertCSVFromPath(this._conn, path, options);\r\n    }\r\n    /** Insert json file from path */\r\n    public insertJSONFromPath(path: string, options: JSONInsertOptions): void {\r\n        this._bindings.insertJSONFromPath(this._conn, path, options);\r\n    }\r\n}\r\n\r\n/** A result stream iterator */\r\nexport class ResultStreamIterator implements Iterable<Uint8Array> {\r\n    /** First chunk? */\r\n    _first: boolean;\r\n    /** Reached end of stream? */\r\n    _depleted: boolean;\r\n\r\n    constructor(protected bindings: DuckDBBindings, protected conn: number, protected header: Uint8Array) {\r\n        this._first = true;\r\n        this._depleted = false;\r\n    }\r\n\r\n    next(): IteratorResult<Uint8Array> {\r\n        if (this._first) {\r\n            this._first = false;\r\n            return { done: false, value: this.header };\r\n        }\r\n        if (this._depleted) {\r\n            return { done: true, value: null };\r\n        }\r\n        const bufferI8 = this.bindings.fetchQueryResults(this.conn);\r\n        this._depleted = bufferI8.length == 0;\r\n        return {\r\n            done: this._depleted,\r\n            value: bufferI8,\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\n\r\n/** A thin helper to bind the prepared statement id*/\r\nexport class PreparedStatement<T extends { [key: string]: arrow.DataType } = any> {\r\n    /** The bindings */\r\n    protected readonly bindings: DuckDBBindings;\r\n    /** The connection id */\r\n    protected readonly connectionId: number;\r\n    /** The statement id */\r\n    protected readonly statementId: number;\r\n\r\n    /** Constructor */\r\n    constructor(bindings: DuckDBBindings, connectionId: number, statementId: number) {\r\n        this.bindings = bindings;\r\n        this.connectionId = connectionId;\r\n        this.statementId = statementId;\r\n    }\r\n\r\n    /** Close a prepared statement */\r\n    public close() {\r\n        this.bindings.closePrepared(this.connectionId, this.statementId);\r\n    }\r\n\r\n    /** Run a prepared statement */\r\n    public query(...params: any[]): arrow.Table<T> {\r\n        const buffer = this.bindings.runPrepared(this.connectionId, this.statementId, params);\r\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\r\n        console.assert(reader.isSync());\r\n        console.assert(reader.isFile());\r\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\r\n    }\r\n\r\n    /** Send a prepared statement */\r\n    public send(...params: any[]): arrow.RecordBatchStreamReader<T> {\r\n        const header = this.bindings.sendPrepared(this.connectionId, this.statementId, params);\r\n        const iter = new ResultStreamIterator(this.bindings, this.connectionId, header);\r\n        const reader = arrow.RecordBatchReader.from<T>(iter);\r\n        console.assert(reader.isSync());\r\n        console.assert(reader.isStream());\r\n        return reader as arrow.RecordBatchStreamReader;\r\n    }\r\n}\r\n", "import { DuckDBRuntime } from './runtime';\r\nimport { DuckDBModule } from './duckdb_module';\r\n\r\nconst TEXT_ENCODER = new TextEncoder();\r\nconst TEXT_DECODER = new TextDecoder('utf-8');\r\n\r\nfunction storeError(mod: DuckDBModule, response: number, message: string) {\r\n    const msgBuffer = TEXT_ENCODER.encode(message);\r\n    const heapAddr = mod._malloc(msgBuffer.byteLength);\r\n    const heapArray = mod.HEAPU8.subarray(heapAddr, heapAddr + msgBuffer.byteLength);\r\n    heapArray.set(msgBuffer);\r\n    mod.HEAPF64[(response >> 3) + 0] = 1;\r\n    mod.HEAPF64[(response >> 3) + 1] = heapAddr;\r\n    mod.HEAPF64[(response >> 3) + 2] = heapArray.byteLength;\r\n}\r\n\r\nfunction getTypeSize(ptype: string) {\r\n    switch (ptype) {\r\n        case 'UINT8':\r\n        case 'INT8':\r\n            return 1;\r\n        case 'INT32':\r\n        case 'FLOAT':\r\n            return 4;\r\n        case 'INT64':\r\n        case 'UINT64':\r\n        case 'DOUBLE':\r\n        case 'VARCHAR':\r\n            return 8;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nfunction ptrToArray(mod: DuckDBModule, ptr: number, ptype: string, n: number) {\r\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * getTypeSize(ptype));\r\n    switch (ptype) {\r\n        case 'UINT8':\r\n            return new Uint8Array(heap.buffer, heap.byteOffset, n);\r\n        case 'INT8':\r\n            return new Int8Array(heap.buffer, heap.byteOffset, n);\r\n        case 'INT32':\r\n            return new Int32Array(heap.buffer, heap.byteOffset, n);\r\n        case 'FLOAT':\r\n            return new Float32Array(heap.buffer, heap.byteOffset, n);\r\n        case 'DOUBLE':\r\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\r\n        case 'VARCHAR':\r\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\r\n        default:\r\n            return new Array<string | undefined | null>(0); // cough\r\n    }\r\n}\r\n\r\nfunction ptrToUint8Array(mod: DuckDBModule, ptr: number, n: number) {\r\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n);\r\n    return new Uint8Array(heap.buffer, heap.byteOffset, n);\r\n}\r\nfunction ptrToFloat64Array(mod: DuckDBModule, ptr: number, n: number) {\r\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * 8);\r\n    return new Float64Array(heap.buffer, heap.byteOffset, n);\r\n}\r\n\r\ninterface ArgumentTypeDescription {\r\n    name?: string;\r\n    sqlType: string;\r\n    physicalType: string;\r\n    validityBuffer?: number;\r\n    dataBuffer?: number;\r\n    lengthBuffer?: number;\r\n    children?: ArgumentTypeDescription[];\r\n}\r\n\r\ninterface ReturnTypeDescription {\r\n    sqlType: string;\r\n    physicalType: string;\r\n}\r\n\r\ninterface SchemaDescription {\r\n    rows: number;\r\n    args: ArgumentTypeDescription[];\r\n    ret: ReturnTypeDescription;\r\n}\r\n\r\ntype ArgumentResolver = (row: number) => any | null;\r\n\r\n// this is called from webdb.cc/CallScalarUDFFunction, changes here need to be matched there\r\nexport function callScalarUDF(\r\n    runtime: DuckDBRuntime,\r\n    mod: DuckDBModule,\r\n    response: number,\r\n    funcId: number,\r\n    descPtr: number,\r\n    descSize: number,\r\n    ptrsPtr: number,\r\n    ptrsSize: number,\r\n) {\r\n    try {\r\n        const udf = runtime._udfFunctions.get(funcId);\r\n        if (!udf) {\r\n            storeError(mod, response, 'Unknown UDF with id: ' + funcId);\r\n            return;\r\n        }\r\n        const rawDesc = TEXT_DECODER.decode(mod.HEAPU8.subarray(descPtr, descPtr + descSize));\r\n        const desc = JSON.parse(rawDesc) as SchemaDescription;\r\n        const ptrs = ptrToFloat64Array(mod, ptrsPtr, ptrsSize / 8);\r\n\r\n        const buildResolver = (arg: ArgumentTypeDescription): ArgumentResolver => {\r\n            let validity: Uint8Array | null = null;\r\n            if (arg.validityBuffer !== undefined) {\r\n                validity = ptrToUint8Array(mod, ptrs[arg.validityBuffer] as number, desc.rows);\r\n            }\r\n            switch (arg.physicalType) {\r\n                case 'VARCHAR': {\r\n                    if (arg.dataBuffer === null || arg.dataBuffer === undefined) {\r\n                        throw new Error('malformed data view, expected data buffer for VARCHAR argument');\r\n                    }\r\n                    if (arg.lengthBuffer === null || arg.lengthBuffer === undefined) {\r\n                        throw new Error('malformed data view, expected data length buffer for VARCHAR argument');\r\n                    }\r\n                    const raw = ptrToArray(mod, ptrs[arg.dataBuffer] as number, arg.physicalType, desc.rows);\r\n                    const strings: (string | null)[] = [];\r\n                    const stringLengths = ptrToFloat64Array(mod, ptrs[arg.lengthBuffer] as number, desc.rows);\r\n                    for (let j = 0; j < desc.rows; ++j) {\r\n                        if (validity != null && !validity[j]) {\r\n                            strings.push(null);\r\n                            continue;\r\n                        }\r\n                        const subarray = mod.HEAPU8.subarray(\r\n                            raw[j] as number,\r\n                            (raw[j] as number) + (stringLengths[j] as number),\r\n                        );\r\n                        const str = TEXT_DECODER.decode(subarray);\r\n                        strings.push(str);\r\n                    }\r\n                    return (row: number) => strings[row];\r\n                }\r\n                case 'STRUCT': {\r\n                    const tmp: any = {};\r\n                    const children: ArgumentResolver[] = [];\r\n                    for (let j = 0; j < (arg.children?.length || 0); ++j) {\r\n                        const attr = arg.children![j];\r\n                        const child = buildResolver(attr);\r\n                        children.push((row: number) => {\r\n                            tmp[attr.name!] = child(row);\r\n                        });\r\n                    }\r\n                    if (validity != null) {\r\n                        return (row: number) => {\r\n                            if (!validity![row]) {\r\n                                return null;\r\n                            }\r\n                            for (const resolver of children) {\r\n                                resolver(row);\r\n                            }\r\n                            return tmp;\r\n                        };\r\n                    } else {\r\n                        return (row: number) => {\r\n                            for (const resolver of children) {\r\n                                resolver(row);\r\n                            }\r\n                            return tmp;\r\n                        };\r\n                    }\r\n                }\r\n                default: {\r\n                    if (arg.dataBuffer === undefined) {\r\n                        throw new Error(\r\n                            'malformed data view, expected data buffer for argument of type: ' + arg.physicalType,\r\n                        );\r\n                    }\r\n                    const data = ptrToArray(mod, ptrs[arg.dataBuffer] as number, arg.physicalType, desc.rows);\r\n                    if (validity != null) {\r\n                        return (row: number) => (!validity![row] ? null : data[row]);\r\n                    } else {\r\n                        return (row: number) => data[row];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // Translate argument data\r\n        const argResolvers = [];\r\n        for (let i = 0; i < desc.args.length; ++i) {\r\n            argResolvers.push(buildResolver(desc.args[i]));\r\n        }\r\n\r\n        // Prepare result buffers\r\n        // TODO: we probably do not want to recreate those every time\r\n        const resultDataLen = desc.rows * getTypeSize(desc.ret.physicalType);\r\n        const resultDataPtr = mod._malloc(resultDataLen);\r\n        const resultData = ptrToArray(mod, resultDataPtr, desc.ret.physicalType, desc.rows);\r\n        const resultValidityPtr = mod._malloc(desc.rows);\r\n        const resultValidity = ptrToUint8Array(mod, resultValidityPtr, desc.rows);\r\n        if (resultData.length == 0 || resultValidity.length == 0) {\r\n            storeError(mod, response, \"Can't create physical arrays for result\");\r\n            return;\r\n        }\r\n        let rawResultData = resultData;\r\n        if (desc.ret.physicalType == 'VARCHAR') {\r\n            rawResultData = new Array<string | undefined | null>(desc.rows);\r\n        }\r\n\r\n        // Call the function\r\n        const args = [];\r\n        for (let i = 0; i < desc.args.length; ++i) {\r\n            args.push(null);\r\n        }\r\n        for (let i = 0; i < desc.rows; ++i) {\r\n            for (let j = 0; j < desc.args.length; ++j) {\r\n                args[j] = argResolvers[j](i);\r\n            }\r\n            const res = udf.func(...args);\r\n            rawResultData[i] = res;\r\n            resultValidity[i] = res === undefined || res === null ? 0 : 1;\r\n        }\r\n\r\n        // Encode return values\r\n        let resultLengthsPtr = 0;\r\n        switch (desc.ret.physicalType) {\r\n            case 'VARCHAR': {\r\n                // Allocate result buffers\r\n                const resultDataUTF8 = new Array<Uint8Array>(0); // cough\r\n                resultLengthsPtr = mod._malloc(desc.rows * getTypeSize('DOUBLE'));\r\n                const resultLengths = ptrToFloat64Array(mod, resultLengthsPtr, desc.rows);\r\n\r\n                // TODO: We need two loops to figure out the total length but maybe we can avoid the double allocation\r\n                let totalLength = 0;\r\n                for (let row = 0; row < desc.rows; ++row) {\r\n                    const utf8 = TEXT_ENCODER.encode((rawResultData as (string | null | undefined)[])[row] || '');\r\n                    resultDataUTF8.push(utf8);\r\n                    resultLengths[row] = utf8.length;\r\n                    totalLength += utf8.length;\r\n                }\r\n\r\n                // We malloc a buffer for the strings to live in for now\r\n                const resultStringPtr = mod._malloc(totalLength);\r\n                const resultStringBuf = mod.HEAPU8.subarray(resultStringPtr, resultStringPtr + totalLength);\r\n\r\n                // Now copy all the strings to the new buffer back to back\r\n                let writerOffset = 0;\r\n                for (let row = 0; row < desc.rows; ++row) {\r\n                    resultData[row] = writerOffset;\r\n                    const resultUTF8 = resultDataUTF8[row];\r\n                    const writer = resultStringBuf.subarray(writerOffset, writerOffset + resultUTF8.length);\r\n                    writer.set(resultUTF8);\r\n                    writerOffset += resultUTF8.length;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Need to store three pointers, data, validity and length\r\n        const retLen = 3 * 8;\r\n        const retPtr = mod._malloc(retLen);\r\n        const retBuffer = ptrToFloat64Array(mod, retPtr, 3);\r\n        retBuffer[0] = resultDataPtr;\r\n        retBuffer[1] = resultValidityPtr;\r\n        retBuffer[2] = resultLengthsPtr;\r\n\r\n        // Pack response\r\n        mod.HEAPF64[(response >> 3) + 0] = 0;\r\n        mod.HEAPF64[(response >> 3) + 1] = retPtr;\r\n        mod.HEAPF64[(response >> 3) + 2] = 0;\r\n    } catch (e: any) {\r\n        storeError(mod, response, e.toString());\r\n    }\r\n}\r\n", "import { DuckDBModule } from './duckdb_module';\r\nimport { UDFFunction } from './udf_function';\r\nimport * as udf_rt from './udf_runtime';\r\n\r\n/** Wrapper for TextDecoder to support shared array buffers */\r\nfunction TextDecoderWrapper(): (input?: BufferSource) => string {\r\n    const decoder = new TextDecoder();\r\n    return (data: any) => {\r\n        if (typeof SharedArrayBuffer !== 'undefined' && data.buffer instanceof SharedArrayBuffer) {\r\n            data = new Uint8Array(data);\r\n        }\r\n        return decoder.decode(data);\r\n    };\r\n}\r\n/** Helper to decode text */\r\nexport const decodeText = TextDecoderWrapper();\r\n\r\n/** Copy a buffer */\r\nexport function failWith(mod: DuckDBModule, msg: string): void {\r\n    console.error(`FAIL WITH: ${msg}`);\r\n    mod.ccall('duckdb_web_fail_with', null, ['string'], [msg]);\r\n}\r\n\r\n/** Copy a buffer */\r\nexport function copyBuffer(mod: DuckDBModule, begin: number, length: number): Uint8Array {\r\n    const buffer = mod.HEAPU8.subarray(begin, begin + length);\r\n    const copy = new Uint8Array(new ArrayBuffer(buffer.byteLength));\r\n    copy.set(buffer);\r\n    return copy;\r\n}\r\n\r\n/** Decode a string */\r\nexport function readString(mod: DuckDBModule, begin: number, length: number): string {\r\n    return decodeText(mod.HEAPU8.subarray(begin, begin + length));\r\n}\r\n\r\n/** The data protocol */\r\nexport enum DuckDBDataProtocol {\r\n    BUFFER = 0,\r\n    NODE_FS = 1,\r\n    BROWSER_FILEREADER = 2,\r\n    BROWSER_FSACCESS = 3,\r\n    HTTP = 4,\r\n    S3 = 5,\r\n}\r\n\r\n/** File flags for opening files*/\r\nexport enum FileFlags {\r\n    //! Open file with read access\r\n    FILE_FLAGS_READ = 1 << 0,\r\n    //! Open file with write access\r\n    FILE_FLAGS_WRITE = 1 << 1,\r\n    //! Use direct IO when reading/writing to the file\r\n    FILE_FLAGS_DIRECT_IO = 1 << 2,\r\n    //! Create file if not exists, can only be used together with WRITE\r\n    FILE_FLAGS_FILE_CREATE = 1 << 3,\r\n    //! Always create a new file. If a file exists, the file is truncated. Cannot be used together with CREATE.\r\n    FILE_FLAGS_FILE_CREATE_NEW = 1 << 4,\r\n    //! Open file in append mode\r\n    FILE_FLAGS_APPEND = 1 << 5,\r\n}\r\n\r\n/** Configuration for the AWS S3 Filesystem */\r\nexport interface S3Config {\r\n    region?: string;\r\n    endpoint?: string;\r\n    accessKeyId?: string;\r\n    secretAccessKey?: string;\r\n    sessionToken?: string;\r\n}\r\n\r\n/** An info for a file registered with DuckDB */\r\nexport interface DuckDBFileInfo {\r\n    cacheEpoch: number;\r\n    fileId: number;\r\n    fileName: string;\r\n    dataProtocol: DuckDBDataProtocol;\r\n    dataUrl: string | null;\r\n    allowFullHttpReads?: boolean;\r\n    s3Config?: S3Config;\r\n}\r\n\r\n/** Global info for all files registered with DuckDB */\r\nexport interface DuckDBGlobalFileInfo {\r\n    cacheEpoch: number;\r\n    allowFullHttpReads?: boolean;\r\n    s3Config?: S3Config;\r\n}\r\n\r\n/** Call a function with packed response buffer */\r\nexport function callSRet(\r\n    mod: DuckDBModule,\r\n    funcName: string,\r\n    argTypes: Array<Emscripten.JSType>,\r\n    args: Array<any>,\r\n): [number, number, number] {\r\n    const stackPointer = mod.stackSave();\r\n\r\n    // Allocate the packed response buffer\r\n    const response = mod.stackAlloc(3 * 8);\r\n    argTypes.unshift('number');\r\n    args.unshift(response);\r\n\r\n    // Do the call\r\n    mod.ccall(funcName, null, argTypes, args);\r\n\r\n    // Read the response\r\n    const status = mod.HEAPF64[(response >> 3) + 0];\r\n    const data = mod.HEAPF64[(response >> 3) + 1];\r\n    const dataSize = mod.HEAPF64[(response >> 3) + 2];\r\n\r\n    // Restore the stack\r\n    mod.stackRestore(stackPointer);\r\n    return [status, data, dataSize];\r\n}\r\n\r\n/** Drop response buffers */\r\nexport function dropResponseBuffers(mod: DuckDBModule): void {\r\n    mod.ccall('duckdb_web_clear_response', null, [], []);\r\n}\r\n\r\n/** The duckdb runtime */\r\nexport interface DuckDBRuntime {\r\n    _files?: Map<string, any>;\r\n    _udfFunctions: Map<number, UDFFunction>;\r\n\r\n    // Test a platform feature\r\n    testPlatformFeature(mod: DuckDBModule, feature: number): boolean;\r\n\r\n    // File APIs with dedicated file identifier\r\n    getDefaultDataProtocol(mod: DuckDBModule): number;\r\n    openFile(mod: DuckDBModule, fileId: number, flags: FileFlags): void;\r\n    syncFile(mod: DuckDBModule, fileId: number): void;\r\n    closeFile(mod: DuckDBModule, fileId: number): void;\r\n    getLastFileModificationTime(mod: DuckDBModule, fileId: number): number;\r\n    truncateFile(mod: DuckDBModule, fileId: number, newSize: number): void;\r\n    readFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\r\n    writeFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\r\n\r\n    // File APIs with path parameter\r\n    removeDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\r\n    checkDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\r\n    createDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\r\n    listDirectoryEntries(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\r\n    glob(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\r\n    moveFile(mod: DuckDBModule, fromPtr: number, fromLen: number, toPtr: number, toLen: number): void;\r\n    checkFile(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\r\n    removeFile(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\r\n\r\n    // Call a scalar UDF function\r\n    callScalarUDF(\r\n        mod: DuckDBModule,\r\n        response: number,\r\n        funcId: number,\r\n        descPtr: number,\r\n        descSize: number,\r\n        ptrsPtr: number,\r\n        ptrsSize: number,\r\n    ): void;\r\n}\r\n\r\nexport const DEFAULT_RUNTIME: DuckDBRuntime = {\r\n    _udfFunctions: new Map(),\r\n\r\n    testPlatformFeature: (_mod: DuckDBModule, _feature: number): boolean => false,\r\n    getDefaultDataProtocol: (_mod: DuckDBModule): number => DuckDBDataProtocol.BUFFER,\r\n    openFile: (_mod: DuckDBModule, _fileId: number, flags: FileFlags): void => {},\r\n    syncFile: (_mod: DuckDBModule, _fileId: number): void => {},\r\n    closeFile: (_mod: DuckDBModule, _fileId: number): void => {},\r\n    getLastFileModificationTime: (_mod: DuckDBModule, _fileId: number): number => {\r\n        return 0;\r\n    },\r\n    truncateFile: (_mod: DuckDBModule, _fileId: number, _newSize: number): void => {},\r\n    readFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\r\n        return 0;\r\n    },\r\n    writeFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\r\n        return 0;\r\n    },\r\n\r\n    removeDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\r\n    checkDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\r\n        return false;\r\n    },\r\n    createDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\r\n    listDirectoryEntries: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\r\n        return false;\r\n    },\r\n    glob: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\r\n    moveFile: (_mod: DuckDBModule, _fromPtr: number, _fromLen: number, _toPtr: number, _toLen: number): void => {},\r\n    checkFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\r\n        return false;\r\n    },\r\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\r\n    callScalarUDF: (\r\n        mod: DuckDBModule,\r\n        response: number,\r\n        funcId: number,\r\n        descPtr: number,\r\n        descSize: number,\r\n        ptrsPtr: number,\r\n        ptrsSize: number,\r\n    ): void => {\r\n        udf_rt.callScalarUDF(DEFAULT_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\r\n    },\r\n};\r\n", "export interface FileBlockStatistics {\r\n    /** The file reads cold */\r\n    file_reads_cold: number;\r\n    /** The file reads aheads */\r\n    file_reads_ahead: number;\r\n    /** The file reads cached */\r\n    file_reads_cached: number;\r\n    /** The file writes */\r\n    file_writes: number;\r\n    /** The page accesses */\r\n    page_accesses: number;\r\n    /** The page loads */\r\n    page_loads: number;\r\n}\r\n\r\n/** The file block statistics */\r\nexport class FileStatistics {\r\n    /** The cold file reads */\r\n    public totalFileReadsCold: number;\r\n    /** The file readaheads */\r\n    public totalFileReadsAhead: number;\r\n    /** The cached file reads */\r\n    public totalFileReadsCached: number;\r\n    /** The file writes */\r\n    public totalFileWrites: number;\r\n    /** The page accesses */\r\n    public totalPageAccesses: number;\r\n    /** The page loads */\r\n    public totalPageLoads: number;\r\n    /** The blocks */\r\n    public blockSize: number;\r\n    /** The blocks */\r\n    public blockStats: Uint8Array;\r\n\r\n    constructor(u8array: Uint8Array) {\r\n        const f64 = new Float64Array(u8array.buffer, u8array.byteOffset, u8array.byteLength / 8);\r\n        const blocks = new Uint8Array(new ArrayBuffer(u8array.byteLength));\r\n        blocks.set(u8array.subarray(7 * 8));\r\n        this.totalFileReadsCold = f64[0];\r\n        this.totalFileReadsAhead = f64[1];\r\n        this.totalFileReadsCached = f64[2];\r\n        this.totalFileWrites = f64[3];\r\n        this.totalPageAccesses = f64[4];\r\n        this.totalPageLoads = f64[5];\r\n        this.blockSize = f64[6];\r\n        this.blockStats = blocks;\r\n    }\r\n\r\n    /** The block stats */\r\n    public getBlockStats(index: number, out?: FileBlockStatistics): FileBlockStatistics {\r\n        out = out || {\r\n            file_reads_cold: 0,\r\n            file_reads_ahead: 0,\r\n            file_reads_cached: 0,\r\n            file_writes: 0,\r\n            page_accesses: 0,\r\n            page_loads: 0,\r\n        };\r\n        out.file_writes = this.blockStats[index * 3 + 0] & 0b1111;\r\n        out.file_reads_cold = this.blockStats[index * 3 + 0] >> 4;\r\n        out.file_reads_ahead = this.blockStats[index * 3 + 1] & 0b1111;\r\n        out.file_reads_cached = this.blockStats[index * 3 + 1] >> 4;\r\n        out.page_accesses = this.blockStats[index * 3 + 1] & 0b1111;\r\n        out.page_loads = this.blockStats[index * 3 + 1] >> 4;\r\n        return out;\r\n    }\r\n}\r\n", "import * as arrow from 'apache-arrow';\r\n\r\nexport interface SQLType {\r\n    /// The sql type\r\n    sqlType: string;\r\n    /// Is nullable?\r\n    nullable?: boolean;\r\n    /// Decimal precision\r\n    precision?: number;\r\n    /// Decimal scaling\r\n    scale?: number;\r\n    /// Timezone\r\n    timezone?: string;\r\n    /// Byte width (FixedSizeBinary)\r\n    byteWidth?: number;\r\n    /// Key type\r\n    keyType?: SQLType;\r\n    /// Value type\r\n    valueType?: SQLType;\r\n    /// Fields\r\n    fields?: SQLField[];\r\n}\r\n\r\nexport function arrowToSQLType(type: arrow.DataType): SQLType {\r\n    switch (type.typeId) {\r\n        case arrow.Type.Binary:\r\n            return { sqlType: 'binary' };\r\n        case arrow.Type.Bool:\r\n            return { sqlType: 'bool' };\r\n        case arrow.Type.Date:\r\n            return { sqlType: 'date' };\r\n        case arrow.Type.DateDay:\r\n            return { sqlType: 'date32[d]' };\r\n        case arrow.Type.DateMillisecond:\r\n            return { sqlType: 'date64[ms]' };\r\n        case arrow.Type.Decimal: {\r\n            const dec = type as arrow.Decimal;\r\n            return { sqlType: 'decimal', precision: dec.precision, scale: dec.scale };\r\n        }\r\n        case arrow.Type.Float:\r\n            return { sqlType: 'float' };\r\n        case arrow.Type.Float16:\r\n            return { sqlType: 'float16' };\r\n        case arrow.Type.Float32:\r\n            return { sqlType: 'float32' };\r\n        case arrow.Type.Float64:\r\n            return { sqlType: 'float64' };\r\n        case arrow.Type.Int:\r\n            return { sqlType: 'int32' };\r\n        case arrow.Type.Int16:\r\n            return { sqlType: 'int16' };\r\n        case arrow.Type.Int32:\r\n            return { sqlType: 'int32' };\r\n        case arrow.Type.Int64:\r\n            return { sqlType: 'int64' };\r\n        case arrow.Type.Uint16:\r\n            return { sqlType: 'uint16' };\r\n        case arrow.Type.Uint32:\r\n            return { sqlType: 'uint32' };\r\n        case arrow.Type.Uint64:\r\n            return { sqlType: 'uint64' };\r\n        case arrow.Type.Uint8:\r\n            return { sqlType: 'uint8' };\r\n        case arrow.Type.IntervalDayTime:\r\n            return { sqlType: 'interval[dt]' };\r\n        case arrow.Type.IntervalYearMonth:\r\n            return { sqlType: 'interval[m]' };\r\n        case arrow.Type.List: {\r\n            const list = type as arrow.List;\r\n            return {\r\n                sqlType: 'list',\r\n                valueType: arrowToSQLType(list.valueType),\r\n            };\r\n        }\r\n        case arrow.Type.FixedSizeBinary: {\r\n            const bin = type as arrow.FixedSizeBinary;\r\n            return { sqlType: 'fixedsizebinary', byteWidth: bin.byteWidth };\r\n        }\r\n        case arrow.Type.Null:\r\n            return { sqlType: 'null' };\r\n        case arrow.Type.Utf8:\r\n            return { sqlType: 'utf8' };\r\n        case arrow.Type.Struct: {\r\n            const struct_ = type as arrow.Struct;\r\n            return {\r\n                sqlType: 'struct',\r\n                fields: struct_.children.map(c => arrowToSQLField(c.name, c.type)),\r\n            };\r\n        }\r\n        case arrow.Type.Map: {\r\n            const map_ = type as arrow.Map_;\r\n            return {\r\n                sqlType: 'map',\r\n                keyType: arrowToSQLType(map_.keyType),\r\n                valueType: arrowToSQLType(map_.valueType),\r\n            };\r\n        }\r\n        case arrow.Type.Time:\r\n            return { sqlType: 'time[s]' };\r\n        case arrow.Type.TimeMicrosecond:\r\n            return { sqlType: 'time[us]' };\r\n        case arrow.Type.TimeMillisecond:\r\n            return { sqlType: 'time[ms]' };\r\n        case arrow.Type.TimeNanosecond:\r\n            return { sqlType: 'time[ns]' };\r\n        case arrow.Type.TimeSecond:\r\n            return { sqlType: 'time[s]' };\r\n        case arrow.Type.Timestamp: {\r\n            const ts = type as arrow.Timestamp;\r\n            return { sqlType: 'timestamp', timezone: ts.timezone || undefined };\r\n        }\r\n        case arrow.Type.TimestampSecond: {\r\n            const ts = type as arrow.TimestampSecond;\r\n            return { sqlType: 'timestamp[s]', timezone: ts.timezone || undefined };\r\n        }\r\n        case arrow.Type.TimestampMicrosecond: {\r\n            const ts = type as arrow.TimestampMicrosecond;\r\n            return { sqlType: 'timestamp[us]', timezone: ts.timezone || undefined };\r\n        }\r\n        case arrow.Type.TimestampNanosecond: {\r\n            const ts = type as arrow.TimestampNanosecond;\r\n            return { sqlType: 'timestamp[ns]', timezone: ts.timezone || undefined };\r\n        }\r\n        case arrow.Type.TimestampMillisecond: {\r\n            const ts = type as arrow.TimestampMillisecond;\r\n            return { sqlType: 'timestamp[ms]', timezone: ts.timezone || undefined };\r\n        }\r\n    }\r\n    throw new Error(`unsupported arrow type: ${type.toString()}`);\r\n}\r\n\r\nexport type SQLField = SQLType & { name: string };\r\n\r\nexport function arrowToSQLField(name: string, type: arrow.DataType): SQLField {\r\n    const t = arrowToSQLType(type) as SQLField;\r\n    t.name = name;\r\n    return t;\r\n}\r\n", "import { DuckDBModule, PThread } from './duckdb_module';\r\nimport { DuckDBConfig } from './config';\r\nimport { Logger } from '../log';\r\nimport { InstantiationProgress } from './progress';\r\nimport { DuckDBBindings } from './bindings_interface';\r\nimport { DuckDBConnection } from './connection';\r\nimport { StatusCode } from '../status';\r\nimport { dropResponseBuffers, DuckDBRuntime, readString, callSRet, copyBuffer, DuckDBDataProtocol } from './runtime';\r\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\r\nimport { ScriptTokens } from './tokens';\r\nimport { FileStatistics } from './file_stats';\r\nimport { arrowToSQLField, arrowToSQLType } from '../json_typedef';\r\nimport { WebFile } from './web_file';\r\nimport { UDFFunction, UDFFunctionDeclaration } from './udf_function';\r\nimport * as arrow from 'apache-arrow';\r\n\r\nconst TEXT_ENCODER = new TextEncoder();\r\n\r\ndeclare global {\r\n    // eslint-disable-next-line no-var\r\n    var DUCKDB_RUNTIME: any;\r\n}\r\n\r\n/** A DuckDB Feature */\r\nexport enum DuckDBFeature {\r\n    WASM_EXCEPTIONS = 1 << 0,\r\n    WASM_THREADS = 1 << 1,\r\n    WASM_SIMD = 1 << 2,\r\n    WASM_BULK_MEMORY = 1 << 3,\r\n    EMIT_BIGINT = 1 << 4,\r\n}\r\n\r\n/** The proxy for either the browser- order node-based DuckDB API */\r\nexport abstract class DuckDBBindingsBase implements DuckDBBindings {\r\n    /** The logger */\r\n    protected readonly _logger: Logger;\r\n    /** Backend-dependent native-glue code for DuckDB */\r\n    protected readonly _runtime: DuckDBRuntime;\r\n    /** The instance */\r\n    protected _instance: DuckDBModule | null = null;\r\n    /** The loading promise */\r\n    protected _initPromise: Promise<void> | null = null;\r\n    /** The resolver for the open promise (called by onRuntimeInitialized) */\r\n    protected _initPromiseResolver: () => void = () => {};\r\n    /** The next UDF id */\r\n    protected _nextUDFId: number;\r\n\r\n    constructor(logger: Logger, runtime: DuckDBRuntime) {\r\n        this._logger = logger;\r\n        this._runtime = runtime;\r\n        this._nextUDFId = 1;\r\n    }\r\n\r\n    /** Get the logger */\r\n    public get logger(): Logger {\r\n        return this._logger;\r\n    }\r\n    /** Get the instance */\r\n    public get mod(): DuckDBModule {\r\n        return this._instance!;\r\n    }\r\n    /** Get the instance */\r\n    public get pthread(): PThread | null {\r\n        return this.mod.PThread || null;\r\n    }\r\n\r\n    /** Instantiate the module */\r\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\r\n    /** Instantiate the module */\r\n    protected onInstantiationProgress: ((p: InstantiationProgress) => void)[] = [];\r\n    /** Instantiate the database */\r\n    public async instantiate(onProgress: (progress: InstantiationProgress) => void = _ => {}): Promise<this> {\r\n        // Already opened?\r\n        if (this._instance != null) {\r\n            return this;\r\n        }\r\n        // Open in progress?\r\n        if (this._initPromise != null) {\r\n            this.onInstantiationProgress.push(onProgress);\r\n            await this._initPromise;\r\n        }\r\n        // Create a promise that we can await\r\n        this._initPromise = new Promise(resolve => {\r\n            this._initPromiseResolver = resolve;\r\n        });\r\n        // Register progress handler\r\n        this.onInstantiationProgress = [onProgress];\r\n        // Initialize duckdb\r\n        this._instance = await this.instantiateImpl({\r\n            print: console.log.bind(console),\r\n            printErr: console.log.bind(console),\r\n            onRuntimeInitialized: this._initPromiseResolver,\r\n        });\r\n        // Wait for onRuntimeInitialized\r\n        await this._initPromise;\r\n        this._initPromise = null;\r\n        // Remove own progress callback\r\n        this.onInstantiationProgress = this.onInstantiationProgress.filter(x => x != onProgress);\r\n        return this;\r\n    }\r\n    /** Open a database with a config */\r\n    public open(config: DuckDBConfig): void {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_open', ['string'], [JSON.stringify(config)]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n\r\n    /** Reset the database */\r\n    public reset(): void {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_reset', [], []);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n\r\n    /** Get the version */\r\n    public getVersion(): string {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_version', [], []);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const version = readString(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return version;\r\n    }\r\n    /** Get the feature flags */\r\n    public getFeatureFlags(): number {\r\n        return this.mod.ccall('duckdb_web_get_feature_flags', 'number', [], []);\r\n    }\r\n\r\n    /** Tokenize a script */\r\n    public tokenize(text: string): ScriptTokens {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_tokenize', ['string'], [text]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const res = readString(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return JSON.parse(res) as ScriptTokens;\r\n    }\r\n\r\n    /** Connect to database */\r\n    public connect(): DuckDBConnection {\r\n        const conn = this.mod.ccall('duckdb_web_connect', 'number', [], []);\r\n        return new DuckDBConnection(this, conn);\r\n    }\r\n    /** Disconnect from database */\r\n    public disconnect(conn: number): void {\r\n        this.mod.ccall('duckdb_web_disconnect', null, ['number'], [conn]);\r\n        if (this.pthread) {\r\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\r\n                worker.postMessage({\r\n                    cmd: 'dropUDFFunctions',\r\n                    connectionId: conn,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Send a query and return the full result */\r\n    public runQuery(conn: number, text: string): Uint8Array {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_run', ['number', 'string'], [conn, text]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const res = copyBuffer(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return res;\r\n    }\r\n    /**\r\n     *  Start a pending query asynchronously.\r\n     *  This method returns either the arrow ipc schema or null.\r\n     *  On null, the query has to be executed using `pollPendingQuery` until that returns != null.\r\n     *  Results can then be fetched using `fetchQueryResults`\r\n     */\r\n    public startPendingQuery(conn: number, text: string): Uint8Array | null {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_pending_query_start', ['number', 'string'], [conn, text]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        if (d == 0) {\r\n            return null;\r\n        }\r\n        const res = copyBuffer(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return res;\r\n    }\r\n    /** Poll a pending query */\r\n    public pollPendingQuery(conn: number): Uint8Array | null {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_pending_query_poll', ['number'], [conn]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        if (d == 0) {\r\n            return null;\r\n        }\r\n        const res = copyBuffer(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return res;\r\n    }\r\n    /** Cancel a pending query */\r\n    public cancelPendingQuery(conn: number): boolean {\r\n        return this.mod.ccall('duckdb_web_pending_query_cancel', 'boolean', ['number'], [conn]);\r\n    }\r\n    /** Fetch query results */\r\n    public fetchQueryResults(conn: number): Uint8Array {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_fetch_results', ['number'], [conn]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const res = copyBuffer(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return res;\r\n    }\r\n    /** Get table names */\r\n    public getTableNames(conn: number, text: string): string[] {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_tablenames', ['number', 'string'], [conn, text]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const res = readString(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return JSON.parse(res) as string[];\r\n    }\r\n\r\n    /** Create a scalar function */\r\n    public createScalarFunction(\r\n        conn: number,\r\n        name: string,\r\n        returns: arrow.DataType,\r\n        func: (...args: any[]) => void,\r\n    ): void {\r\n        const decl: UDFFunctionDeclaration = {\r\n            functionId: this._nextUDFId,\r\n            name: name,\r\n            returnType: arrowToSQLType(returns),\r\n        };\r\n        const def: UDFFunction = {\r\n            functionId: decl.functionId,\r\n            connectionId: conn,\r\n            name: name,\r\n            returnType: returns,\r\n            func,\r\n        };\r\n        this._nextUDFId += 1;\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_udf_scalar_create',\r\n            ['number', 'string'],\r\n            [conn, JSON.stringify(decl)],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n        globalThis.DUCKDB_RUNTIME._udfFunctions = (globalThis.DUCKDB_RUNTIME._udfFunctions || new Map()).set(\r\n            def.functionId,\r\n            def,\r\n        );\r\n        if (this.pthread) {\r\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\r\n                worker.postMessage({\r\n                    cmd: 'registerUDFFunction',\r\n                    udf: def,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Prepare a statement and return its identifier */\r\n    public createPrepared(conn: number, text: string): number {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_create', ['number', 'string'], [conn, text]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n        return d;\r\n    }\r\n\r\n    /** Close a prepared statement */\r\n    public closePrepared(conn: number, statement: number): void {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_close', ['number', 'number'], [conn, statement]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n\r\n    /** Execute a prepared statement and return the full result */\r\n    public runPrepared(conn: number, statement: number, params: any[]): Uint8Array {\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_prepared_run',\r\n            ['number', 'number', 'string'],\r\n            [conn, statement, JSON.stringify(params)],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const res = copyBuffer(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return res;\r\n    }\r\n\r\n    /** Execute a prepared statement and stream the result */\r\n    public sendPrepared(conn: number, statement: number, params: any[]): Uint8Array {\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_prepared_send',\r\n            ['number', 'number', 'string'],\r\n            [conn, statement, JSON.stringify(params)],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const res = copyBuffer(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        return res;\r\n    }\r\n\r\n    /** Insert record batches from an arrow ipc stream */\r\n    public insertArrowFromIPCStream(conn: number, buffer: Uint8Array, options?: ArrowInsertOptions): void {\r\n        if (buffer.length == 0) return;\r\n        // Store buffer\r\n        const bufferPtr = this.mod._malloc(buffer.length);\r\n        const bufferOfs = this.mod.HEAPU8.subarray(bufferPtr, bufferPtr + buffer.length);\r\n        bufferOfs.set(buffer);\r\n        const optJSON = options ? JSON.stringify(options) : '';\r\n\r\n        // Call wasm function\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_insert_arrow_from_ipc_stream',\r\n            ['number', 'number', 'number', 'string'],\r\n            [conn, bufferPtr, buffer.length, optJSON],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n    }\r\n\r\n    /** Insert csv from path */\r\n    public insertCSVFromPath(conn: number, path: string, options: CSVInsertOptions): void {\r\n        // Stringify options\r\n        if (options.columns !== undefined) {\r\n            options.columnsFlat = [];\r\n            for (const k in options.columns) {\r\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\r\n            }\r\n        }\r\n        const opt = { ...options } as any;\r\n        opt.columns = opt.columnsFlat;\r\n        delete opt.columnsFlat;\r\n        const optJSON = JSON.stringify(opt);\r\n\r\n        // Call wasm function\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_insert_csv_from_path',\r\n            ['number', 'string', 'string'],\r\n            [conn, path, optJSON],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n    }\r\n    /** Insert json from path */\r\n    public insertJSONFromPath(conn: number, path: string, options: JSONInsertOptions): void {\r\n        // Stringify options\r\n        if (options.columns !== undefined) {\r\n            options.columnsFlat = [];\r\n            for (const k in options.columns) {\r\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\r\n            }\r\n        }\r\n        const opt = { ...options } as any;\r\n        opt.columns = opt.columnsFlat;\r\n        delete opt.columnsFlat;\r\n        const optJSON = JSON.stringify(opt);\r\n\r\n        // Call wasm function\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_insert_json_from_path',\r\n            ['number', 'string', 'string'],\r\n            [conn, path, optJSON],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n    }\r\n    /** Glob file infos */\r\n    public globFiles(path: string): WebFile[] {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_glob_file_infos', ['string'], [path]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const infoStr = readString(this.mod, d, n);\r\n        dropResponseBuffers(this.mod);\r\n        const info = JSON.parse(infoStr) as WebFile[];\r\n        if (info == null) {\r\n            return [];\r\n        }\r\n        return info;\r\n    }\r\n    /** Register a file object URL */\r\n    public registerFileURL(name: string, url: string, proto: DuckDBDataProtocol, directIO = false): void {\r\n        if (url === undefined) {\r\n            url = name;\r\n        }\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_fs_register_file_url',\r\n            ['string', 'string'],\r\n            [name, url, proto, directIO],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n    /** Register file text */\r\n    public registerFileText(name: string, text: string): void {\r\n        const buffer = TEXT_ENCODER.encode(text);\r\n        this.registerFileBuffer(name, buffer);\r\n    }\r\n    /** Register a file buffer */\r\n    public registerFileBuffer(name: string, buffer: Uint8Array): void {\r\n        const ptr = this.mod._malloc(buffer.length);\r\n        const dst = this.mod.HEAPU8.subarray(ptr, ptr + buffer.length);\r\n        dst.set(buffer);\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_fs_register_file_buffer',\r\n            ['string', 'number', 'number'],\r\n            [name, ptr, buffer.length],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n    /** Register a file object URL */\r\n    public registerFileHandle<HandleType>(\r\n        name: string,\r\n        handle: HandleType,\r\n        protocol: DuckDBDataProtocol,\r\n        directIO: boolean,\r\n    ): void {\r\n        const [s, d, n] = callSRet(\r\n            this.mod,\r\n            'duckdb_web_fs_register_file_url',\r\n            ['string', 'string', 'number', 'boolean'],\r\n            [name, name, protocol, directIO],\r\n        );\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n        globalThis.DUCKDB_RUNTIME._files = (globalThis.DUCKDB_RUNTIME._files || new Map()).set(name, handle);\r\n        if (this.pthread) {\r\n            for (const worker of this.pthread.runningWorkers) {\r\n                worker.postMessage({\r\n                    cmd: 'registerFileHandle',\r\n                    fileName: name,\r\n                    fileHandle: handle,\r\n                });\r\n            }\r\n            for (const worker of this.pthread.unusedWorkers) {\r\n                worker.postMessage({\r\n                    cmd: 'dropFileHandle',\r\n                    fileName: name,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /** Drop file */\r\n    public dropFile(name: string): void {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_file', ['string'], [name]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n    /** Drop files */\r\n    public dropFiles(): void {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_files', [], []);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n    /** Flush all files */\r\n    public flushFiles(): void {\r\n        this.mod.ccall('duckdb_web_flush_files', null, [], []);\r\n    }\r\n    /** Write a file to a path */\r\n    public copyFileToPath(name: string, path: string): void {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_path', ['string', 'string'], [name, path]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        dropResponseBuffers(this.mod);\r\n    }\r\n    /** Write a file to a buffer */\r\n    public copyFileToBuffer(name: string): Uint8Array {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_buffer', ['string'], [name]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        const buffer = this.mod.HEAPU8.subarray(d, d + n);\r\n        const copy = new Uint8Array(buffer.length);\r\n        copy.set(buffer);\r\n        dropResponseBuffers(this.mod);\r\n        return copy;\r\n    }\r\n\r\n    /** Enable tracking of file statistics */\r\n    public collectFileStatistics(file: string, enable: boolean): void {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_collect_file_stats', ['string', 'boolean'], [file, enable]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n    }\r\n    /** Export file statistics */\r\n    public exportFileStatistics(file: string): FileStatistics {\r\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_export_file_stats', ['string'], [file]);\r\n        if (s !== StatusCode.SUCCESS) {\r\n            throw new Error(readString(this.mod, d, n));\r\n        }\r\n        return new FileStatistics(this.mod.HEAPU8.subarray(d, d + n));\r\n    }\r\n}\r\n", "export enum LogLevel {\r\n    NONE = 0,\r\n    DEBUG = 1,\r\n    INFO = 2,\r\n    WARNING = 3,\r\n    ERROR = 4,\r\n}\r\n\r\nexport enum LogTopic {\r\n    NONE = 0,\r\n    CONNECT = 1,\r\n    DISCONNECT = 2,\r\n    OPEN = 3,\r\n    QUERY = 4,\r\n    INSTANTIATE = 5,\r\n}\r\n\r\nexport enum LogEvent {\r\n    NONE = 0,\r\n    OK = 1,\r\n    ERROR = 2,\r\n    START = 3,\r\n    RUN = 4,\r\n    CAPTURE = 5,\r\n}\r\n\r\nexport enum LogOrigin {\r\n    NONE = 0,\r\n    WEB_WORKER = 1,\r\n    NODE_WORKER = 2,\r\n    BINDINGS = 3,\r\n    ASYNC_DUCKDB = 4,\r\n}\r\n\r\nexport type LogEntry<O, T, E, V> = {\r\n    readonly timestamp: Date;\r\n    readonly level: LogLevel;\r\n    readonly origin: O;\r\n    readonly topic: T;\r\n    readonly event: E;\r\n    readonly value: V;\r\n};\r\n\r\nexport type LogEntryVariant =\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.INSTANTIATE, LogEvent.ERROR, string>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.START, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.OK, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.ERROR, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.OK, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.ERROR, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.OK, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.ERROR, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.START, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.OK, void>\r\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.ERROR, void>\r\n    | LogEntry<LogOrigin.ASYNC_DUCKDB, LogTopic.QUERY, LogEvent.RUN, string>;\r\n\r\nexport interface Logger {\r\n    log(entry: LogEntryVariant): void;\r\n}\r\n\r\nexport class VoidLogger implements Logger {\r\n    public log(_entry: LogEntryVariant): void {}\r\n}\r\n\r\nexport class ConsoleLogger implements Logger {\r\n    constructor(protected level: LogLevel = LogLevel.INFO) {}\r\n    public log(entry: LogEntryVariant): void {\r\n        if (entry.level >= this.level) {\r\n            console.log(entry);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getLogLevelLabel(level: LogLevel): string {\r\n    switch (level) {\r\n        case LogLevel.NONE:\r\n            return 'NONE';\r\n        case LogLevel.DEBUG:\r\n            return 'DEBUG';\r\n        case LogLevel.INFO:\r\n            return 'INFO';\r\n        case LogLevel.WARNING:\r\n            return 'WARNING';\r\n        case LogLevel.ERROR:\r\n            return 'ERROR';\r\n        default:\r\n            return '?';\r\n    }\r\n}\r\n\r\nexport function getLogEventLabel(event: LogEvent): string {\r\n    switch (event) {\r\n        case LogEvent.NONE:\r\n            return 'NONE';\r\n        case LogEvent.OK:\r\n            return 'OK';\r\n        case LogEvent.ERROR:\r\n            return 'ERROR';\r\n        case LogEvent.START:\r\n            return 'START';\r\n        case LogEvent.RUN:\r\n            return 'RUN';\r\n        case LogEvent.CAPTURE:\r\n            return 'CAPTURE';\r\n        default:\r\n            return '?';\r\n    }\r\n}\r\n\r\nexport function getLogTopicLabel(topic: LogTopic): string {\r\n    switch (topic) {\r\n        case LogTopic.CONNECT:\r\n            return 'CONNECT';\r\n        case LogTopic.DISCONNECT:\r\n            return 'DISCONNECT';\r\n        case LogTopic.INSTANTIATE:\r\n            return 'INSTANTIATE';\r\n        case LogTopic.OPEN:\r\n            return 'OPEN';\r\n        case LogTopic.QUERY:\r\n            return 'QUERY';\r\n        default:\r\n            return '?';\r\n    }\r\n}\r\n\r\nexport function getLogOriginLabel(origin: LogOrigin): string {\r\n    switch (origin) {\r\n        case LogOrigin.NONE:\r\n            return 'NONE';\r\n        case LogOrigin.WEB_WORKER:\r\n            return 'WEB WORKER';\r\n        case LogOrigin.NODE_WORKER:\r\n            return 'NODE WORKER';\r\n        case LogOrigin.BINDINGS:\r\n            return 'DUCKDB BINDINGS';\r\n        case LogOrigin.ASYNC_DUCKDB:\r\n            return 'DUCKDB';\r\n        default:\r\n            return '?';\r\n    }\r\n}\r\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,10,2,95,1,125,0,96,0,1,107,0,3,2,1,1,10,12,1,10,0,67,0,0,0,0,251,7,0,11])),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n", "import * as check from 'wasm-feature-detect';\r\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\r\n\r\n// Platform check taken from here:\r\n// https://github.com/xtermjs/xterm.js/blob/master/src/common/Platform.ts#L21\r\n\r\ninterface INavigator {\r\n    userAgent: string;\r\n    language: string;\r\n    platform: string;\r\n}\r\n\r\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\r\n// we want this module to live in common.\r\ndeclare const navigator: INavigator;\r\n\r\nexport const isNode = () => (typeof navigator === 'undefined' ? true : false);\r\nconst userAgent = () => (isNode() ? 'node' : navigator.userAgent);\r\nexport const isFirefox = () => userAgent().includes('Firefox');\r\nexport const isSafari = () => /^((?!chrome|android).)*safari/i.test(userAgent());\r\n\r\nexport interface DuckDBBundles {\r\n    mvp: {\r\n        mainModule: string;\r\n        mainWorker: string;\r\n    };\r\n    eh?: {\r\n        mainModule: string;\r\n        mainWorker: string;\r\n    };\r\n    coi?: {\r\n        mainModule: string;\r\n        mainWorker: string;\r\n        pthreadWorker: string;\r\n    };\r\n}\r\n\r\nexport function getJsDelivrBundles(): DuckDBBundles {\r\n    const jsdelivr_dist_url = `https://cdn.jsdelivr.net/npm/${PACKAGE_NAME}@${PACKAGE_VERSION}/dist/`;\r\n    return {\r\n        mvp: {\r\n            mainModule: `${jsdelivr_dist_url}duckdb-mvp.wasm`,\r\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-mvp.worker.js`,\r\n        },\r\n        eh: {\r\n            mainModule: `${jsdelivr_dist_url}duckdb-eh.wasm`,\r\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-eh.worker.js`,\r\n        },\r\n        // COI is still experimental, let the user opt in explicitly\r\n    };\r\n}\r\n\r\nexport interface DuckDBBundle {\r\n    mainModule: string;\r\n    mainWorker: string | null;\r\n    pthreadWorker: string | null;\r\n}\r\n\r\nexport interface PlatformFeatures {\r\n    bigInt64Array: boolean;\r\n    crossOriginIsolated: boolean;\r\n    wasmExceptions: boolean;\r\n    wasmSIMD: boolean;\r\n    wasmBulkMemory: boolean;\r\n    wasmThreads: boolean;\r\n}\r\n\r\nlet bigInt64Array: boolean | null = null;\r\nlet wasmExceptions: boolean | null = null;\r\nlet wasmThreads: boolean | null = null;\r\nlet wasmSIMD: boolean | null = null;\r\nlet wasmBulkMemory: boolean | null = null;\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\ndeclare namespace globalThis {\r\n    let crossOriginIsolated: boolean;\r\n}\r\n\r\nexport async function getPlatformFeatures(): Promise<PlatformFeatures> {\r\n    if (bigInt64Array == null) {\r\n        bigInt64Array = typeof BigInt64Array != 'undefined';\r\n    }\r\n    if (wasmExceptions == null) {\r\n        wasmExceptions = await check.exceptions();\r\n    }\r\n    if (wasmThreads == null) {\r\n        wasmThreads = await check.threads();\r\n    }\r\n    if (wasmSIMD == null) {\r\n        wasmSIMD = await check.simd();\r\n    }\r\n    if (wasmBulkMemory == null) {\r\n        wasmBulkMemory = await check.bulkMemory();\r\n    }\r\n    return {\r\n        bigInt64Array: bigInt64Array!,\r\n        crossOriginIsolated: isNode() || globalThis.crossOriginIsolated || false,\r\n        wasmExceptions: wasmExceptions!,\r\n        wasmSIMD: wasmSIMD!,\r\n        wasmThreads: wasmThreads!,\r\n        wasmBulkMemory: wasmBulkMemory!,\r\n    };\r\n}\r\n\r\nexport async function selectBundle(bundles: DuckDBBundles): Promise<DuckDBBundle> {\r\n    const platform = await getPlatformFeatures();\r\n    if (platform.wasmExceptions) {\r\n        if (platform.wasmSIMD && platform.wasmThreads && platform.crossOriginIsolated && bundles.coi) {\r\n            return {\r\n                mainModule: bundles.coi.mainModule,\r\n                mainWorker: bundles.coi.mainWorker,\r\n                pthreadWorker: bundles.coi.pthreadWorker,\r\n            };\r\n        }\r\n        if (bundles.eh) {\r\n            return {\r\n                mainModule: bundles.eh.mainModule,\r\n                mainWorker: bundles.eh.mainWorker,\r\n                pthreadWorker: null,\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        mainModule: bundles.mvp.mainModule,\r\n        mainWorker: bundles.mvp.mainWorker,\r\n        pthreadWorker: null,\r\n    };\r\n}\r\n", "import {S3Config} from \"../bindings\";\r\nimport {sha256} from \"js-sha256\";\r\n\r\nexport interface S3Params {\r\n    url: string,\r\n    query: string,\r\n    host: string,\r\n    region: string,\r\n    service: string,\r\n    method: string,\r\n    accessKeyId: string,\r\n    secretAccessKey: string,\r\n    sessionToken: string,\r\n    dateNow: string,\r\n    datetimeNow: string\r\n}\r\n\r\nexport interface S3PayloadParams {\r\n    contentHash: string | null,\r\n    contentType: string | null\r\n}\r\n\r\nconst getHTTPHost = function (config : S3Config | undefined, url : string, bucket : string) : string {\r\n    if (config?.endpoint?.startsWith(\"http\")) {\r\n        // Endpoint is a full url, we append the bucket\r\n        const httpHost = `${config?.endpoint}`;\r\n        const offset = httpHost.indexOf(\"://\")+3;\r\n        return httpHost.substring(offset);\r\n    } else if (config?.endpoint) {\r\n        // Endpoint is not a full url and the https://{bucket}.{domain} format will be used\r\n        return `${bucket}.${config?.endpoint}`;\r\n    } else {\r\n        // Default aws s3 url\r\n        return `${bucket}.s3.amazonaws.com`;\r\n    }\r\n}\r\n\r\nexport function getS3Params (config : S3Config | undefined, url: string, method : string) : S3Params {\r\n    const parsedS3Url = parseS3Url(url);\r\n\r\n    // when using S3 path-style access, the signed URL should also include the bucket name, \r\n    //  as it is present in the HTTP URL path.\r\n    // See: https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-bucket-intro.html#path-style-url-ex\r\n    let path =  parsedS3Url.path;\r\n    if (isPathStyleAccess(config)) {\r\n        path = `/${parsedS3Url.bucket}${path}`;\r\n    }\r\n    return {\r\n        url: path,\r\n        query: \"\",\r\n        host: getHTTPHost(config, url, parsedS3Url.bucket),\r\n        region: (config?.region) ?? \"\",\r\n        service: \"s3\",\r\n        method: method,\r\n        accessKeyId: (config?.accessKeyId) ?? \"\",\r\n        secretAccessKey: (config?.secretAccessKey) ?? \"\",\r\n        sessionToken: (config?.sessionToken) ?? \"\",\r\n        dateNow: new Date().toISOString().replace(/-/g,'').split('T')[0],\r\n        datetimeNow: new Date().toISOString().replace(/-/g,'').replace(/:/g,'').split('.')[0]+ 'Z',\r\n    };\r\n}\r\n\r\nexport function uriEncode(input : string, encode_slash = false) {\r\n    // https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\r\n\r\n    const hexDigit = \"0123456789ABCDEF\";\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < input.length; i++) {\r\n        const ch : string = input[i];\r\n\r\n        if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9') || ch == '_' ||\r\n            ch == '-' || ch == '~' || ch == '.') {\r\n            result += ch;\r\n        } else if (ch == '/') {\r\n            if (encode_slash) {\r\n                result += \"%2F\";\r\n            } else {\r\n                result += ch;\r\n            }\r\n        } else {\r\n            result += \"%\";\r\n            result += hexDigit[ch.charCodeAt(0) >> 4];\r\n            result += hexDigit[ch.charCodeAt(0) & 15];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function createS3Headers(params: S3Params, payloadParams : S3PayloadParams | null = null) : Map<string, string> {\r\n    // this is the sha256 of the empty string, its useful since we have no payload for GET requests\r\n    const payloadHash = (payloadParams?.contentHash) ?? \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\r\n\r\n    const res = new Map<string, string>();\r\n    // res.set(\"host\", params.host)\r\n    res.set(\"x-amz-date\", params.datetimeNow);\r\n    res.set(\"x-amz-content-sha256\", payloadHash);\r\n\r\n    if (params.sessionToken) {\r\n        res.set(\"x-amz-security-token\", params.sessionToken);\r\n    }\r\n\r\n    // construct string to sign\r\n    let signedHeaders = \"\";\r\n    if (payloadParams?.contentType) {\r\n        signedHeaders += \"content-type;\";\r\n    }\r\n    signedHeaders += \"host;x-amz-content-sha256;x-amz-date\";\r\n    if (params.sessionToken) {\r\n        signedHeaders += \";x-amz-security-token\";\r\n    }\r\n\r\n    let canonicalRequest = params.method + \"\\n\" + uriEncode(params.url) + \"\\n\" + params.query;\r\n    if (payloadParams?.contentType) {\r\n        canonicalRequest += \"\\ncontent-type:\" + payloadParams?.contentType;\r\n    }\r\n    canonicalRequest += \"\\nhost:\" + params.host +\r\n        \"\\nx-amz-content-sha256:\" + payloadHash + \"\\nx-amz-date:\" + params.datetimeNow;\r\n    if (params.sessionToken && params.sessionToken.length > 0) {\r\n        canonicalRequest += \"\\nx-amz-security-token:\" + params.sessionToken;\r\n    }\r\n\r\n    canonicalRequest += \"\\n\\n\" + signedHeaders + \"\\n\" + payloadHash;\r\n    const canonicalRequestHashStr = sha256(canonicalRequest);\r\n\r\n    const stringToSign = \"AWS4-HMAC-SHA256\\n\" + params.datetimeNow + \"\\n\" + params.dateNow + \"/\" + params.region + \"/\" + params.service +\r\n        \"/aws4_request\\n\" + canonicalRequestHashStr;\r\n\r\n    // ts-ignore's because library can accept array buffer as key, but TS arg is incorrect\r\n    const signKey = \"AWS4\" + params.secretAccessKey;\r\n    const kDate = sha256.hmac.arrayBuffer(signKey, params.dateNow);\r\n\r\n    // Note, js-sha256 has a bug in the TS interface that only supports strings as keys, while we need a bytearray\r\n    // as key. PR is open but unmerged: https://github.com/emn178/js-sha256/pull/25\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const kRegion = sha256.hmac.arrayBuffer(kDate, params.region);\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const kService = sha256.hmac.arrayBuffer(kRegion, params.service,);\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const signingKey = sha256.hmac.arrayBuffer(kService, \"aws4_request\");\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const signature = sha256.hmac(signingKey, stringToSign);\r\n\r\n    res.set(\"Authorization\", \"AWS4-HMAC-SHA256 Credential=\" + params.accessKeyId + \"/\" + params.dateNow + \"/\" + params.region + \"/\" +\r\n        params.service + \"/aws4_request, SignedHeaders=\" + signedHeaders +\r\n        \", Signature=\" + signature);\r\n\r\n    return res;\r\n}\r\n\r\nconst createS3HeadersFromS3Config = function (config : S3Config | undefined, url : string, method : string, contentType: string | null = null, payload : Uint8Array | null = null) : Map<string, string> {\r\n    const params = getS3Params(config, url, method);\r\n    const payloadParams = {\r\n        contentType: contentType,\r\n        contentHash: payload ? sha256.hex(payload!) : null\r\n    } as S3PayloadParams;\r\n    return createS3Headers(params, payloadParams);\r\n}\r\n\r\nexport function addS3Headers(xhr: XMLHttpRequest, config : S3Config | undefined, url : string, method: string, contentType: string | null = null, payload : Uint8Array | null = null) {\r\n    if (config?.accessKeyId || config?.sessionToken) {\r\n        const headers = createS3HeadersFromS3Config(config, url, method, contentType, payload);\r\n        headers.forEach((value: string, header: string) => {\r\n            xhr.setRequestHeader(header, value);\r\n        });\r\n\r\n        if (contentType) {\r\n            xhr.setRequestHeader(\"content-type\", contentType);\r\n        }\r\n    }\r\n}\r\n\r\nexport function parseS3Url (url: string) : {bucket : string, path : string} {\r\n    if (url.indexOf(\"s3://\") != 0) {\r\n        throw new Error(\"URL needs to start with s3://\");\r\n    }\r\n    const slashPos = url.indexOf('/', 5);\r\n\r\n    if (slashPos == -1) {\r\n        throw new Error(\"URL needs to contain a '/' after the host\");\r\n    }\r\n\r\n    const bucket = url.substring(5, slashPos);\r\n    if (!bucket) {\r\n        throw new Error(\"URL needs to contain a bucket name\");\r\n    }\r\n    const path = url.substring(slashPos);\r\n    if (!path) {\r\n        throw new Error(\"URL needs to contain key\");\r\n    }\r\n\r\n    return {bucket: bucket, path: path}\r\n}\r\n\r\nfunction isPathStyleAccess(config : S3Config | undefined) : boolean {\r\n    if (config?.endpoint?.startsWith(\"http\")) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getHTTPUrl(config : S3Config | undefined, url : string) : string {\r\n    const parsedUrl = parseS3Url(url);\r\n    if (isPathStyleAccess(config)) {\r\n        // Endpoint is a full url, we append the bucket\r\n        return `${config?.endpoint}/${parsedUrl.bucket}` + parsedUrl.path;\r\n    }\r\n    return 'https://' + getHTTPHost(config, url, parsedUrl.bucket) + parsedUrl.path;\r\n}", "import { StatusCode } from '../status';\r\nimport { addS3Headers, getHTTPUrl } from '../utils';\r\n\r\nimport {\r\n    callSRet,\r\n    dropResponseBuffers,\r\n    DuckDBDataProtocol,\r\n    DuckDBFileInfo,\r\n    DuckDBGlobalFileInfo,\r\n    DuckDBRuntime,\r\n    failWith,\r\n    FileFlags,\r\n    readString,\r\n} from './runtime';\r\nimport { DuckDBModule } from './duckdb_module';\r\nimport * as udf from './udf_runtime';\r\n\r\nexport const BROWSER_RUNTIME: DuckDBRuntime & {\r\n    _fileInfoCache: Map<number, DuckDBFileInfo>;\r\n    _globalFileInfo: DuckDBGlobalFileInfo | null;\r\n\r\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null;\r\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null;\r\n} = {\r\n    _files: new Map<string, any>(),\r\n    _fileInfoCache: new Map<number, DuckDBFileInfo>(),\r\n    _udfFunctions: new Map(),\r\n    _globalFileInfo: null,\r\n\r\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null {\r\n        try {\r\n            const cached = BROWSER_RUNTIME._fileInfoCache.get(fileId);\r\n            const [s, d, n] = callSRet(\r\n                mod,\r\n                'duckdb_web_fs_get_file_info_by_id',\r\n                ['number', 'number'],\r\n                [fileId, cached?.cacheEpoch || 0],\r\n            );\r\n            if (s !== StatusCode.SUCCESS) {\r\n                return null;\r\n            } else if (n === 0) {\r\n                // Epoch is up to date\r\n                return cached!;\r\n            }\r\n            const infoStr = readString(mod, d, n);\r\n            dropResponseBuffers(mod);\r\n            const info = JSON.parse(infoStr);\r\n            if (info == null) {\r\n                return null;\r\n            }\r\n            const file = { ...info, blob: null } as DuckDBFileInfo;\r\n            BROWSER_RUNTIME._fileInfoCache.set(fileId, file);\r\n            return file;\r\n        } catch (e: any) {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null {\r\n        try {\r\n            const [s, d, n] = callSRet(\r\n                mod,\r\n                'duckdb_web_get_global_file_info',\r\n                ['number'],\r\n                [BROWSER_RUNTIME._globalFileInfo?.cacheEpoch || 0],\r\n            );\r\n            if (s !== StatusCode.SUCCESS) {\r\n                return null;\r\n            } else if (n === 0) {\r\n                // Epoch is up to date\r\n                return BROWSER_RUNTIME._globalFileInfo!;\r\n            }\r\n            const infoStr = readString(mod, d, n);\r\n            dropResponseBuffers(mod);\r\n            const info = JSON.parse(infoStr);\r\n            if (info == null) {\r\n                return null;\r\n            }\r\n            BROWSER_RUNTIME._globalFileInfo = { ...info, blob: null } as DuckDBGlobalFileInfo;\r\n\r\n            return BROWSER_RUNTIME._globalFileInfo;\r\n        } catch (e: any) {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    testPlatformFeature: (_mod: DuckDBModule, feature: number): boolean => {\r\n        switch (feature) {\r\n            case 1:\r\n                return typeof BigInt64Array !== 'undefined';\r\n            default:\r\n                console.warn(`test for unknown feature: ${feature}`);\r\n                return false;\r\n        }\r\n    },\r\n\r\n    getDefaultDataProtocol(mod: DuckDBModule): number {\r\n        return DuckDBDataProtocol.BROWSER_FILEREADER;\r\n    },\r\n\r\n    openFile: (mod: DuckDBModule, fileId: number, flags: FileFlags): number => {\r\n        try {\r\n            BROWSER_RUNTIME._fileInfoCache.delete(fileId);\r\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\r\n            switch (file?.dataProtocol) {\r\n                case DuckDBDataProtocol.HTTP:\r\n                case DuckDBDataProtocol.S3: {\r\n                    if (flags & FileFlags.FILE_FLAGS_READ && flags & FileFlags.FILE_FLAGS_WRITE) {\r\n                        throw new Error(\r\n                            `Opening file ${file.fileName} failed: cannot open file with both read and write flags set`,\r\n                        );\r\n                    } else if (flags & FileFlags.FILE_FLAGS_APPEND) {\r\n                        throw new Error(\r\n                            `Opening file ${file.fileName} failed: appending to HTTP/S3 files is not supported`,\r\n                        );\r\n                    } else if (flags & FileFlags.FILE_FLAGS_WRITE) {\r\n                        // We send a HEAD request to try to determine if we can write to data_url\r\n                        const xhr = new XMLHttpRequest();\r\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\r\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\r\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\r\n                        } else {\r\n                            xhr.open('HEAD', file.dataUrl!, false);\r\n                        }\r\n                        xhr.send(null);\r\n\r\n                        // Expect 200 for existing files that we will overwrite or 404 for non-existent files can be created\r\n                        if (xhr.status != 200 && xhr.status != 404) {\r\n                            throw new Error(\r\n                                `Opening file ${file.fileName} failed: Unexpected return status from server (${xhr.status})`,\r\n                            );\r\n                        } else if (\r\n                            xhr.status == 404 &&\r\n                            !(flags & FileFlags.FILE_FLAGS_FILE_CREATE || flags & FileFlags.FILE_FLAGS_FILE_CREATE_NEW)\r\n                        ) {\r\n                            throw new Error(\r\n                                `Opening file ${file.fileName} failed: Cannot write to non-existent file without FILE_FLAGS_FILE_CREATE or FILE_FLAGS_FILE_CREATE_NEW flag.`,\r\n                            );\r\n                        }\r\n                        // Return an empty buffer that can be used to buffer the writes to this s3/http file\r\n                        const data = mod._malloc(1);\r\n                        const src = new Uint8Array();\r\n                        mod.HEAPU8.set(src, data);\r\n                        const result = mod._malloc(2 * 8);\r\n                        mod.HEAPF64[(result >> 3) + 0] = 1;\r\n                        mod.HEAPF64[(result >> 3) + 1] = data;\r\n                        return result;\r\n                    } else if (flags != FileFlags.FILE_FLAGS_READ) {\r\n                        throw new Error(`Opening file ${file.fileName} failed: unsupported file flags: ${flags}`);\r\n                    }\r\n\r\n                    // Supports ranges?\r\n                    let contentLength = null;\r\n                    let error: any | null = null;\r\n                    try {\r\n                        // Send a dummy HEAD request with range protocol\r\n                        //          -> good IFF status is 206 and contentLenght is present\r\n                        const xhr = new XMLHttpRequest();\r\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\r\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\r\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\r\n                        } else {\r\n                            xhr.open('HEAD', file.dataUrl!, false);\r\n                        }\r\n                        xhr.setRequestHeader('Range', `bytes=0-`);\r\n                        xhr.send(null);\r\n\r\n                        // Supports range requests\r\n                        contentLength = xhr.getResponseHeader('Content-Length');\r\n                        if (contentLength !== null && xhr.status == 206) {\r\n                            const result = mod._malloc(2 * 8);\r\n                            mod.HEAPF64[(result >> 3) + 0] = +contentLength;\r\n                            mod.HEAPF64[(result >> 3) + 1] = 0;\r\n                            return result;\r\n                        }\r\n                    } catch (e: any) {\r\n                        error = e;\r\n                        console.warn(`HEAD request with range header failed: ${e}`);\r\n                    }\r\n\r\n                    // Try to fallback to full read?\r\n                    if (file.allowFullHttpReads) {\r\n                        if ((contentLength !== null) && (+contentLength > 1)) {\r\n                            // 2. Send a dummy GET range request querying the first byte of the file\r\n                            //          -> good IFF status is 206 and contentLenght2 is 1\r\n                            //          -> otherwise, iff 200 and contentLenght2 == contentLenght\r\n                            //                 we just downloaded the file, save it and move further\r\n                            const xhr = new XMLHttpRequest();\r\n                            if (file.dataProtocol == DuckDBDataProtocol.S3) {\r\n                                xhr.open('GET', getHTTPUrl(file.s3Config, file.dataUrl!), false);\r\n                                addS3Headers(xhr, file.s3Config, file.dataUrl!, 'GET');\r\n                            } else {\r\n                                xhr.open('GET', file.dataUrl!, false);\r\n                            }\r\n                            xhr.setRequestHeader('Range', `bytes=0-0`);\r\n                            xhr.send(null);\r\n                            const contentLength2 = xhr.getResponseHeader('Content-Length');\r\n\r\n                            if (xhr.status == 206 && contentLength2 !== null && +contentLength2 == 1) {\r\n                                const result = mod._malloc(2 * 8);\r\n                                mod.HEAPF64[(result >> 3) + 0] = +contentLength;\r\n                                mod.HEAPF64[(result >> 3) + 1] = 0;\r\n                                return result;\r\n                            }\r\n                            if (xhr.status == 200 && contentLength2 !== null && +contentLength2 == +contentLength) {\r\n                                console.warn(`fall back to full HTTP read for: ${file.dataUrl}`);\r\n                                const data = mod._malloc(xhr.response.byteLength);\r\n                                const src = new Uint8Array(xhr.response, 0, xhr.response.byteLength);\r\n                                mod.HEAPU8.set(src, data);\r\n                                const result = mod._malloc(2 * 8);\r\n                                mod.HEAPF64[(result >> 3) + 0] = xhr.response.byteLength;\r\n                                mod.HEAPF64[(result >> 3) + 1] = data;\r\n                                return result;\r\n                            }\r\n                        }\r\n                        console.warn(`falling back to full HTTP read for: ${file.dataUrl}`);\r\n                        // 3. Send non-range request\r\n                        const xhr = new XMLHttpRequest();\r\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\r\n                            xhr.open('GET', getHTTPUrl(file.s3Config, file.dataUrl!), false);\r\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'GET');\r\n                        } else {\r\n                            xhr.open('GET', file.dataUrl!, false);\r\n                        }\r\n                        xhr.responseType = 'arraybuffer';\r\n                        xhr.send(null);\r\n\r\n                        // Return buffer\r\n                        if (xhr.status == 200) {\r\n                            const data = mod._malloc(xhr.response.byteLength);\r\n                            const src = new Uint8Array(xhr.response, 0, xhr.response.byteLength);\r\n                            mod.HEAPU8.set(src, data);\r\n                            const result = mod._malloc(2 * 8);\r\n                            mod.HEAPF64[(result >> 3) + 0] = xhr.response.byteLength;\r\n                            mod.HEAPF64[(result >> 3) + 1] = data;\r\n                            return result;\r\n                        }\r\n                    }\r\n\r\n                    // Raise error?\r\n                    if (error != null) {\r\n                        throw new Error(`Reading file ${file.fileName} failed with error: ${error}`);\r\n                    }\r\n                    return 0;\r\n                }\r\n                // File reader File\r\n                case DuckDBDataProtocol.BROWSER_FILEREADER: {\r\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\r\n                    if (handle) {\r\n                        const result = mod._malloc(2 * 8);\r\n                        mod.HEAPF64[(result >> 3) + 0] = handle.size;\r\n                        mod.HEAPF64[(result >> 3) + 1] = 0;\r\n                        return result;\r\n                    }\r\n\r\n                    // Fall back to empty buffered file in the browser\r\n                    console.warn(`Buffering missing file: ${file.fileName}`);\r\n                    const result = mod._malloc(2 * 8);\r\n                    const buffer = mod._malloc(1); // malloc(0) is allowed to return a nullptr\r\n                    mod.HEAPF64[(result >> 3) + 0] = 1;\r\n                    mod.HEAPF64[(result >> 3) + 1] = buffer;\r\n                    return result;\r\n                }\r\n            }\r\n        } catch (e: any) {\r\n            // TODO (samansmink): this path causes the WASM code to hang\r\n            console.error(e.toString());\r\n            failWith(mod, e.toString());\r\n        }\r\n        return 0;\r\n    },\r\n    glob: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\r\n        try {\r\n            const path = readString(mod, pathPtr, pathLen);\r\n            // Starts with http?\r\n            // Try a HTTP HEAD request\r\n            if (path.startsWith('http') || path.startsWith('s3://')) {\r\n                // Send a dummy range request querying the first byte of the file\r\n                const xhr = new XMLHttpRequest();\r\n                if (path.startsWith('s3://')) {\r\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\r\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\r\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\r\n                } else {\r\n                    xhr.open('HEAD', path!, false);\r\n                }\r\n                xhr.send(null);\r\n                if (xhr.status != 200 && xhr.status !== 206) {\r\n                    // Pre-signed resources on S3 in common configurations fail on any HEAD request\r\n                    // https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-example-presigned-urls.html\r\n                    // so we need (if enabled) to bump to a ranged GET\r\n                    if (!BROWSER_RUNTIME.getGlobalFileInfo(mod)?.allowFullHttpReads) {\r\n                        failWith(mod, `HEAD request failed: ${path}, with full http reads are disabled`);\r\n                        return;\r\n                    }\r\n                    const xhr2 = new XMLHttpRequest();\r\n                    if (path.startsWith('s3://')) {\r\n                        const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\r\n                        xhr2.open('GET', getHTTPUrl(globalInfo?.s3Config, path), false);\r\n                        addS3Headers(xhr2, globalInfo?.s3Config, path, 'HEAD');\r\n                    } else {\r\n                        xhr2.open('GET', path!, false);\r\n                    }\r\n                    xhr2.setRequestHeader('Range', `bytes=0-0`);\r\n                    xhr2.send(null);\r\n                    if (xhr2.status != 200 && xhr2.status !== 206) {\r\n                        failWith(mod, `HEAD and GET requests failed: ${path}`);\r\n                        return;\r\n                    }\r\n                    const contentLength = xhr2.getResponseHeader('Content-Length');\r\n                    if (contentLength && (+contentLength > 1)) {\r\n                        console.warn(`Range request for ${path} did not return a partial response: ${xhr2.status} \"${xhr2.statusText}\"`);\r\n                    }\r\n                }\r\n                mod.ccall('duckdb_web_fs_glob_add_path', null, ['string'], [path]);\r\n            }\r\n        } catch (e: any) {\r\n            failWith(mod, e.toString());\r\n            return 0;\r\n        }\r\n    },\r\n    checkFile: (mod: DuckDBModule, pathPtr: number, pathLen: number): boolean => {\r\n        try {\r\n            const path = readString(mod, pathPtr, pathLen);\r\n            // Starts with http or S3?\r\n            // Try a HTTP HEAD request\r\n            if (path.startsWith('http') || path.startsWith('s3://')) {\r\n                // Send a dummy range request querying the first byte of the file\r\n                const xhr = new XMLHttpRequest();\r\n                if (path.startsWith('s3://')) {\r\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\r\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\r\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\r\n                } else {\r\n                    xhr.open('HEAD', path!, false);\r\n                }\r\n                xhr.send(null);\r\n                return xhr.status == 206 || xhr.status == 200;\r\n            }\r\n        } catch (e: any) {\r\n            return false;\r\n        }\r\n        return false;\r\n    },\r\n    syncFile: (_mod: DuckDBModule, _fileId: number) => {},\r\n    closeFile: (mod: DuckDBModule, fileId: number) => {\r\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\r\n        BROWSER_RUNTIME._fileInfoCache.delete(fileId);\r\n        switch (file?.dataProtocol) {\r\n            case DuckDBDataProtocol.BUFFER:\r\n            case DuckDBDataProtocol.HTTP:\r\n            case DuckDBDataProtocol.S3:\r\n                break;\r\n            case DuckDBDataProtocol.NODE_FS:\r\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\r\n                // XXX Remove from registry\r\n                return;\r\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\r\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\r\n                if (!handle) {\r\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\r\n                }\r\n                return handle.flush();\r\n            }\r\n        }\r\n    },\r\n    truncateFile: (mod: DuckDBModule, fileId: number, newSize: number) => {\r\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\r\n        switch (file?.dataProtocol) {\r\n            case DuckDBDataProtocol.HTTP:\r\n                failWith(mod, `Cannot truncate a http file`);\r\n                return;\r\n            case DuckDBDataProtocol.S3:\r\n                failWith(mod, `Cannot truncate an s3 file`);\r\n                return;\r\n            case DuckDBDataProtocol.BUFFER:\r\n            case DuckDBDataProtocol.NODE_FS:\r\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\r\n                failWith(mod, `truncateFile not implemented`);\r\n                return;\r\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\r\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\r\n                if (!handle) {\r\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\r\n                }\r\n                return handle.truncate(newSize);\r\n            }\r\n        }\r\n        return 0;\r\n    },\r\n    readFile(mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) {\r\n        if (bytes == 0) {\r\n            // Be robust to empty reads\r\n            return 0;\r\n        }\r\n        try {\r\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\r\n            switch (file?.dataProtocol) {\r\n                // File reading from BLOB or HTTP MUST be done with range requests.\r\n                // We have to check in OPEN if such file supports range requests and upgrade to BUFFER if not.\r\n                case DuckDBDataProtocol.HTTP:\r\n                case DuckDBDataProtocol.S3: {\r\n                    if (!file.dataUrl) {\r\n                        throw new Error(`Missing data URL for file ${fileId}`);\r\n                    }\r\n                    try {\r\n                        const xhr = new XMLHttpRequest();\r\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\r\n                            xhr.open('GET', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\r\n                            addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'GET');\r\n                        } else {\r\n                            xhr.open('GET', file.dataUrl!, false);\r\n                        }\r\n                        xhr.responseType = 'arraybuffer';\r\n                        xhr.setRequestHeader('Range', `bytes=${location}-${location + bytes - 1}`);\r\n                        xhr.send(null);\r\n                        if (\r\n                            xhr.status == 206 /* Partial content */ ||\r\n                            (xhr.status == 200 && bytes == xhr.response.byteLength && location == 0)\r\n                        ) {\r\n                            const src = new Uint8Array(xhr.response, 0, Math.min(xhr.response.byteLength, bytes));\r\n                            mod.HEAPU8.set(src, buf);\r\n                            return src.byteLength;\r\n                        } else if (xhr.status == 200) {\r\n                            // TODO: here we are actually throwing away all non-relevant bytes, but this is still better than failing\r\n                            //       proper solution would require notifying duckdb-wasm cache, while we are piggybackign on browser cache\r\n                            console.warn(`Range request for ${file.dataUrl} did not return a partial response: ${xhr.status} \"${xhr.statusText}\"`);\r\n                            const src = new Uint8Array(xhr.response, location, Math.min(xhr.response.byteLength-location, bytes));\r\n                            mod.HEAPU8.set(src, buf);\r\n                            return src.byteLength;\r\n                        } else {\r\n                            throw new Error(\r\n                                `Range request for ${file.dataUrl} did returned non-success status: ${xhr.status} \"${xhr.statusText}\"`,\r\n                            );\r\n                        }\r\n                    } catch (e) {\r\n                        throw new Error(`Range request for ${file.dataUrl} failed with error: ${e}\"`);\r\n                    }\r\n                }\r\n                case DuckDBDataProtocol.BROWSER_FILEREADER: {\r\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\r\n                    if (!handle) {\r\n                        throw new Error(`No HTML5 file registered with name: ${file.fileName}`);\r\n                    }\r\n                    const sliced = handle!.slice(location, location + bytes);\r\n                    const data = new Uint8Array(new FileReaderSync().readAsArrayBuffer(sliced));\r\n                    mod.HEAPU8.set(data, buf);\r\n                    return data.byteLength;\r\n                }\r\n                case DuckDBDataProtocol.BROWSER_FSACCESS: {\r\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\r\n                    if (!handle) {\r\n                        throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\r\n                    }\r\n                    const out = mod.HEAPU8.subarray(buf, buf + bytes);\r\n                    return handle.read(out, { at: location });\r\n                }\r\n            }\r\n            return 0;\r\n        } catch (e: any) {\r\n            failWith(mod, e.toString());\r\n            return 0;\r\n        }\r\n    },\r\n    writeFile: (mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) => {\r\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\r\n        switch (file?.dataProtocol) {\r\n            case DuckDBDataProtocol.HTTP:\r\n                failWith(mod, 'Cannot write to HTTP file');\r\n                return 0;\r\n            case DuckDBDataProtocol.S3: {\r\n                const buffer = mod.HEAPU8.subarray(buf, buf + bytes);\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.open('PUT', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\r\n                addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'PUT', '', buffer);\r\n                xhr.send(buffer);\r\n                return bytes;\r\n            }\r\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\r\n                failWith(mod, 'cannot write using the html5 file reader api');\r\n                return 0;\r\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\r\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\r\n                if (!handle) {\r\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\r\n                }\r\n                const input = mod.HEAPU8.subarray(buf, buf + bytes);\r\n                return handle.write(input, { at: location });\r\n            }\r\n        }\r\n        return 0;\r\n    },\r\n    getLastFileModificationTime: (mod: DuckDBModule, fileId: number) => {\r\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\r\n        switch (file?.dataProtocol) {\r\n            case DuckDBDataProtocol.BROWSER_FILEREADER: {\r\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\r\n                if (!handle) {\r\n                    throw Error(`No handle available for file: ${file.fileName}`);\r\n                }\r\n                return 0;\r\n            }\r\n\r\n            case DuckDBDataProtocol.HTTP:\r\n            case DuckDBDataProtocol.S3:\r\n                return new Date().getTime();\r\n        }\r\n        return 0;\r\n    },\r\n    checkDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\r\n        const path = readString(mod, pathPtr, pathLen);\r\n        console.log(`checkDirectory: ${path}`);\r\n        return false;\r\n    },\r\n    createDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\r\n        const path = readString(mod, pathPtr, pathLen);\r\n        console.log(`createDirectory: ${path}`);\r\n    },\r\n    removeDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\r\n        const path = readString(mod, pathPtr, pathLen);\r\n        console.log(`removeDirectory: ${path}`);\r\n    },\r\n    listDirectoryEntries: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\r\n        const path = readString(mod, pathPtr, pathLen);\r\n        console.log(`listDirectoryEntries: ${path}`);\r\n        return false;\r\n    },\r\n    moveFile: (mod: DuckDBModule, fromPtr: number, fromLen: number, toPtr: number, toLen: number) => {\r\n        const from = readString(mod, fromPtr, fromLen);\r\n        const to = readString(mod, toPtr, toLen);\r\n        const handle = BROWSER_RUNTIME._files?.get(from);\r\n        if (handle !== undefined) {\r\n            BROWSER_RUNTIME._files!.delete(handle);\r\n            BROWSER_RUNTIME._files!.set(to, handle);\r\n        }\r\n        for (const [key, value] of BROWSER_RUNTIME._fileInfoCache?.entries() || []) {\r\n            if (value.dataUrl == from) {\r\n                BROWSER_RUNTIME._fileInfoCache.delete(key);\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number) => {},\r\n    callScalarUDF: (\r\n        mod: DuckDBModule,\r\n        response: number,\r\n        funcId: number,\r\n        descPtr: number,\r\n        descSize: number,\r\n        ptrsPtr: number,\r\n        ptrsSize: number,\r\n    ): void => {\r\n        udf.callScalarUDF(BROWSER_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\r\n    },\r\n};\r\n\r\nexport default BROWSER_RUNTIME;\r\n", "\nvar DuckDB = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nasync function(DuckDB = {})  {\n\nvar Module = typeof DuckDB != \"undefined\" ? DuckDB : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise((resolve, reject) => {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\n[ \"_main\", \"_malloc\", \"_free\", \"_duckdb_web_clear_response\", \"_duckdb_web_collect_file_stats\", \"_duckdb_web_connect\", \"_duckdb_web_copy_file_to_buffer\", \"_duckdb_web_copy_file_to_path\", \"_duckdb_web_disconnect\", \"_duckdb_web_export_file_stats\", \"_duckdb_web_fail_with\", \"_duckdb_web_flush_file\", \"_duckdb_web_flush_files\", \"_duckdb_web_fs_drop_file\", \"_duckdb_web_fs_drop_files\", \"_duckdb_web_fs_get_file_info_by_id\", \"_duckdb_web_fs_get_file_info_by_name\", \"_duckdb_web_fs_glob_add_path\", \"_duckdb_web_fs_glob_file_infos\", \"_duckdb_web_fs_register_file_buffer\", \"_duckdb_web_fs_register_file_url\", \"_duckdb_web_get_feature_flags\", \"_duckdb_web_get_global_file_info\", \"_duckdb_web_get_tablenames\", \"_duckdb_web_get_version\", \"_duckdb_web_insert_arrow_from_ipc_stream\", \"_duckdb_web_insert_csv_from_path\", \"_duckdb_web_insert_json_from_path\", \"_duckdb_web_open\", \"_duckdb_web_pending_query_cancel\", \"_duckdb_web_pending_query_poll\", \"_duckdb_web_pending_query_start\", \"_duckdb_web_prepared_close\", \"_duckdb_web_prepared_create\", \"_duckdb_web_prepared_run\", \"_duckdb_web_prepared_send\", \"_duckdb_web_query_fetch_results\", \"_duckdb_web_query_run\", \"_duckdb_web_reset\", \"_duckdb_web_tokenize\", \"_duckdb_web_udf_scalar_create\", \"_fflush\", \"onRuntimeInitialized\" ].forEach(prop => {\n if (!Object.getOwnPropertyDescriptor(Module[\"ready\"], prop)) {\n  Object.defineProperty(Module[\"ready\"], prop, {\n   get: () => abort(\"You are getting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\"),\n   set: () => abort(\"You are setting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")\n  });\n }\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\n\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module[\"ENVIRONMENT\"]) {\n throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\");\n}\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n if (typeof process == \"undefined\" || !process.release || process.release.name !== \"node\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n var nodeVersion = process.versions.node;\n var numericVersion = nodeVersion.split(\".\").slice(0, 3);\n numericVersion = numericVersion[0] * 1e4 + numericVersion[1] * 100 + numericVersion[2].split(\"-\")[0] * 1;\n var minVersion = 101900;\n if (numericVersion < 101900) {\n  throw new Error(\"This emscripten-generated code requires node v10.19.19.0 (detected v\" + nodeVersion + \")\");\n }\n const {createRequire: createRequire} = await import(\"module\");\n var require = createRequire(import.meta.url);\n var fs = require(\"fs\");\n var nodePath = require(\"path\");\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = require(\"url\").fileURLToPath(new URL(\"./\", import.meta.url));\n }\n read_ = (filename, binary) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n };\n readBinary = filename => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n };\n readAsync = (filename, onload, onerror, binary = true) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : \"utf8\", (err, data) => {\n   if (err) onerror(err); else onload(binary ? data.buffer : data);\n  });\n };\n if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n  thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process.argv.slice(2);\n quit_ = (status, toThrow) => {\n  process.exitCode = status;\n  throw toThrow;\n };\n Module[\"inspect\"] = () => \"[Emscripten Module object]\";\n} else if (ENVIRONMENT_IS_SHELL) {\n if (typeof process == \"object\" && typeof require === \"function\" || typeof window == \"object\" || typeof importScripts == \"function\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n if (typeof read != \"undefined\") {\n  read_ = f => {\n   return read(f);\n  };\n }\n readBinary = f => {\n  let data;\n  if (typeof readbuffer == \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data == \"object\");\n  return data;\n };\n readAsync = (f, onload, onerror) => {\n  setTimeout(() => onload(readBinary(f)), 0);\n };\n if (typeof clearTimeout == \"undefined\") {\n  globalThis.clearTimeout = id => {};\n }\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit == \"function\") {\n  quit_ = (status, toThrow) => {\n   setTimeout(() => {\n    if (!(toThrow instanceof ExitStatus)) {\n     let toLog = toThrow;\n     if (toThrow && typeof toThrow == \"object\" && toThrow.stack) {\n      toLog = [ toThrow, toThrow.stack ];\n     }\n     err(`exiting due to exception: ${toLog}`);\n    }\n    quit(status);\n   });\n   throw toThrow;\n  };\n }\n if (typeof print != \"undefined\") {\n  if (typeof console == \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr != \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n if (!(typeof window == \"object\" || typeof importScripts == \"function\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {\n throw new Error(\"environment detection error\");\n}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.error.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\ncheckIncomingModuleAPI();\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nlegacyModuleProp(\"arguments\", \"arguments_\");\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nlegacyModuleProp(\"thisProgram\", \"thisProgram\");\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nlegacyModuleProp(\"quit\", \"quit_\");\n\nassert(typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"filePackagePrefixURL\"] == \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed (modify read_ in JS)\");\n\nassert(typeof Module[\"readAsync\"] == \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\n\nassert(typeof Module[\"readBinary\"] == \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\n\nassert(typeof Module[\"setWindowTitle\"] == \"undefined\", \"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");\n\nassert(typeof Module[\"TOTAL_MEMORY\"] == \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\n\nlegacyModuleProp(\"read\", \"read_\");\n\nlegacyModuleProp(\"readAsync\", \"readAsync\");\n\nlegacyModuleProp(\"readBinary\", \"readBinary\");\n\nlegacyModuleProp(\"setWindowTitle\", \"setWindowTitle\");\n\nvar IDBFS = \"IDBFS is no longer included by default; build with -lidbfs.js\";\n\nvar PROXYFS = \"PROXYFS is no longer included by default; build with -lproxyfs.js\";\n\nvar WORKERFS = \"WORKERFS is no longer included by default; build with -lworkerfs.js\";\n\nvar NODEFS = \"NODEFS is no longer included by default; build with -lnodefs.js\";\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nlegacyModuleProp(\"wasmBinary\", \"wasmBinary\");\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nlegacyModuleProp(\"noExitRuntime\", \"noExitRuntime\");\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\n }\n}\n\nvar HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateMemoryViews() {\n var b = wasmMemory.buffer;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n}\n\nassert(!Module[\"STACK_SIZE\"], \"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\");\n\nassert(typeof Int32Array != \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, \"JS engine does not provide full typed array support\");\n\nassert(!Module[\"wasmMemory\"], \"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally\");\n\nassert(!Module[\"INITIAL_MEMORY\"], \"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically\");\n\nvar wasmTable;\n\nfunction writeStackCookie() {\n var max = _emscripten_stack_get_end();\n assert((max & 3) == 0);\n if (max == 0) {\n  max += 4;\n }\n HEAPU32[max >>> 2] = 34821223;\n HEAPU32[max + 4 >>> 2] = 2310721022;\n HEAPU32[0 >>> 2] = 1668509029;\n}\n\nfunction checkStackCookie() {\n if (ABORT) return;\n var max = _emscripten_stack_get_end();\n if (max == 0) {\n  max += 4;\n }\n var cookie1 = HEAPU32[max >>> 2];\n var cookie2 = HEAPU32[max + 4 >>> 2];\n if (cookie1 != 34821223 || cookie2 != 2310721022) {\n  abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\n }\n if (HEAPU32[0 >>> 2] != 1668509029) {\n  abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\");\n }\n}\n\n(function() {\n var h16 = new Int16Array(1);\n var h8 = new Int8Array(h16.buffer);\n h16[0] = 25459;\n if (h8[0] !== 115 || h8[1] !== 99) throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\n})();\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATMAIN__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n assert(!runtimeInitialized);\n runtimeInitialized = true;\n checkStackCookie();\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n checkStackCookie();\n callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n checkStackCookie();\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nassert(Math.imul, \"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.fround, \"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.clz32, \"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.trunc, \"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n var orig = id;\n while (1) {\n  if (!runDependencyTracking[id]) return id;\n  id = orig + Math.random();\n }\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(!runDependencyTracking[id]);\n  runDependencyTracking[id] = 1;\n  if (runDependencyWatcher === null && typeof setInterval != \"undefined\") {\n   runDependencyWatcher = setInterval(() => {\n    if (ABORT) {\n     clearInterval(runDependencyWatcher);\n     runDependencyWatcher = null;\n     return;\n    }\n    var shown = false;\n    for (var dep in runDependencyTracking) {\n     if (!shown) {\n      shown = true;\n      err(\"still waiting on run dependencies:\");\n     }\n     err(\"dependency: \" + dep);\n    }\n    if (shown) {\n     err(\"(end of list)\");\n    }\n   }, 1e4);\n  }\n } else {\n  err(\"warning: run dependency added without ID\");\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(runDependencyTracking[id]);\n  delete runDependencyTracking[id];\n } else {\n  err(\"warning: run dependency removed without ID\");\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nfunction isFileURI(filename) {\n return filename.startsWith(\"file://\");\n}\n\nfunction createExportWrapper(name, fixedasm) {\n return function() {\n  var displayName = name;\n  var asm = fixedasm;\n  if (!fixedasm) {\n   asm = Module[\"asm\"];\n  }\n  assert(runtimeInitialized, \"native function `\" + displayName + \"` called before runtime initialization\");\n  if (!asm[name]) {\n   assert(asm[name], \"exported native function `\" + displayName + \"` not found\");\n  }\n  return asm[name].apply(null, arguments);\n };\n}\n\nvar wasmBinaryFile;\n\nif (Module[\"locateFile\"]) {\n wasmBinaryFile = \"./duckdb-mvp.wasm\";\n if (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n }\n} else {\n wasmBinaryFile = new URL(\"./duckdb-mvp.wasm\", import.meta.url).href;\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise(binaryFile) {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\") {\n   return fetch(binaryFile, {\n    credentials: \"same-origin\"\n   }).then(response => {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(() => getBinary(binaryFile));\n  }\n }\n return Promise.resolve().then(() => getBinary(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n return getBinaryPromise(binaryFile).then(binary => {\n  return WebAssembly.instantiate(binary, imports);\n }).then(instance => {\n  return instance;\n }).then(receiver, reason => {\n  err(\"failed to asynchronously prepare wasm: \" + reason);\n  if (isFileURI(wasmBinaryFile)) {\n   err(\"warning: Loading from a file URI (\" + wasmBinaryFile + \") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\");\n  }\n  abort(reason);\n });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n  return fetch(binaryFile, {\n   credentials: \"same-origin\"\n  }).then(response => {\n   var result = WebAssembly.instantiateStreaming(response, imports);\n   return result.then(callback, function(reason) {\n    err(\"wasm streaming compile failed: \" + reason);\n    err(\"falling back to ArrayBuffer instantiation\");\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n   });\n  });\n } else {\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n }\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": wasmImports,\n  \"wasi_snapshot_preview1\": wasmImports\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  assert(wasmMemory, \"memory not found in wasm exports\");\n  updateMemoryViews();\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  assert(wasmTable, \"table not found in wasm exports\");\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n  return exports;\n }\n addRunDependency(\"wasm-instantiate\");\n var trueModule = Module;\n function receiveInstantiationResult(result) {\n  assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\n  trueModule = null;\n  receiveInstance(result[\"instance\"]);\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   return Module[\"instantiateWasm\"](info, receiveInstance);\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   readyPromiseReject(e);\n  }\n }\n instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n return {};\n}\n\nvar tempDouble;\n\nvar tempI64;\n\nfunction legacyModuleProp(prop, newName) {\n if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n  Object.defineProperty(Module, prop, {\n   configurable: true,\n   get: function() {\n    abort(\"Module.\" + prop + \" has been replaced with plain \" + newName + \" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\n   }\n  });\n }\n}\n\nfunction ignoredModuleProp(prop) {\n if (Object.getOwnPropertyDescriptor(Module, prop)) {\n  abort(\"`Module.\" + prop + \"` was supplied but `\" + prop + \"` not included in INCOMING_MODULE_JS_API\");\n }\n}\n\nfunction isExportedByForceFilesystem(name) {\n return name === \"FS_createPath\" || name === \"FS_createDataFile\" || name === \"FS_createPreloadedFile\" || name === \"FS_unlink\" || name === \"addRunDependency\" || name === \"FS_createLazyFile\" || name === \"FS_createDevice\" || name === \"removeRunDependency\";\n}\n\nfunction missingGlobal(sym, msg) {\n if (typeof globalThis !== \"undefined\") {\n  Object.defineProperty(globalThis, sym, {\n   configurable: true,\n   get: function() {\n    warnOnce(\"`\" + sym + \"` is not longer defined by emscripten. \" + msg);\n    return undefined;\n   }\n  });\n }\n}\n\nmissingGlobal(\"buffer\", \"Please use HEAP8.buffer or wasmMemory.buffer\");\n\nfunction missingLibrarySymbol(sym) {\n if (typeof globalThis !== \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n  Object.defineProperty(globalThis, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"`\" + sym + \"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line\";\n    var librarySymbol = sym;\n    if (!librarySymbol.startsWith(\"_\")) {\n     librarySymbol = \"$\" + sym;\n    }\n    msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    warnOnce(msg);\n    return undefined;\n   }\n  });\n }\n unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n  Object.defineProperty(Module, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    abort(msg);\n   }\n  });\n }\n}\n\nfunction dbg(text) {\n console.warn.apply(console, arguments);\n}\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = `Program terminated with exit(${status})`;\n this.status = status;\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >>> 0];\n\n case \"i8\":\n  return HEAP8[ptr >>> 0];\n\n case \"i16\":\n  return HEAP16[ptr >>> 1];\n\n case \"i32\":\n  return HEAP32[ptr >>> 2];\n\n case \"i64\":\n  abort(\"to do getValue(i64) use WASM_BIGINT\");\n\n case \"float\":\n  return HEAPF32[ptr >>> 2];\n\n case \"double\":\n  return HEAPF64[ptr >>> 3];\n\n case \"*\":\n  return HEAPU32[ptr >>> 2];\n\n default:\n  abort(`invalid type for getValue: ${type}`);\n }\n}\n\nfunction ptrToString(ptr) {\n assert(typeof ptr === \"number\");\n return \"0x\" + ptr.toString(16).padStart(8, \"0\");\n}\n\nfunction setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[ptr >>> 1] = value;\n  break;\n\n case \"i32\":\n  HEAP32[ptr >>> 2] = value;\n  break;\n\n case \"i64\":\n  abort(\"to do setValue(i64) use WASM_BIGINT\");\n\n case \"float\":\n  HEAPF32[ptr >>> 2] = value;\n  break;\n\n case \"double\":\n  HEAPF64[ptr >>> 3] = value;\n  break;\n\n case \"*\":\n  HEAPU32[ptr >>> 2] = value;\n  break;\n\n default:\n  abort(`invalid type for setValue: ${type}`);\n }\n}\n\nfunction warnOnce(text) {\n if (!warnOnce.shown) warnOnce.shown = {};\n if (!warnOnce.shown[text]) {\n  warnOnce.shown[text] = 1;\n  if (ENVIRONMENT_IS_NODE) text = \"warning: \" + text;\n  err(text);\n }\n}\n\nfunction _XML_GetBuffer() {\n err(\"missing function: XML_GetBuffer\");\n abort(-1);\n}\n\nfunction _XML_GetErrorCode() {\n err(\"missing function: XML_GetErrorCode\");\n abort(-1);\n}\n\nfunction _XML_Parse() {\n err(\"missing function: XML_Parse\");\n abort(-1);\n}\n\nfunction _XML_ParseBuffer() {\n err(\"missing function: XML_ParseBuffer\");\n abort(-1);\n}\n\nfunction _XML_ParserCreate() {\n err(\"missing function: XML_ParserCreate\");\n abort(-1);\n}\n\nfunction _XML_ParserFree() {\n err(\"missing function: XML_ParserFree\");\n abort(-1);\n}\n\nfunction _XML_ResumeParser() {\n err(\"missing function: XML_ResumeParser\");\n abort(-1);\n}\n\nfunction _XML_SetCharacterDataHandler() {\n err(\"missing function: XML_SetCharacterDataHandler\");\n abort(-1);\n}\n\nfunction _XML_SetElementHandler() {\n err(\"missing function: XML_SetElementHandler\");\n abort(-1);\n}\n\nfunction _XML_SetUserData() {\n err(\"missing function: XML_SetUserData\");\n abort(-1);\n}\n\nfunction _XML_StopParser() {\n err(\"missing function: XML_StopParser\");\n abort(-1);\n}\n\nfunction ExceptionInfo(excPtr) {\n this.excPtr = excPtr;\n this.ptr = excPtr - 24;\n this.set_type = function(type) {\n  HEAPU32[this.ptr + 4 >>> 2] = type;\n };\n this.get_type = function() {\n  return HEAPU32[this.ptr + 4 >>> 2];\n };\n this.set_destructor = function(destructor) {\n  HEAPU32[this.ptr + 8 >>> 2] = destructor;\n };\n this.get_destructor = function() {\n  return HEAPU32[this.ptr + 8 >>> 2];\n };\n this.set_caught = function(caught) {\n  caught = caught ? 1 : 0;\n  HEAP8[this.ptr + 12 >>> 0] = caught;\n };\n this.get_caught = function() {\n  return HEAP8[this.ptr + 12 >>> 0] != 0;\n };\n this.set_rethrown = function(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  HEAP8[this.ptr + 13 >>> 0] = rethrown;\n };\n this.get_rethrown = function() {\n  return HEAP8[this.ptr + 13 >>> 0] != 0;\n };\n this.init = function(type, destructor) {\n  this.set_adjusted_ptr(0);\n  this.set_type(type);\n  this.set_destructor(destructor);\n };\n this.set_adjusted_ptr = function(adjustedPtr) {\n  HEAPU32[this.ptr + 16 >>> 2] = adjustedPtr;\n };\n this.get_adjusted_ptr = function() {\n  return HEAPU32[this.ptr + 16 >>> 2];\n };\n this.get_exception_ptr = function() {\n  var isPointer = ___cxa_is_pointer_type(this.get_type());\n  if (isPointer) {\n   return HEAPU32[this.excPtr >>> 2];\n  }\n  var adjusted = this.get_adjusted_ptr();\n  if (adjusted !== 0) return adjusted;\n  return this.excPtr;\n };\n}\n\nvar exceptionLast = 0;\n\nvar uncaughtExceptionCount = 0;\n\nfunction ___cxa_throw(ptr, type, destructor) {\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n uncaughtExceptionCount++;\n assert(false, \"Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.\");\n}\n\nvar dlopenMissingError = \"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\";\n\nfunction ___dlsym(handle, symbol, ra) {\n abort(dlopenMissingError);\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n idx >>>= 0;\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   if ((u0 & 248) != 240) warnOnce(\"Invalid UTF-8 leading byte \" + ptrToString(u0) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n assert(typeof ptr == \"number\");\n ptr >>>= 0;\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nvar SYSCALLS = {\n varargs: undefined,\n get: function() {\n  assert(SYSCALLS.varargs != undefined);\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nfunction ___syscall__newselect(nfds, readfds, writefds, exceptfds, timeout) {\n assert(nfds <= 64, \"nfds must be less than or equal to 64\");\n assert(!exceptfds, \"exceptfds not supported\");\n var total = 0;\n var srcReadLow = readfds ? HEAP32[readfds >>> 2] : 0, srcReadHigh = readfds ? HEAP32[readfds + 4 >>> 2] : 0;\n var srcWriteLow = writefds ? HEAP32[writefds >>> 2] : 0, srcWriteHigh = writefds ? HEAP32[writefds + 4 >>> 2] : 0;\n var srcExceptLow = exceptfds ? HEAP32[exceptfds >>> 2] : 0, srcExceptHigh = exceptfds ? HEAP32[exceptfds + 4 >>> 2] : 0;\n var dstReadLow = 0, dstReadHigh = 0;\n var dstWriteLow = 0, dstWriteHigh = 0;\n var dstExceptLow = 0, dstExceptHigh = 0;\n var allLow = (readfds ? HEAP32[readfds >>> 2] : 0) | (writefds ? HEAP32[writefds >>> 2] : 0) | (exceptfds ? HEAP32[exceptfds >>> 2] : 0);\n var allHigh = (readfds ? HEAP32[readfds + 4 >>> 2] : 0) | (writefds ? HEAP32[writefds + 4 >>> 2] : 0) | (exceptfds ? HEAP32[exceptfds + 4 >>> 2] : 0);\n var check = function(fd, low, high, val) {\n  return fd < 32 ? low & val : high & val;\n };\n for (var fd = 0; fd < nfds; fd++) {\n  var mask = 1 << fd % 32;\n  if (!check(fd, allLow, allHigh, mask)) {\n   continue;\n  }\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  var flags = SYSCALLS.DEFAULT_POLLMASK;\n  if (stream.stream_ops.poll) {\n   flags = stream.stream_ops.poll(stream);\n  }\n  if (flags & 1 && check(fd, srcReadLow, srcReadHigh, mask)) {\n   fd < 32 ? dstReadLow = dstReadLow | mask : dstReadHigh = dstReadHigh | mask;\n   total++;\n  }\n  if (flags & 4 && check(fd, srcWriteLow, srcWriteHigh, mask)) {\n   fd < 32 ? dstWriteLow = dstWriteLow | mask : dstWriteHigh = dstWriteHigh | mask;\n   total++;\n  }\n  if (flags & 2 && check(fd, srcExceptLow, srcExceptHigh, mask)) {\n   fd < 32 ? dstExceptLow = dstExceptLow | mask : dstExceptHigh = dstExceptHigh | mask;\n   total++;\n  }\n }\n if (readfds) {\n  HEAP32[readfds >>> 2] = dstReadLow;\n  HEAP32[readfds + 4 >>> 2] = dstReadHigh;\n }\n if (writefds) {\n  HEAP32[writefds >>> 2] = dstWriteLow;\n  HEAP32[writefds + 4 >>> 2] = dstWriteHigh;\n }\n if (exceptfds) {\n  HEAP32[exceptfds >>> 2] = dstExceptLow;\n  HEAP32[exceptfds + 4 >>> 2] = dstExceptHigh;\n }\n return total;\n}\n\nfunction SOCKFS() {\n err(\"missing function: $SOCKFS\");\n abort(-1);\n}\n\nfunction FS() {\n err(\"missing function: $FS\");\n abort(-1);\n}\n\nfunction getSocketFromFD(fd) {\n var socket = SOCKFS.getSocket(fd);\n if (!socket) throw new FS.ErrnoError(8);\n return socket;\n}\n\nfunction setErrNo(value) {\n HEAP32[___errno_location() >>> 2] = value;\n return value;\n}\n\nvar Sockets = {\n BUFFER_SIZE: 10240,\n MAX_BUFFER_SIZE: 10485760,\n nextFd: 1,\n fds: {},\n nextport: 1,\n maxport: 65535,\n peer: null,\n connections: {},\n portmap: {},\n localAddr: 4261412874,\n addrPool: [ 33554442, 50331658, 67108874, 83886090, 100663306, 117440522, 134217738, 150994954, 167772170, 184549386, 201326602, 218103818, 234881034 ]\n};\n\nfunction inetNtop4(addr) {\n return (addr & 255) + \".\" + (addr >> 8 & 255) + \".\" + (addr >> 16 & 255) + \".\" + (addr >> 24 & 255);\n}\n\nfunction inetNtop6(ints) {\n var str = \"\";\n var word = 0;\n var longest = 0;\n var lastzero = 0;\n var zstart = 0;\n var len = 0;\n var i = 0;\n var parts = [ ints[0] & 65535, ints[0] >> 16, ints[1] & 65535, ints[1] >> 16, ints[2] & 65535, ints[2] >> 16, ints[3] & 65535, ints[3] >> 16 ];\n var hasipv4 = true;\n var v4part = \"\";\n for (i = 0; i < 5; i++) {\n  if (parts[i] !== 0) {\n   hasipv4 = false;\n   break;\n  }\n }\n if (hasipv4) {\n  v4part = inetNtop4(parts[6] | parts[7] << 16);\n  if (parts[5] === -1) {\n   str = \"::ffff:\";\n   str += v4part;\n   return str;\n  }\n  if (parts[5] === 0) {\n   str = \"::\";\n   if (v4part === \"0.0.0.0\") v4part = \"\";\n   if (v4part === \"0.0.0.1\") v4part = \"1\";\n   str += v4part;\n   return str;\n  }\n }\n for (word = 0; word < 8; word++) {\n  if (parts[word] === 0) {\n   if (word - lastzero > 1) {\n    len = 0;\n   }\n   lastzero = word;\n   len++;\n  }\n  if (len > longest) {\n   longest = len;\n   zstart = word - longest + 1;\n  }\n }\n for (word = 0; word < 8; word++) {\n  if (longest > 1) {\n   if (parts[word] === 0 && word >= zstart && word < zstart + longest) {\n    if (word === zstart) {\n     str += \":\";\n     if (zstart === 0) str += \":\";\n    }\n    continue;\n   }\n  }\n  str += Number(_ntohs(parts[word] & 65535)).toString(16);\n  str += word < 7 ? \":\" : \"\";\n }\n return str;\n}\n\nfunction readSockaddr(sa, salen) {\n var family = HEAP16[sa >>> 1];\n var port = _ntohs(HEAPU16[sa + 2 >>> 1]);\n var addr;\n switch (family) {\n case 2:\n  if (salen !== 16) {\n   return {\n    errno: 28\n   };\n  }\n  addr = HEAP32[sa + 4 >>> 2];\n  addr = inetNtop4(addr);\n  break;\n\n case 10:\n  if (salen !== 28) {\n   return {\n    errno: 28\n   };\n  }\n  addr = [ HEAP32[sa + 8 >>> 2], HEAP32[sa + 12 >>> 2], HEAP32[sa + 16 >>> 2], HEAP32[sa + 20 >>> 2] ];\n  addr = inetNtop6(addr);\n  break;\n\n default:\n  return {\n   errno: 5\n  };\n }\n return {\n  family: family,\n  addr: addr,\n  port: port\n };\n}\n\nfunction inetPton4(str) {\n var b = str.split(\".\");\n for (var i = 0; i < 4; i++) {\n  var tmp = Number(b[i]);\n  if (isNaN(tmp)) return null;\n  b[i] = tmp;\n }\n return (b[0] | b[1] << 8 | b[2] << 16 | b[3] << 24) >>> 0;\n}\n\nfunction jstoi_q(str) {\n return parseInt(str);\n}\n\nfunction inetPton6(str) {\n var words;\n var w, offset, z, i;\n var valid6regx = /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;\n var parts = [];\n if (!valid6regx.test(str)) {\n  return null;\n }\n if (str === \"::\") {\n  return [ 0, 0, 0, 0, 0, 0, 0, 0 ];\n }\n if (str.startsWith(\"::\")) {\n  str = str.replace(\"::\", \"Z:\");\n } else {\n  str = str.replace(\"::\", \":Z:\");\n }\n if (str.indexOf(\".\") > 0) {\n  str = str.replace(new RegExp(\"[.]\", \"g\"), \":\");\n  words = str.split(\":\");\n  words[words.length - 4] = jstoi_q(words[words.length - 4]) + jstoi_q(words[words.length - 3]) * 256;\n  words[words.length - 3] = jstoi_q(words[words.length - 2]) + jstoi_q(words[words.length - 1]) * 256;\n  words = words.slice(0, words.length - 2);\n } else {\n  words = str.split(\":\");\n }\n offset = 0;\n z = 0;\n for (w = 0; w < words.length; w++) {\n  if (typeof words[w] == \"string\") {\n   if (words[w] === \"Z\") {\n    for (z = 0; z < 8 - words.length + 1; z++) {\n     parts[w + z] = 0;\n    }\n    offset = z - 1;\n   } else {\n    parts[w + offset] = _htons(parseInt(words[w], 16));\n   }\n  } else {\n   parts[w + offset] = words[w];\n  }\n }\n return [ parts[1] << 16 | parts[0], parts[3] << 16 | parts[2], parts[5] << 16 | parts[4], parts[7] << 16 | parts[6] ];\n}\n\nvar DNS = {\n address_map: {\n  id: 1,\n  addrs: {},\n  names: {}\n },\n lookup_name: function(name) {\n  var res = inetPton4(name);\n  if (res !== null) {\n   return name;\n  }\n  res = inetPton6(name);\n  if (res !== null) {\n   return name;\n  }\n  var addr;\n  if (DNS.address_map.addrs[name]) {\n   addr = DNS.address_map.addrs[name];\n  } else {\n   var id = DNS.address_map.id++;\n   assert(id < 65535, \"exceeded max address mappings of 65535\");\n   addr = \"172.29.\" + (id & 255) + \".\" + (id & 65280);\n   DNS.address_map.names[addr] = name;\n   DNS.address_map.addrs[name] = addr;\n  }\n  return addr;\n },\n lookup_addr: function(addr) {\n  if (DNS.address_map.names[addr]) {\n   return DNS.address_map.names[addr];\n  }\n  return null;\n }\n};\n\nfunction getSocketAddress(addrp, addrlen, allowNull) {\n if (allowNull && addrp === 0) return null;\n var info = readSockaddr(addrp, addrlen);\n if (info.errno) throw new FS.ErrnoError(info.errno);\n info.addr = DNS.lookup_addr(info.addr) || info.addr;\n return info;\n}\n\nfunction ___syscall_bind(fd, addr, addrlen, d1, d2, d3) {\n var sock = getSocketFromFD(fd);\n var info = getSocketAddress(addr, addrlen);\n sock.sock_ops.bind(sock, info.addr, info.port);\n return 0;\n}\n\nfunction ___syscall_connect(fd, addr, addrlen, d1, d2, d3) {\n var sock = getSocketFromFD(fd);\n var info = getSocketAddress(addr, addrlen);\n sock.sock_ops.connect(sock, info.addr, info.port);\n return 0;\n}\n\nfunction ___syscall_faccessat(dirfd, path, amode, flags) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_fstat64(fd, buf) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction convertI32PairToI53Checked(lo, hi) {\n assert(lo == lo >>> 0 || lo == (lo | 0));\n assert(hi === (hi | 0));\n return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n}\n\nfunction ___syscall_ftruncate64(fd, length_low, length_high) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n outIdx >>>= 0;\n assert(typeof str === \"string\");\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++ >>> 0] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 192 | u >> 6;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 224 | u >> 12;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   if (u > 1114111) warnOnce(\"Invalid Unicode code point \" + ptrToString(u) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\n   heap[outIdx++ >>> 0] = 240 | u >> 18;\n   heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  }\n }\n heap[outIdx >>> 0] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction ___syscall_getdents64(fd, dirp, count) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction zeroMemory(address, size) {\n HEAPU8.fill(0, address, address + size);\n return address;\n}\n\nfunction writeSockaddr(sa, family, addr, port, addrlen) {\n switch (family) {\n case 2:\n  addr = inetPton4(addr);\n  zeroMemory(sa, 16);\n  if (addrlen) {\n   HEAP32[addrlen >>> 2] = 16;\n  }\n  HEAP16[sa >>> 1] = family;\n  HEAP32[sa + 4 >>> 2] = addr;\n  HEAP16[sa + 2 >>> 1] = _htons(port);\n  break;\n\n case 10:\n  addr = inetPton6(addr);\n  zeroMemory(sa, 28);\n  if (addrlen) {\n   HEAP32[addrlen >>> 2] = 28;\n  }\n  HEAP32[sa >>> 2] = family;\n  HEAP32[sa + 8 >>> 2] = addr[0];\n  HEAP32[sa + 12 >>> 2] = addr[1];\n  HEAP32[sa + 16 >>> 2] = addr[2];\n  HEAP32[sa + 20 >>> 2] = addr[3];\n  HEAP16[sa + 2 >>> 1] = _htons(port);\n  break;\n\n default:\n  return 5;\n }\n return 0;\n}\n\nfunction ___syscall_getpeername(fd, addr, addrlen, d1, d2, d3) {\n var sock = getSocketFromFD(fd);\n if (!sock.daddr) {\n  return -53;\n }\n var errno = writeSockaddr(addr, sock.family, DNS.lookup_name(sock.daddr), sock.dport, addrlen);\n assert(!errno);\n return 0;\n}\n\nfunction ___syscall_getsockopt(fd, level, optname, optval, optlen, d1) {\n var sock = getSocketFromFD(fd);\n if (level === 1) {\n  if (optname === 4) {\n   HEAP32[optval >>> 2] = sock.error;\n   HEAP32[optlen >>> 2] = 4;\n   sock.error = null;\n   return 0;\n  }\n }\n return -50;\n}\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_lstat64(path, buf) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_mkdirat(dirfd, path, mode) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_newfstatat(dirfd, path, buf, flags) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n SYSCALLS.varargs = varargs;\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_recvfrom(fd, buf, len, flags, addr, addrlen) {\n var sock = getSocketFromFD(fd);\n var msg = sock.sock_ops.recvmsg(sock, len);\n if (!msg) return 0;\n if (addr) {\n  var errno = writeSockaddr(addr, sock.family, DNS.lookup_name(msg.addr), msg.port, addrlen);\n  assert(!errno);\n }\n HEAPU8.set(msg.buffer, buf >>> 0);\n return msg.buffer.byteLength;\n}\n\nfunction ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_rmdir(path) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_sendto(fd, message, length, flags, addr, addr_len) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_socket(domain, type, protocol) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_stat64(path, buf) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_unlinkat(dirfd, path, flags) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nvar nowIsMonotonic = true;\n\nfunction __emscripten_get_now_is_monotonic() {\n return nowIsMonotonic;\n}\n\nfunction readI53FromI64(ptr) {\n return HEAPU32[ptr >>> 2] + HEAP32[ptr + 4 >>> 2] * 4294967296;\n}\n\nfunction isLeapYear(year) {\n return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nvar MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];\n\nvar MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];\n\nfunction ydayFromDate(date) {\n var leap = isLeapYear(date.getFullYear());\n var monthDaysCumulative = leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE;\n var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n return yday;\n}\n\nfunction __localtime_js(time, tmPtr) {\n var date = new Date(readI53FromI64(time) * 1e3);\n HEAP32[tmPtr >>> 2] = date.getSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getFullYear() - 1900;\n HEAP32[tmPtr + 24 >>> 2] = date.getDay();\n var yday = ydayFromDate(date) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n HEAP32[tmPtr + 36 >>> 2] = -(date.getTimezoneOffset() * 60);\n var start = new Date(date.getFullYear(), 0, 1);\n var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n var winterOffset = start.getTimezoneOffset();\n var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n HEAP32[tmPtr + 32 >>> 2] = dst;\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n}\n\nfunction stringToNewUTF8(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = _malloc(size);\n if (ret) stringToUTF8(str, ret, size);\n return ret;\n}\n\nfunction __tzset_js(timezone, daylight, tzname) {\n var currentYear = new Date().getFullYear();\n var winter = new Date(currentYear, 0, 1);\n var summer = new Date(currentYear, 6, 1);\n var winterOffset = winter.getTimezoneOffset();\n var summerOffset = summer.getTimezoneOffset();\n var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n HEAPU32[timezone >>> 2] = stdTimezoneOffset * 60;\n HEAP32[daylight >>> 2] = Number(winterOffset != summerOffset);\n function extractZone(date) {\n  var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n  return match ? match[1] : \"GMT\";\n }\n var winterName = extractZone(winter);\n var summerName = extractZone(summer);\n var winterNamePtr = stringToNewUTF8(winterName);\n var summerNamePtr = stringToNewUTF8(summerName);\n if (summerOffset < winterOffset) {\n  HEAPU32[tzname >>> 2] = winterNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = summerNamePtr;\n } else {\n  HEAPU32[tzname >>> 2] = summerNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = winterNamePtr;\n }\n}\n\nfunction _abort() {\n abort(\"native code called abort()\");\n}\n\nfunction _dlopen(filename, flags) {\n abort(dlopenMissingError);\n}\n\nfunction _duckdb_web_fs_directory_create(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.createDirectory(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_directory_exists(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.checkDirectory(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_directory_list_files(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_directory_remove(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.removeDirectory(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_file_close(fileId) {\n return globalThis.DUCKDB_RUNTIME.closeFile(Module, fileId);\n}\n\nfunction _duckdb_web_fs_file_exists(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.checkFile(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_file_get_last_modified_time(fileId) {\n return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module, fileId);\n}\n\nfunction _duckdb_web_fs_file_move(from, fromLen, to, toLen) {\n return globalThis.DUCKDB_RUNTIME.moveFile(Module, from, fromLen, to, toLen);\n}\n\nfunction _duckdb_web_fs_file_open(fileId, flags) {\n return globalThis.DUCKDB_RUNTIME.openFile(Module, fileId, flags);\n}\n\nfunction _duckdb_web_fs_file_read(fileId, buf, size, location) {\n return globalThis.DUCKDB_RUNTIME.readFile(Module, fileId, buf, size, location);\n}\n\nfunction _duckdb_web_fs_file_truncate(fileId, newSize) {\n return globalThis.DUCKDB_RUNTIME.truncateFile(Module, fileId, newSize);\n}\n\nfunction _duckdb_web_fs_file_write(fileId, buf, size, location) {\n return globalThis.DUCKDB_RUNTIME.writeFile(Module, fileId, buf, size, location);\n}\n\nfunction _duckdb_web_fs_get_default_data_protocol(Module) {\n return globalThis.DUCKDB_RUNTIME.getDefaultDataProtocol(Module);\n}\n\nfunction _duckdb_web_fs_glob(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.glob(Module, path, pathLen);\n}\n\nfunction _duckdb_web_test_platform_feature(feature) {\n return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module, feature);\n}\n\nfunction _duckdb_web_udf_scalar_call(funcId, descPtr, descSize, ptrsPtr, ptrsSize, response) {\n return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module, funcId, descPtr, descSize, ptrsPtr, ptrsSize, response);\n}\n\nfunction _emscripten_console_error(str) {\n assert(typeof str == \"number\");\n console.error(UTF8ToString(str));\n}\n\nfunction _emscripten_date_now() {\n return Date.now();\n}\n\nfunction getHeapMax() {\n return 4294901760;\n}\n\nfunction _emscripten_get_heap_max() {\n return getHeapMax();\n}\n\nvar _emscripten_get_now;\n\nif (ENVIRONMENT_IS_NODE) {\n global.performance = require(\"perf_hooks\").performance;\n}\n\n_emscripten_get_now = () => performance.now();\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n}\n\nfunction emscripten_realloc_buffer(size) {\n var b = wasmMemory.buffer;\n var pages = size - b.byteLength + 65535 >>> 16;\n try {\n  wasmMemory.grow(pages);\n  updateMemoryViews();\n  return 1;\n } catch (e) {\n  err(`emscripten_realloc_buffer: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);\n }\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n assert(requestedSize > oldSize);\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  err(`Cannot enlarge memory, asked to go up to ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);\n  return false;\n }\n var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);\n return false;\n}\n\nvar ENV = {};\n\nfunction getExecutableName() {\n return thisProgram || \"./this.program\";\n}\n\nfunction getEnvStrings() {\n if (!getEnvStrings.strings) {\n  var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n  var env = {\n   \"USER\": \"web_user\",\n   \"LOGNAME\": \"web_user\",\n   \"PATH\": \"/\",\n   \"PWD\": \"/\",\n   \"HOME\": \"/home/web_user\",\n   \"LANG\": lang,\n   \"_\": getExecutableName()\n  };\n  for (var x in ENV) {\n   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n  }\n  var strings = [];\n  for (var x in env) {\n   strings.push(`${x}=${env[x]}`);\n  }\n  getEnvStrings.strings = strings;\n }\n return getEnvStrings.strings;\n}\n\nfunction stringToAscii(str, buffer) {\n for (var i = 0; i < str.length; ++i) {\n  assert(str.charCodeAt(i) === (str.charCodeAt(i) & 255));\n  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);\n }\n HEAP8[buffer >>> 0] = 0;\n}\n\nfunction _environ_get(__environ, environ_buf) {\n var bufSize = 0;\n getEnvStrings().forEach(function(string, i) {\n  var ptr = environ_buf + bufSize;\n  HEAPU32[__environ + i * 4 >>> 2] = ptr;\n  stringToAscii(string, ptr);\n  bufSize += string.length + 1;\n });\n return 0;\n}\n\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\n var strings = getEnvStrings();\n HEAPU32[penviron_count >>> 2] = strings.length;\n var bufSize = 0;\n strings.forEach(function(string) {\n  bufSize += string.length + 1;\n });\n HEAPU32[penviron_buf_size >>> 2] = bufSize;\n return 0;\n}\n\nfunction _fd_close(fd) {\n abort(\"fd_close called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_fdstat_get(fd, pbuf) {\n var rightsBase = 0;\n var rightsInheriting = 0;\n var flags = 0;\n {\n  assert(fd == 0 || fd == 1 || fd == 2);\n  var type = 2;\n  if (fd == 0) {\n   rightsBase = 2;\n  } else if (fd == 1 || fd == 2) {\n   rightsBase = 64;\n  }\n  flags = 1;\n }\n HEAP8[pbuf >>> 0] = type;\n HEAP16[pbuf + 2 >>> 1] = flags;\n tempI64 = [ rightsBase >>> 0, (tempDouble = rightsBase, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n HEAP32[pbuf + 8 >>> 2] = tempI64[0], HEAP32[pbuf + 12 >>> 2] = tempI64[1];\n tempI64 = [ rightsInheriting >>> 0, (tempDouble = rightsInheriting, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n HEAP32[pbuf + 16 >>> 2] = tempI64[0], HEAP32[pbuf + 20 >>> 2] = tempI64[1];\n return 0;\n}\n\nfunction _fd_pread(fd, iov, iovcnt, offset_low, offset_high, pnum) {\n abort(\"fd_pread called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_pwrite(fd, iov, iovcnt, offset_low, offset_high, pnum) {\n abort(\"fd_pwrite called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n abort(\"fd_read called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n return 70;\n}\n\nfunction _fd_sync(fd) {\n abort(\"fd_sync called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\nfunction printChar(stream, curr) {\n var buffer = printCharBuffers[stream];\n assert(buffer);\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n}\n\nfunction flush_NO_FILESYSTEM() {\n _fflush(0);\n if (printCharBuffers[1].length) printChar(1, 10);\n if (printCharBuffers[2].length) printChar(2, 10);\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[iov >>> 2];\n  var len = HEAPU32[iov + 4 >>> 2];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j >>> 0]);\n  }\n  num += len;\n }\n HEAPU32[pnum >>> 2] = num;\n return 0;\n}\n\nfunction _getaddrinfo(node, service, hint, out) {\n var addrs = [];\n var canon = null;\n var addr = 0;\n var port = 0;\n var flags = 0;\n var family = 0;\n var type = 0;\n var proto = 0;\n var ai, last;\n function allocaddrinfo(family, type, proto, canon, addr, port) {\n  var sa, salen, ai;\n  var errno;\n  salen = family === 10 ? 28 : 16;\n  addr = family === 10 ? inetNtop6(addr) : inetNtop4(addr);\n  sa = _malloc(salen);\n  errno = writeSockaddr(sa, family, addr, port);\n  assert(!errno);\n  ai = _malloc(32);\n  HEAP32[ai + 4 >>> 2] = family;\n  HEAP32[ai + 8 >>> 2] = type;\n  HEAP32[ai + 12 >>> 2] = proto;\n  HEAPU32[ai + 24 >>> 2] = canon;\n  HEAPU32[ai + 20 >>> 2] = sa;\n  if (family === 10) {\n   HEAP32[ai + 16 >>> 2] = 28;\n  } else {\n   HEAP32[ai + 16 >>> 2] = 16;\n  }\n  HEAP32[ai + 28 >>> 2] = 0;\n  return ai;\n }\n if (hint) {\n  flags = HEAP32[hint >>> 2];\n  family = HEAP32[hint + 4 >>> 2];\n  type = HEAP32[hint + 8 >>> 2];\n  proto = HEAP32[hint + 12 >>> 2];\n }\n if (type && !proto) {\n  proto = type === 2 ? 17 : 6;\n }\n if (!type && proto) {\n  type = proto === 17 ? 2 : 1;\n }\n if (proto === 0) {\n  proto = 6;\n }\n if (type === 0) {\n  type = 1;\n }\n if (!node && !service) {\n  return -2;\n }\n if (flags & ~(1 | 2 | 4 | 1024 | 8 | 16 | 32)) {\n  return -1;\n }\n if (hint !== 0 && HEAP32[hint >>> 2] & 2 && !node) {\n  return -1;\n }\n if (flags & 32) {\n  return -2;\n }\n if (type !== 0 && type !== 1 && type !== 2) {\n  return -7;\n }\n if (family !== 0 && family !== 2 && family !== 10) {\n  return -6;\n }\n if (service) {\n  service = UTF8ToString(service);\n  port = parseInt(service, 10);\n  if (isNaN(port)) {\n   if (flags & 1024) {\n    return -2;\n   }\n   return -8;\n  }\n }\n if (!node) {\n  if (family === 0) {\n   family = 2;\n  }\n  if ((flags & 1) === 0) {\n   if (family === 2) {\n    addr = _htonl(2130706433);\n   } else {\n    addr = [ 0, 0, 0, 1 ];\n   }\n  }\n  ai = allocaddrinfo(family, type, proto, null, addr, port);\n  HEAPU32[out >>> 2] = ai;\n  return 0;\n }\n node = UTF8ToString(node);\n addr = inetPton4(node);\n if (addr !== null) {\n  if (family === 0 || family === 2) {\n   family = 2;\n  } else if (family === 10 && flags & 8) {\n   addr = [ 0, 0, _htonl(65535), addr ];\n   family = 10;\n  } else {\n   return -2;\n  }\n } else {\n  addr = inetPton6(node);\n  if (addr !== null) {\n   if (family === 0 || family === 10) {\n    family = 10;\n   } else {\n    return -2;\n   }\n  }\n }\n if (addr != null) {\n  ai = allocaddrinfo(family, type, proto, node, addr, port);\n  HEAPU32[out >>> 2] = ai;\n  return 0;\n }\n if (flags & 4) {\n  return -2;\n }\n node = DNS.lookup_name(node);\n addr = inetPton4(node);\n if (family === 0) {\n  family = 2;\n } else if (family === 10) {\n  addr = [ 0, 0, _htonl(65535), addr ];\n }\n ai = allocaddrinfo(family, type, proto, null, addr, port);\n HEAPU32[out >>> 2] = ai;\n return 0;\n}\n\nfunction initRandomFill() {\n if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") {\n  return view => crypto.getRandomValues(view);\n } else if (ENVIRONMENT_IS_NODE) {\n  try {\n   var crypto_module = require(\"crypto\");\n   var randomFillSync = crypto_module[\"randomFillSync\"];\n   if (randomFillSync) {\n    return view => crypto_module[\"randomFillSync\"](view);\n   }\n   var randomBytes = crypto_module[\"randomBytes\"];\n   return view => (view.set(randomBytes(view.byteLength)), view);\n  } catch (e) {}\n }\n abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\");\n}\n\nfunction randomFill(view) {\n return (randomFill = initRandomFill())(view);\n}\n\nfunction _getentropy(buffer, size) {\n randomFill(HEAPU8.subarray(buffer >>> 0, buffer + size >>> 0));\n return 0;\n}\n\nfunction _getnameinfo(sa, salen, node, nodelen, serv, servlen, flags) {\n var info = readSockaddr(sa, salen);\n if (info.errno) {\n  return -6;\n }\n var port = info.port;\n var addr = info.addr;\n var overflowed = false;\n if (node && nodelen) {\n  var lookup;\n  if (flags & 1 || !(lookup = DNS.lookup_addr(addr))) {\n   if (flags & 8) {\n    return -2;\n   }\n  } else {\n   addr = lookup;\n  }\n  var numBytesWrittenExclNull = stringToUTF8(addr, node, nodelen);\n  if (numBytesWrittenExclNull + 1 >= nodelen) {\n   overflowed = true;\n  }\n }\n if (serv && servlen) {\n  port = \"\" + port;\n  var numBytesWrittenExclNull = stringToUTF8(port, serv, servlen);\n  if (numBytesWrittenExclNull + 1 >= servlen) {\n   overflowed = true;\n  }\n }\n if (overflowed) {\n  return -12;\n }\n return 0;\n}\n\nfunction arraySum(array, index) {\n var sum = 0;\n for (var i = 0; i <= index; sum += array[i++]) {}\n return sum;\n}\n\nvar MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nvar MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nfunction addDays(date, days) {\n var newDate = new Date(date.getTime());\n while (days > 0) {\n  var leap = isLeapYear(newDate.getFullYear());\n  var currentMonth = newDate.getMonth();\n  var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  if (days > daysInCurrentMonth - newDate.getDate()) {\n   days -= daysInCurrentMonth - newDate.getDate() + 1;\n   newDate.setDate(1);\n   if (currentMonth < 11) {\n    newDate.setMonth(currentMonth + 1);\n   } else {\n    newDate.setMonth(0);\n    newDate.setFullYear(newDate.getFullYear() + 1);\n   }\n  } else {\n   newDate.setDate(newDate.getDate() + days);\n   return newDate;\n  }\n }\n return newDate;\n}\n\nfunction intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nfunction writeArrayToMemory(array, buffer) {\n assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\n HEAP8.set(array, buffer >>> 0);\n}\n\nfunction _strftime(s, maxsize, format, tm) {\n var tm_zone = HEAP32[tm + 40 >>> 2];\n var date = {\n  tm_sec: HEAP32[tm >>> 2],\n  tm_min: HEAP32[tm + 4 >>> 2],\n  tm_hour: HEAP32[tm + 8 >>> 2],\n  tm_mday: HEAP32[tm + 12 >>> 2],\n  tm_mon: HEAP32[tm + 16 >>> 2],\n  tm_year: HEAP32[tm + 20 >>> 2],\n  tm_wday: HEAP32[tm + 24 >>> 2],\n  tm_yday: HEAP32[tm + 28 >>> 2],\n  tm_isdst: HEAP32[tm + 32 >>> 2],\n  tm_gmtoff: HEAP32[tm + 36 >>> 2],\n  tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n };\n var pattern = UTF8ToString(format);\n var EXPANSION_RULES_1 = {\n  \"%c\": \"%a %b %d %H:%M:%S %Y\",\n  \"%D\": \"%m/%d/%y\",\n  \"%F\": \"%Y-%m-%d\",\n  \"%h\": \"%b\",\n  \"%r\": \"%I:%M:%S %p\",\n  \"%R\": \"%H:%M\",\n  \"%T\": \"%H:%M:%S\",\n  \"%x\": \"%m/%d/%y\",\n  \"%X\": \"%H:%M:%S\",\n  \"%Ec\": \"%c\",\n  \"%EC\": \"%C\",\n  \"%Ex\": \"%m/%d/%y\",\n  \"%EX\": \"%H:%M:%S\",\n  \"%Ey\": \"%y\",\n  \"%EY\": \"%Y\",\n  \"%Od\": \"%d\",\n  \"%Oe\": \"%e\",\n  \"%OH\": \"%H\",\n  \"%OI\": \"%I\",\n  \"%Om\": \"%m\",\n  \"%OM\": \"%M\",\n  \"%OS\": \"%S\",\n  \"%Ou\": \"%u\",\n  \"%OU\": \"%U\",\n  \"%OV\": \"%V\",\n  \"%Ow\": \"%w\",\n  \"%OW\": \"%W\",\n  \"%Oy\": \"%y\"\n };\n for (var rule in EXPANSION_RULES_1) {\n  pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n }\n var WEEKDAYS = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n var MONTHS = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n function leadingSomething(value, digits, character) {\n  var str = typeof value == \"number\" ? value.toString() : value || \"\";\n  while (str.length < digits) {\n   str = character[0] + str;\n  }\n  return str;\n }\n function leadingNulls(value, digits) {\n  return leadingSomething(value, digits, \"0\");\n }\n function compareByDay(date1, date2) {\n  function sgn(value) {\n   return value < 0 ? -1 : value > 0 ? 1 : 0;\n  }\n  var compare;\n  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n    compare = sgn(date1.getDate() - date2.getDate());\n   }\n  }\n  return compare;\n }\n function getFirstWeekStartDate(janFourth) {\n  switch (janFourth.getDay()) {\n  case 0:\n   return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n  case 1:\n   return janFourth;\n\n  case 2:\n   return new Date(janFourth.getFullYear(), 0, 3);\n\n  case 3:\n   return new Date(janFourth.getFullYear(), 0, 2);\n\n  case 4:\n   return new Date(janFourth.getFullYear(), 0, 1);\n\n  case 5:\n   return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n  case 6:\n   return new Date(janFourth.getFullYear() - 1, 11, 30);\n  }\n }\n function getWeekBasedYear(date) {\n  var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n    return thisDate.getFullYear() + 1;\n   }\n   return thisDate.getFullYear();\n  }\n  return thisDate.getFullYear() - 1;\n }\n var EXPANSION_RULES_2 = {\n  \"%a\": function(date) {\n   return WEEKDAYS[date.tm_wday].substring(0, 3);\n  },\n  \"%A\": function(date) {\n   return WEEKDAYS[date.tm_wday];\n  },\n  \"%b\": function(date) {\n   return MONTHS[date.tm_mon].substring(0, 3);\n  },\n  \"%B\": function(date) {\n   return MONTHS[date.tm_mon];\n  },\n  \"%C\": function(date) {\n   var year = date.tm_year + 1900;\n   return leadingNulls(year / 100 | 0, 2);\n  },\n  \"%d\": function(date) {\n   return leadingNulls(date.tm_mday, 2);\n  },\n  \"%e\": function(date) {\n   return leadingSomething(date.tm_mday, 2, \" \");\n  },\n  \"%g\": function(date) {\n   return getWeekBasedYear(date).toString().substring(2);\n  },\n  \"%G\": function(date) {\n   return getWeekBasedYear(date);\n  },\n  \"%H\": function(date) {\n   return leadingNulls(date.tm_hour, 2);\n  },\n  \"%I\": function(date) {\n   var twelveHour = date.tm_hour;\n   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;\n   return leadingNulls(twelveHour, 2);\n  },\n  \"%j\": function(date) {\n   return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n  },\n  \"%m\": function(date) {\n   return leadingNulls(date.tm_mon + 1, 2);\n  },\n  \"%M\": function(date) {\n   return leadingNulls(date.tm_min, 2);\n  },\n  \"%n\": function() {\n   return \"\\n\";\n  },\n  \"%p\": function(date) {\n   if (date.tm_hour >= 0 && date.tm_hour < 12) {\n    return \"AM\";\n   }\n   return \"PM\";\n  },\n  \"%S\": function(date) {\n   return leadingNulls(date.tm_sec, 2);\n  },\n  \"%t\": function() {\n   return \"\\t\";\n  },\n  \"%u\": function(date) {\n   return date.tm_wday || 7;\n  },\n  \"%U\": function(date) {\n   var days = date.tm_yday + 7 - date.tm_wday;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%V\": function(date) {\n   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n    val++;\n   }\n   if (!val) {\n    val = 52;\n    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n    if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {\n     val++;\n    }\n   } else if (val == 53) {\n    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n    if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n   }\n   return leadingNulls(val, 2);\n  },\n  \"%w\": function(date) {\n   return date.tm_wday;\n  },\n  \"%W\": function(date) {\n   var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%y\": function(date) {\n   return (date.tm_year + 1900).toString().substring(2);\n  },\n  \"%Y\": function(date) {\n   return date.tm_year + 1900;\n  },\n  \"%z\": function(date) {\n   var off = date.tm_gmtoff;\n   var ahead = off >= 0;\n   off = Math.abs(off) / 60;\n   off = off / 60 * 100 + off % 60;\n   return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n  },\n  \"%Z\": function(date) {\n   return date.tm_zone;\n  },\n  \"%%\": function() {\n   return \"%\";\n  }\n };\n pattern = pattern.replace(/%%/g, \"\\0\\0\");\n for (var rule in EXPANSION_RULES_2) {\n  if (pattern.includes(rule)) {\n   pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n  }\n }\n pattern = pattern.replace(/\\0\\0/g, \"%\");\n var bytes = intArrayFromString(pattern, false);\n if (bytes.length > maxsize) {\n  return 0;\n }\n writeArrayToMemory(bytes, s);\n return bytes.length - 1;\n}\n\nfunction _strftime_l(s, maxsize, format, tm, loc) {\n return _strftime(s, maxsize, format, tm);\n}\n\nfunction _ucnv_close_64() {\n err(\"missing function: ucnv_close_64\");\n abort(-1);\n}\n\nfunction _ucnv_convertEx_64() {\n err(\"missing function: ucnv_convertEx_64\");\n abort(-1);\n}\n\nfunction _ucnv_open_64() {\n err(\"missing function: ucnv_open_64\");\n abort(-1);\n}\n\nfunction _ucnv_toAlgorithmic_64() {\n err(\"missing function: ucnv_toAlgorithmic_64\");\n abort(-1);\n}\n\nfunction _ucsdet_close_64() {\n err(\"missing function: ucsdet_close_64\");\n abort(-1);\n}\n\nfunction _ucsdet_detect_64() {\n err(\"missing function: ucsdet_detect_64\");\n abort(-1);\n}\n\nfunction _ucsdet_getConfidence_64() {\n err(\"missing function: ucsdet_getConfidence_64\");\n abort(-1);\n}\n\nfunction _ucsdet_getName_64() {\n err(\"missing function: ucsdet_getName_64\");\n abort(-1);\n}\n\nfunction _ucsdet_open_64() {\n err(\"missing function: ucsdet_open_64\");\n abort(-1);\n}\n\nfunction _ucsdet_setText_64() {\n err(\"missing function: ucsdet_setText_64\");\n abort(-1);\n}\n\nfunction _unzClose() {\n err(\"missing function: unzClose\");\n abort(-1);\n}\n\nfunction _unzCloseCurrentFile() {\n err(\"missing function: unzCloseCurrentFile\");\n abort(-1);\n}\n\nfunction _unzGetCurrentFileInfo() {\n err(\"missing function: unzGetCurrentFileInfo\");\n abort(-1);\n}\n\nfunction _unzGetCurrentFileInfo64() {\n err(\"missing function: unzGetCurrentFileInfo64\");\n abort(-1);\n}\n\nfunction _unzGetGlobalInfo() {\n err(\"missing function: unzGetGlobalInfo\");\n abort(-1);\n}\n\nfunction _unzGoToFirstFile() {\n err(\"missing function: unzGoToFirstFile\");\n abort(-1);\n}\n\nfunction _unzGoToNextFile() {\n err(\"missing function: unzGoToNextFile\");\n abort(-1);\n}\n\nfunction _unzLocateFile() {\n err(\"missing function: unzLocateFile\");\n abort(-1);\n}\n\nfunction _unzOpen() {\n err(\"missing function: unzOpen\");\n abort(-1);\n}\n\nfunction _unzOpen2() {\n err(\"missing function: unzOpen2\");\n abort(-1);\n}\n\nfunction _unzOpenCurrentFile() {\n err(\"missing function: unzOpenCurrentFile\");\n abort(-1);\n}\n\nfunction _unzReadCurrentFile() {\n err(\"missing function: unzReadCurrentFile\");\n abort(-1);\n}\n\nfunction _proc_exit(code) {\n EXITSTATUS = code;\n if (!keepRuntimeAlive()) {\n  if (Module[\"onExit\"]) Module[\"onExit\"](code);\n  ABORT = true;\n }\n quit_(code, new ExitStatus(code));\n}\n\nfunction exitJS(status, implicit) {\n EXITSTATUS = status;\n checkUnflushedContent();\n if (keepRuntimeAlive() && !implicit) {\n  var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\n  readyPromiseReject(msg);\n  err(msg);\n }\n _proc_exit(status);\n}\n\nfunction handleException(e) {\n if (e instanceof ExitStatus || e == \"unwind\") {\n  return EXITSTATUS;\n }\n checkStackCookie();\n if (e instanceof WebAssembly.RuntimeError) {\n  if (_emscripten_stack_get_current() <= 0) {\n   err(\"Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)\");\n  }\n }\n quit_(1, e);\n}\n\nfunction getCFunc(ident) {\n var func = Module[\"_\" + ident];\n assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n return func;\n}\n\nfunction stringToUTF8OnStack(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = stackAlloc(size);\n stringToUTF8(str, ret, size);\n return ret;\n}\n\nfunction ccall(ident, returnType, argTypes, args, opts) {\n var toC = {\n  \"string\": str => {\n   var ret = 0;\n   if (str !== null && str !== undefined && str !== 0) {\n    ret = stringToUTF8OnStack(str);\n   }\n   return ret;\n  },\n  \"array\": arr => {\n   var ret = stackAlloc(arr.length);\n   writeArrayToMemory(arr, ret);\n   return ret;\n  }\n };\n function convertReturnValue(ret) {\n  if (returnType === \"string\") {\n   return UTF8ToString(ret);\n  }\n  if (returnType === \"boolean\") return Boolean(ret);\n  return ret;\n }\n var func = getCFunc(ident);\n var cArgs = [];\n var stack = 0;\n assert(returnType !== \"array\", 'Return type should not be \"array\".');\n if (args) {\n  for (var i = 0; i < args.length; i++) {\n   var converter = toC[argTypes[i]];\n   if (converter) {\n    if (stack === 0) stack = stackSave();\n    cArgs[i] = converter(args[i]);\n   } else {\n    cArgs[i] = args[i];\n   }\n  }\n }\n var ret = func.apply(null, cArgs);\n function onDone(ret) {\n  if (stack !== 0) stackRestore(stack);\n  return convertReturnValue(ret);\n }\n ret = onDone(ret);\n return ret;\n}\n\nfunction checkIncomingModuleAPI() {\n ignoredModuleProp(\"fetchSettings\");\n}\n\nvar wasmImports = {\n \"XML_GetBuffer\": _XML_GetBuffer,\n \"XML_GetErrorCode\": _XML_GetErrorCode,\n \"XML_Parse\": _XML_Parse,\n \"XML_ParseBuffer\": _XML_ParseBuffer,\n \"XML_ParserCreate\": _XML_ParserCreate,\n \"XML_ParserFree\": _XML_ParserFree,\n \"XML_ResumeParser\": _XML_ResumeParser,\n \"XML_SetCharacterDataHandler\": _XML_SetCharacterDataHandler,\n \"XML_SetElementHandler\": _XML_SetElementHandler,\n \"XML_SetUserData\": _XML_SetUserData,\n \"XML_StopParser\": _XML_StopParser,\n \"__cxa_throw\": ___cxa_throw,\n \"__dlsym\": ___dlsym,\n \"__syscall__newselect\": ___syscall__newselect,\n \"__syscall_bind\": ___syscall_bind,\n \"__syscall_connect\": ___syscall_connect,\n \"__syscall_faccessat\": ___syscall_faccessat,\n \"__syscall_fcntl64\": ___syscall_fcntl64,\n \"__syscall_fstat64\": ___syscall_fstat64,\n \"__syscall_ftruncate64\": ___syscall_ftruncate64,\n \"__syscall_getdents64\": ___syscall_getdents64,\n \"__syscall_getpeername\": ___syscall_getpeername,\n \"__syscall_getsockopt\": ___syscall_getsockopt,\n \"__syscall_ioctl\": ___syscall_ioctl,\n \"__syscall_lstat64\": ___syscall_lstat64,\n \"__syscall_mkdirat\": ___syscall_mkdirat,\n \"__syscall_newfstatat\": ___syscall_newfstatat,\n \"__syscall_openat\": ___syscall_openat,\n \"__syscall_recvfrom\": ___syscall_recvfrom,\n \"__syscall_renameat\": ___syscall_renameat,\n \"__syscall_rmdir\": ___syscall_rmdir,\n \"__syscall_sendto\": ___syscall_sendto,\n \"__syscall_socket\": ___syscall_socket,\n \"__syscall_stat64\": ___syscall_stat64,\n \"__syscall_unlinkat\": ___syscall_unlinkat,\n \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n \"_localtime_js\": __localtime_js,\n \"_tzset_js\": __tzset_js,\n \"abort\": _abort,\n \"dlopen\": _dlopen,\n \"duckdb_web_fs_directory_create\": _duckdb_web_fs_directory_create,\n \"duckdb_web_fs_directory_exists\": _duckdb_web_fs_directory_exists,\n \"duckdb_web_fs_directory_list_files\": _duckdb_web_fs_directory_list_files,\n \"duckdb_web_fs_directory_remove\": _duckdb_web_fs_directory_remove,\n \"duckdb_web_fs_file_close\": _duckdb_web_fs_file_close,\n \"duckdb_web_fs_file_exists\": _duckdb_web_fs_file_exists,\n \"duckdb_web_fs_file_get_last_modified_time\": _duckdb_web_fs_file_get_last_modified_time,\n \"duckdb_web_fs_file_move\": _duckdb_web_fs_file_move,\n \"duckdb_web_fs_file_open\": _duckdb_web_fs_file_open,\n \"duckdb_web_fs_file_read\": _duckdb_web_fs_file_read,\n \"duckdb_web_fs_file_truncate\": _duckdb_web_fs_file_truncate,\n \"duckdb_web_fs_file_write\": _duckdb_web_fs_file_write,\n \"duckdb_web_fs_get_default_data_protocol\": _duckdb_web_fs_get_default_data_protocol,\n \"duckdb_web_fs_glob\": _duckdb_web_fs_glob,\n \"duckdb_web_test_platform_feature\": _duckdb_web_test_platform_feature,\n \"duckdb_web_udf_scalar_call\": _duckdb_web_udf_scalar_call,\n \"emscripten_console_error\": _emscripten_console_error,\n \"emscripten_date_now\": _emscripten_date_now,\n \"emscripten_get_heap_max\": _emscripten_get_heap_max,\n \"emscripten_get_now\": _emscripten_get_now,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap,\n \"environ_get\": _environ_get,\n \"environ_sizes_get\": _environ_sizes_get,\n \"fd_close\": _fd_close,\n \"fd_fdstat_get\": _fd_fdstat_get,\n \"fd_pread\": _fd_pread,\n \"fd_pwrite\": _fd_pwrite,\n \"fd_read\": _fd_read,\n \"fd_seek\": _fd_seek,\n \"fd_sync\": _fd_sync,\n \"fd_write\": _fd_write,\n \"getaddrinfo\": _getaddrinfo,\n \"getentropy\": _getentropy,\n \"getnameinfo\": _getnameinfo,\n \"strftime_l\": _strftime_l,\n \"ucnv_close_64\": _ucnv_close_64,\n \"ucnv_convertEx_64\": _ucnv_convertEx_64,\n \"ucnv_open_64\": _ucnv_open_64,\n \"ucnv_toAlgorithmic_64\": _ucnv_toAlgorithmic_64,\n \"ucsdet_close_64\": _ucsdet_close_64,\n \"ucsdet_detect_64\": _ucsdet_detect_64,\n \"ucsdet_getConfidence_64\": _ucsdet_getConfidence_64,\n \"ucsdet_getName_64\": _ucsdet_getName_64,\n \"ucsdet_open_64\": _ucsdet_open_64,\n \"ucsdet_setText_64\": _ucsdet_setText_64,\n \"unzClose\": _unzClose,\n \"unzCloseCurrentFile\": _unzCloseCurrentFile,\n \"unzGetCurrentFileInfo\": _unzGetCurrentFileInfo,\n \"unzGetCurrentFileInfo64\": _unzGetCurrentFileInfo64,\n \"unzGetGlobalInfo\": _unzGetGlobalInfo,\n \"unzGoToFirstFile\": _unzGoToFirstFile,\n \"unzGoToNextFile\": _unzGoToNextFile,\n \"unzLocateFile\": _unzLocateFile,\n \"unzOpen\": _unzOpen,\n \"unzOpen2\": _unzOpen2,\n \"unzOpenCurrentFile\": _unzOpenCurrentFile,\n \"unzReadCurrentFile\": _unzReadCurrentFile\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n\nvar _main = Module[\"_main\"] = createExportWrapper(\"main\");\n\nvar _duckdb_web_fs_glob_add_path = Module[\"_duckdb_web_fs_glob_add_path\"] = createExportWrapper(\"duckdb_web_fs_glob_add_path\");\n\nvar _duckdb_web_clear_response = Module[\"_duckdb_web_clear_response\"] = createExportWrapper(\"duckdb_web_clear_response\");\n\nvar _duckdb_web_fail_with = Module[\"_duckdb_web_fail_with\"] = createExportWrapper(\"duckdb_web_fail_with\");\n\nvar _duckdb_web_reset = Module[\"_duckdb_web_reset\"] = createExportWrapper(\"duckdb_web_reset\");\n\nvar _duckdb_web_connect = Module[\"_duckdb_web_connect\"] = createExportWrapper(\"duckdb_web_connect\");\n\nvar _duckdb_web_disconnect = Module[\"_duckdb_web_disconnect\"] = createExportWrapper(\"duckdb_web_disconnect\");\n\nvar _duckdb_web_flush_files = Module[\"_duckdb_web_flush_files\"] = createExportWrapper(\"duckdb_web_flush_files\");\n\nvar _duckdb_web_flush_file = Module[\"_duckdb_web_flush_file\"] = createExportWrapper(\"duckdb_web_flush_file\");\n\nvar _duckdb_web_open = Module[\"_duckdb_web_open\"] = createExportWrapper(\"duckdb_web_open\");\n\nvar _duckdb_web_get_global_file_info = Module[\"_duckdb_web_get_global_file_info\"] = createExportWrapper(\"duckdb_web_get_global_file_info\");\n\nvar _duckdb_web_collect_file_stats = Module[\"_duckdb_web_collect_file_stats\"] = createExportWrapper(\"duckdb_web_collect_file_stats\");\n\nvar _duckdb_web_export_file_stats = Module[\"_duckdb_web_export_file_stats\"] = createExportWrapper(\"duckdb_web_export_file_stats\");\n\nvar _duckdb_web_fs_drop_file = Module[\"_duckdb_web_fs_drop_file\"] = createExportWrapper(\"duckdb_web_fs_drop_file\");\n\nvar _duckdb_web_fs_drop_files = Module[\"_duckdb_web_fs_drop_files\"] = createExportWrapper(\"duckdb_web_fs_drop_files\");\n\nvar _duckdb_web_fs_glob_file_infos = Module[\"_duckdb_web_fs_glob_file_infos\"] = createExportWrapper(\"duckdb_web_fs_glob_file_infos\");\n\nvar _duckdb_web_fs_get_file_info_by_id = Module[\"_duckdb_web_fs_get_file_info_by_id\"] = createExportWrapper(\"duckdb_web_fs_get_file_info_by_id\");\n\nvar _duckdb_web_fs_get_file_info_by_name = Module[\"_duckdb_web_fs_get_file_info_by_name\"] = createExportWrapper(\"duckdb_web_fs_get_file_info_by_name\");\n\nvar _duckdb_web_fs_register_file_url = Module[\"_duckdb_web_fs_register_file_url\"] = createExportWrapper(\"duckdb_web_fs_register_file_url\");\n\nvar _duckdb_web_fs_register_file_buffer = Module[\"_duckdb_web_fs_register_file_buffer\"] = createExportWrapper(\"duckdb_web_fs_register_file_buffer\");\n\nvar _duckdb_web_copy_file_to_buffer = Module[\"_duckdb_web_copy_file_to_buffer\"] = createExportWrapper(\"duckdb_web_copy_file_to_buffer\");\n\nvar _duckdb_web_copy_file_to_path = Module[\"_duckdb_web_copy_file_to_path\"] = createExportWrapper(\"duckdb_web_copy_file_to_path\");\n\nvar _duckdb_web_get_version = Module[\"_duckdb_web_get_version\"] = createExportWrapper(\"duckdb_web_get_version\");\n\nvar _duckdb_web_get_feature_flags = Module[\"_duckdb_web_get_feature_flags\"] = createExportWrapper(\"duckdb_web_get_feature_flags\");\n\nvar _duckdb_web_tokenize = Module[\"_duckdb_web_tokenize\"] = createExportWrapper(\"duckdb_web_tokenize\");\n\nvar _duckdb_web_udf_scalar_create = Module[\"_duckdb_web_udf_scalar_create\"] = createExportWrapper(\"duckdb_web_udf_scalar_create\");\n\nvar _duckdb_web_prepared_create = Module[\"_duckdb_web_prepared_create\"] = createExportWrapper(\"duckdb_web_prepared_create\");\n\nvar _duckdb_web_prepared_close = Module[\"_duckdb_web_prepared_close\"] = createExportWrapper(\"duckdb_web_prepared_close\");\n\nvar _duckdb_web_prepared_run = Module[\"_duckdb_web_prepared_run\"] = createExportWrapper(\"duckdb_web_prepared_run\");\n\nvar _duckdb_web_prepared_send = Module[\"_duckdb_web_prepared_send\"] = createExportWrapper(\"duckdb_web_prepared_send\");\n\nvar _duckdb_web_query_run = Module[\"_duckdb_web_query_run\"] = createExportWrapper(\"duckdb_web_query_run\");\n\nvar _duckdb_web_pending_query_start = Module[\"_duckdb_web_pending_query_start\"] = createExportWrapper(\"duckdb_web_pending_query_start\");\n\nvar _duckdb_web_pending_query_poll = Module[\"_duckdb_web_pending_query_poll\"] = createExportWrapper(\"duckdb_web_pending_query_poll\");\n\nvar _duckdb_web_pending_query_cancel = Module[\"_duckdb_web_pending_query_cancel\"] = createExportWrapper(\"duckdb_web_pending_query_cancel\");\n\nvar _duckdb_web_query_fetch_results = Module[\"_duckdb_web_query_fetch_results\"] = createExportWrapper(\"duckdb_web_query_fetch_results\");\n\nvar _duckdb_web_get_tablenames = Module[\"_duckdb_web_get_tablenames\"] = createExportWrapper(\"duckdb_web_get_tablenames\");\n\nvar _duckdb_web_insert_arrow_from_ipc_stream = Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"] = createExportWrapper(\"duckdb_web_insert_arrow_from_ipc_stream\");\n\nvar _duckdb_web_insert_csv_from_path = Module[\"_duckdb_web_insert_csv_from_path\"] = createExportWrapper(\"duckdb_web_insert_csv_from_path\");\n\nvar _duckdb_web_insert_json_from_path = Module[\"_duckdb_web_insert_json_from_path\"] = createExportWrapper(\"duckdb_web_insert_json_from_path\");\n\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n\nvar _htonl = createExportWrapper(\"htonl\");\n\nvar _htons = createExportWrapper(\"htons\");\n\nvar _ntohs = createExportWrapper(\"ntohs\");\n\nvar _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\");\n\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\");\n\nvar _emscripten_stack_init = function() {\n return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_free = function() {\n return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_base = function() {\n return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_end = function() {\n return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\nvar stackSave = createExportWrapper(\"stackSave\");\n\nvar stackRestore = createExportWrapper(\"stackRestore\");\n\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n\nvar _emscripten_stack_get_current = function() {\n return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\nvar ___cxa_is_pointer_type = createExportWrapper(\"__cxa_is_pointer_type\");\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = createExportWrapper(\"dynCall_iiiiij\");\n\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = createExportWrapper(\"dynCall_iiiiijj\");\n\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = createExportWrapper(\"dynCall_iiiiiijj\");\n\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = createExportWrapper(\"dynCall_viijii\");\n\nvar dynCall_viijji = Module[\"dynCall_viijji\"] = createExportWrapper(\"dynCall_viijji\");\n\nvar dynCall_iiiji = Module[\"dynCall_iiiji\"] = createExportWrapper(\"dynCall_iiiji\");\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = createExportWrapper(\"dynCall_ji\");\n\nvar dynCall_viij = Module[\"dynCall_viij\"] = createExportWrapper(\"dynCall_viij\");\n\nvar dynCall_vij = Module[\"dynCall_vij\"] = createExportWrapper(\"dynCall_vij\");\n\nvar dynCall_vjjijij = Module[\"dynCall_vjjijij\"] = createExportWrapper(\"dynCall_vjjijij\");\n\nvar dynCall_vijjji = Module[\"dynCall_vijjji\"] = createExportWrapper(\"dynCall_vijjji\");\n\nvar dynCall_vjjii = Module[\"dynCall_vjjii\"] = createExportWrapper(\"dynCall_vjjii\");\n\nvar dynCall_viiiiiji = Module[\"dynCall_viiiiiji\"] = createExportWrapper(\"dynCall_viiiiiji\");\n\nvar dynCall_jiiiji = Module[\"dynCall_jiiiji\"] = createExportWrapper(\"dynCall_jiiiji\");\n\nvar dynCall_jiiij = Module[\"dynCall_jiiij\"] = createExportWrapper(\"dynCall_jiiij\");\n\nvar dynCall_jijjij = Module[\"dynCall_jijjij\"] = createExportWrapper(\"dynCall_jijjij\");\n\nvar dynCall_iiij = Module[\"dynCall_iiij\"] = createExportWrapper(\"dynCall_iiij\");\n\nvar dynCall_vijjj = Module[\"dynCall_vijjj\"] = createExportWrapper(\"dynCall_vijjj\");\n\nvar dynCall_vijj = Module[\"dynCall_vijj\"] = createExportWrapper(\"dynCall_vijj\");\n\nvar dynCall_viijj = Module[\"dynCall_viijj\"] = createExportWrapper(\"dynCall_viijj\");\n\nvar dynCall_jiijii = Module[\"dynCall_jiijii\"] = createExportWrapper(\"dynCall_jiijii\");\n\nvar dynCall_jijiii = Module[\"dynCall_jijiii\"] = createExportWrapper(\"dynCall_jijiii\");\n\nvar dynCall_viijiiiii = Module[\"dynCall_viijiiiii\"] = createExportWrapper(\"dynCall_viijiiiii\");\n\nvar dynCall_viijiiij = Module[\"dynCall_viijiiij\"] = createExportWrapper(\"dynCall_viijiiij\");\n\nvar dynCall_vijiiiji = Module[\"dynCall_vijiiiji\"] = createExportWrapper(\"dynCall_vijiiiji\");\n\nvar dynCall_viiiij = Module[\"dynCall_viiiij\"] = createExportWrapper(\"dynCall_viiiij\");\n\nvar dynCall_jiiji = Module[\"dynCall_jiiji\"] = createExportWrapper(\"dynCall_jiiji\");\n\nvar dynCall_viiijij = Module[\"dynCall_viiijij\"] = createExportWrapper(\"dynCall_viiijij\");\n\nvar dynCall_viijiij = Module[\"dynCall_viijiij\"] = createExportWrapper(\"dynCall_viijiij\");\n\nvar dynCall_viiiiijj = Module[\"dynCall_viiiiijj\"] = createExportWrapper(\"dynCall_viiiiijj\");\n\nvar dynCall_viiijji = Module[\"dynCall_viiijji\"] = createExportWrapper(\"dynCall_viiijji\");\n\nvar dynCall_vijii = Module[\"dynCall_vijii\"] = createExportWrapper(\"dynCall_vijii\");\n\nvar dynCall_iiiiiji = Module[\"dynCall_iiiiiji\"] = createExportWrapper(\"dynCall_iiiiiji\");\n\nvar dynCall_iij = Module[\"dynCall_iij\"] = createExportWrapper(\"dynCall_iij\");\n\nvar dynCall_iiijj = Module[\"dynCall_iiijj\"] = createExportWrapper(\"dynCall_iiijj\");\n\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = createExportWrapper(\"dynCall_iijii\");\n\nvar dynCall_viji = Module[\"dynCall_viji\"] = createExportWrapper(\"dynCall_viji\");\n\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = createExportWrapper(\"dynCall_iiji\");\n\nvar dynCall_viijjj = Module[\"dynCall_viijjj\"] = createExportWrapper(\"dynCall_viijjj\");\n\nvar dynCall_viiijj = Module[\"dynCall_viiijj\"] = createExportWrapper(\"dynCall_viiijj\");\n\nvar dynCall_jijj = Module[\"dynCall_jijj\"] = createExportWrapper(\"dynCall_jijj\");\n\nvar dynCall_jiiiii = Module[\"dynCall_jiiiii\"] = createExportWrapper(\"dynCall_jiiiii\");\n\nvar dynCall_jiiii = Module[\"dynCall_jiiii\"] = createExportWrapper(\"dynCall_jiiii\");\n\nvar dynCall_jii = Module[\"dynCall_jii\"] = createExportWrapper(\"dynCall_jii\");\n\nvar dynCall_viijij = Module[\"dynCall_viijij\"] = createExportWrapper(\"dynCall_viijij\");\n\nvar dynCall_viiij = Module[\"dynCall_viiij\"] = createExportWrapper(\"dynCall_viiij\");\n\nvar dynCall_j = Module[\"dynCall_j\"] = createExportWrapper(\"dynCall_j\");\n\nvar dynCall_viiijiiiijj = Module[\"dynCall_viiijiiiijj\"] = createExportWrapper(\"dynCall_viiijiiiijj\");\n\nvar dynCall_jiiiij = Module[\"dynCall_jiiiij\"] = createExportWrapper(\"dynCall_jiiiij\");\n\nvar dynCall_jj = Module[\"dynCall_jj\"] = createExportWrapper(\"dynCall_jj\");\n\nvar dynCall_ij = Module[\"dynCall_ij\"] = createExportWrapper(\"dynCall_ij\");\n\nvar dynCall_ijjj = Module[\"dynCall_ijjj\"] = createExportWrapper(\"dynCall_ijjj\");\n\nvar dynCall_jjjd = Module[\"dynCall_jjjd\"] = createExportWrapper(\"dynCall_jjjd\");\n\nvar dynCall_jjjjjjd = Module[\"dynCall_jjjjjjd\"] = createExportWrapper(\"dynCall_jjjjjjd\");\n\nvar dynCall_jij = Module[\"dynCall_jij\"] = createExportWrapper(\"dynCall_jij\");\n\nvar dynCall_viiijiiijii = Module[\"dynCall_viiijiiijii\"] = createExportWrapper(\"dynCall_viiijiiijii\");\n\nvar dynCall_viijijiiii = Module[\"dynCall_viijijiiii\"] = createExportWrapper(\"dynCall_viijijiiii\");\n\nvar dynCall_viiji = Module[\"dynCall_viiji\"] = createExportWrapper(\"dynCall_viiji\");\n\nvar dynCall_jiiiijj = Module[\"dynCall_jiiiijj\"] = createExportWrapper(\"dynCall_jiiiijj\");\n\nvar dynCall_viiiji = Module[\"dynCall_viiiji\"] = createExportWrapper(\"dynCall_viiiji\");\n\nvar dynCall_viiiiji = Module[\"dynCall_viiiiji\"] = createExportWrapper(\"dynCall_viiiiji\");\n\nvar dynCall_jijiiii = Module[\"dynCall_jijiiii\"] = createExportWrapper(\"dynCall_jijiiii\");\n\nvar dynCall_viiijiji = Module[\"dynCall_viiijiji\"] = createExportWrapper(\"dynCall_viiijiji\");\n\nvar dynCall_viijiji = Module[\"dynCall_viijiji\"] = createExportWrapper(\"dynCall_viijiji\");\n\nvar dynCall_jiii = Module[\"dynCall_jiii\"] = createExportWrapper(\"dynCall_jiii\");\n\nModule[\"stackAlloc\"] = stackAlloc;\n\nModule[\"stackSave\"] = stackSave;\n\nModule[\"stackRestore\"] = stackRestore;\n\nModule[\"ccall\"] = ccall;\n\nvar missingLibrarySymbols = [ \"getHostByName\", \"traverseStack\", \"getCallstack\", \"emscriptenLog\", \"convertPCtoSourceLocation\", \"readEmAsmArgs\", \"jstoi_s\", \"listenOnce\", \"autoResumeAudioContext\", \"dynCallLegacy\", \"getDynCaller\", \"dynCall\", \"runtimeKeepalivePush\", \"runtimeKeepalivePop\", \"callUserCallback\", \"maybeExit\", \"safeSetTimeout\", \"asmjsMangle\", \"asyncLoad\", \"alignMemory\", \"mmapAlloc\", \"HandleAllocator\", \"getNativeTypeSize\", \"STACK_SIZE\", \"STACK_ALIGN\", \"POINTER_SIZE\", \"ASSERTIONS\", \"writeI53ToI64\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"readI53FromU64\", \"convertI32PairToI53\", \"convertU32PairToI53\", \"cwrap\", \"uleb128Encode\", \"sigToWasmTypes\", \"generateFuncType\", \"convertJsFunctionToWasm\", \"getEmptyTableSlot\", \"updateTableMap\", \"getFunctionAddress\", \"addFunction\", \"removeFunction\", \"reallyNegative\", \"unSign\", \"strLen\", \"reSign\", \"formatString\", \"intArrayToString\", \"AsciiToString\", \"UTF16ToString\", \"stringToUTF16\", \"lengthBytesUTF16\", \"UTF32ToString\", \"stringToUTF32\", \"lengthBytesUTF32\", \"registerKeyEventCallback\", \"maybeCStringToJsString\", \"findEventTarget\", \"findCanvasEventTarget\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSize\", \"getCanvasElementSize\", \"demangle\", \"demangleAll\", \"jsStackTrace\", \"stackTrace\", \"checkWasiClock\", \"wasiRightsToMuslOFlags\", \"wasiOFlagsToMuslOFlags\", \"createDyncallWrapper\", \"setImmediateWrapped\", \"clearImmediateWrapped\", \"polyfillSetImmediate\", \"getPromise\", \"makePromise\", \"idsToPromises\", \"makePromiseCallback\", \"setMainLoop\", \"heapObjectForWebGLType\", \"heapAccessShiftForWebGLHeap\", \"webgl_enable_ANGLE_instanced_arrays\", \"webgl_enable_OES_vertex_array_object\", \"webgl_enable_WEBGL_draw_buffers\", \"webgl_enable_WEBGL_multi_draw\", \"emscriptenWebGLGet\", \"computeUnpackAlignedImageSize\", \"colorChannelsInGlTextureFormat\", \"emscriptenWebGLGetTexPixelData\", \"__glGenObject\", \"emscriptenWebGLGetUniform\", \"webglGetUniformLocation\", \"webglPrepareUniformLocationsBeforeFirstUse\", \"webglGetLeftBracePos\", \"emscriptenWebGLGetVertexAttrib\", \"__glGetActiveAttribOrUniform\", \"writeGLArray\", \"registerWebGlEventCallback\", \"runAndAbortIfError\", \"SDL_unicode\", \"SDL_ttfContext\", \"SDL_audio\", \"GLFW_Window\", \"ALLOC_NORMAL\", \"ALLOC_STACK\", \"allocate\", \"writeStringToMemory\", \"writeAsciiToMemory\" ];\n\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\n\nvar unexportedSymbols = [ \"run\", \"addOnPreRun\", \"addOnInit\", \"addOnPreMain\", \"addOnExit\", \"addOnPostRun\", \"addRunDependency\", \"removeRunDependency\", \"FS_createFolder\", \"FS_createPath\", \"FS_createDataFile\", \"FS_createLazyFile\", \"FS_createLink\", \"FS_createDevice\", \"FS_unlink\", \"out\", \"err\", \"callMain\", \"abort\", \"keepRuntimeAlive\", \"wasmMemory\", \"getTempRet0\", \"setTempRet0\", \"writeStackCookie\", \"checkStackCookie\", \"ptrToString\", \"zeroMemory\", \"exitJS\", \"getHeapMax\", \"emscripten_realloc_buffer\", \"ENV\", \"MONTH_DAYS_REGULAR\", \"MONTH_DAYS_LEAP\", \"MONTH_DAYS_REGULAR_CUMULATIVE\", \"MONTH_DAYS_LEAP_CUMULATIVE\", \"isLeapYear\", \"ydayFromDate\", \"arraySum\", \"addDays\", \"ERRNO_CODES\", \"ERRNO_MESSAGES\", \"setErrNo\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"DNS\", \"Protocols\", \"Sockets\", \"initRandomFill\", \"randomFill\", \"timers\", \"warnOnce\", \"UNWIND_CACHE\", \"readEmAsmArgsArray\", \"jstoi_q\", \"getExecutableName\", \"handleException\", \"readI53FromI64\", \"convertI32PairToI53Checked\", \"getCFunc\", \"freeTableIndexes\", \"functionsInTableMap\", \"setValue\", \"getValue\", \"PATH\", \"PATH_FS\", \"UTF8Decoder\", \"UTF8ArrayToString\", \"UTF8ToString\", \"stringToUTF8Array\", \"stringToUTF8\", \"lengthBytesUTF8\", \"intArrayFromString\", \"stringToAscii\", \"UTF16Decoder\", \"stringToNewUTF8\", \"stringToUTF8OnStack\", \"writeArrayToMemory\", \"JSEvents\", \"specialHTMLTargets\", \"currentFullscreenStrategy\", \"restoreOldWindowedStyle\", \"ExitStatus\", \"getEnvStrings\", \"flush_NO_FILESYSTEM\", \"dlopenMissingError\", \"promiseMap\", \"uncaughtExceptionCount\", \"exceptionLast\", \"exceptionCaught\", \"ExceptionInfo\", \"Browser\", \"wget\", \"SYSCALLS\", \"getSocketFromFD\", \"getSocketAddress\", \"tempFixedLengthArray\", \"miniTempWebGLFloatBuffers\", \"miniTempWebGLIntBuffers\", \"GL\", \"emscripten_webgl_power_preferences\", \"AL\", \"GLUT\", \"EGL\", \"GLEW\", \"IDBStore\", \"SDL\", \"SDL_gfx\", \"GLFW\", \"allocateUTF8\", \"allocateUTF8OnStack\", \"SOCKFS\", \"FS\" ];\n\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction callMain() {\n assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\n assert(__ATPRERUN__.length == 0, \"cannot call main when preRun functions remain to be called\");\n var entryFunction = _main;\n var argc = 0;\n var argv = 0;\n try {\n  var ret = entryFunction(argc, argv);\n  exitJS(ret, true);\n  return ret;\n } catch (e) {\n  return handleException(e);\n }\n}\n\nfunction stackCheckInit() {\n _emscripten_stack_init();\n writeStackCookie();\n}\n\nfunction run() {\n if (runDependencies > 0) {\n  return;\n }\n stackCheckInit();\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  preMain();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  if (shouldRunNow) callMain();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n var oldOut = out;\n var oldErr = err;\n var has = false;\n out = err = x => {\n  has = true;\n };\n try {\n  flush_NO_FILESYSTEM();\n } catch (e) {}\n out = oldOut;\n err = oldErr;\n if (has) {\n  warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.\");\n  warnOnce(\"(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)\");\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nvar shouldRunNow = true;\n\nif (Module[\"noInitialRun\"]) shouldRunNow = false;\n\nrun();\n\n\n  return DuckDB.ready\n}\n\n);\n})();\nexport default DuckDB;", "import { DuckDBModule } from './duckdb_module';\r\nimport { DuckDBBindingsBase } from './bindings_base';\r\nimport { DuckDBRuntime } from './runtime';\r\nimport { LogLevel, LogTopic, LogOrigin, LogEvent } from '../log';\r\nimport { Logger } from '../log';\r\nimport { InstantiationProgress } from '.';\r\n\r\n/** DuckDB bindings for the browser */\r\nexport abstract class DuckDBBrowserBindings extends DuckDBBindingsBase {\r\n    /** The path of the wasm module */\r\n    protected readonly mainModuleURL: string;\r\n    /** The path of the pthread worker script */\r\n    protected readonly pthreadWorkerURL: string | null;\r\n\r\n    /** Constructor */\r\n    public constructor(logger: Logger, runtime: DuckDBRuntime, mainModuleURL: string, pthreadWorkerURL: string | null) {\r\n        super(logger, runtime);\r\n        this.mainModuleURL = mainModuleURL;\r\n        this.pthreadWorkerURL = pthreadWorkerURL;\r\n    }\r\n\r\n    /** Locate a file */\r\n    protected locateFile(path: string, prefix: string): string {\r\n        if (path.endsWith('.wasm')) {\r\n            return this.mainModuleURL;\r\n        }\r\n        if (path.endsWith('.worker.js')) {\r\n            if (!this.pthreadWorkerURL) {\r\n                throw new Error('Missing DuckDB worker URL!');\r\n            }\r\n            return this.pthreadWorkerURL!;\r\n        }\r\n        throw new Error(`WASM instantiation requested unexpected file: prefix=${prefix} path=${path}`);\r\n    }\r\n\r\n    /** Instantiate the wasm module */\r\n    protected instantiateWasm(\r\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n        imports: any,\r\n        success: (instance: WebAssembly.Instance, module: WebAssembly.Module) => void,\r\n    ): Emscripten.WebAssemblyExports {\r\n        // We rely on the following here:\r\n        //\r\n        // ...when a Request object is created using the Request.Request constructor,\r\n        // the value of the mode property for that Request is set to cors.\r\n        // [ref: MDN]\r\n        //\r\n        // Cloudflare throws when mode: 'cors' is set\r\n        //\r\n        globalThis.DUCKDB_RUNTIME = this._runtime;\r\n        const handlers = this.onInstantiationProgress;\r\n\r\n        // Does the browser support streaming instantiation?\r\n        if (WebAssembly.instantiateStreaming) {\r\n            // Does the browser support transform streams?\r\n            if (typeof TransformStream === 'function') {\r\n                const fetchWithProgress = async () => {\r\n                    // Try to determine file size\r\n                    const request = new Request(this.mainModuleURL);\r\n                    const response = await fetch(request);\r\n                    const contentLengthHdr = response.headers.get('content-length');\r\n                    const contentLength = contentLengthHdr ? parseInt(contentLengthHdr, 10) || 0 : 0;\r\n\r\n                    // Transform the stream\r\n                    const start = new Date();\r\n                    const progress: InstantiationProgress = {\r\n                        startedAt: start,\r\n                        updatedAt: start,\r\n                        bytesTotal: contentLength || 0,\r\n                        bytesLoaded: 0,\r\n                    };\r\n                    const tracker = {\r\n                        transform(chunk: any, ctrl: TransformStreamDefaultController) {\r\n                            progress.bytesLoaded += chunk.byteLength;\r\n                            const now = new Date();\r\n                            if (now.getTime() - progress.updatedAt.getTime() < 20) {\r\n                                progress.updatedAt = now;\r\n                                ctrl.enqueue(chunk);\r\n                                return;\r\n                            }\r\n                            for (const p of handlers) {\r\n                                p(progress);\r\n                            }\r\n                            ctrl.enqueue(chunk);\r\n                        },\r\n                    };\r\n                    const ts = new TransformStream(tracker);\r\n                    return new Response(response.body?.pipeThrough(ts), response);\r\n                };\r\n                // Instantiate streaming\r\n                const response = fetchWithProgress();\r\n                WebAssembly.instantiateStreaming(response, imports).then(output => {\r\n                    success(output.instance, output.module);\r\n                });\r\n            } else {\r\n                console.warn('instantiating without progress handler since transform streams are unavailable');\r\n                const request = new Request(this.mainModuleURL);\r\n                WebAssembly.instantiateStreaming(fetch(request), imports).then(output => {\r\n                    success(output.instance, output.module);\r\n                });\r\n            }\r\n        } else if (typeof XMLHttpRequest == 'function') {\r\n            // Otherwise we fall back to XHRs\r\n            const xhr = new XMLHttpRequest();\r\n            const url = this.mainModuleURL;\r\n            const start = new Date();\r\n            const progress: InstantiationProgress = {\r\n                startedAt: start,\r\n                updatedAt: start,\r\n                bytesTotal: 0,\r\n                bytesLoaded: 0,\r\n            };\r\n            xhr.open('GET', url);\r\n            xhr.responseType = 'arraybuffer';\r\n            xhr.onerror = error => {\r\n                this.logger.log({\r\n                    timestamp: new Date(),\r\n                    level: LogLevel.ERROR,\r\n                    origin: LogOrigin.BINDINGS,\r\n                    topic: LogTopic.INSTANTIATE,\r\n                    event: LogEvent.ERROR,\r\n                    value: 'Failed to load WASM: ' + error,\r\n                });\r\n                throw new Error(error.toString());\r\n            };\r\n            xhr.onprogress = e => {\r\n                progress.bytesTotal = e.total;\r\n                progress.bytesLoaded = e.loaded;\r\n                const now = new Date();\r\n                if (now.getTime() - progress.updatedAt.getTime() < 20) {\r\n                    progress.updatedAt = now;\r\n                    return;\r\n                }\r\n                for (const p of handlers) {\r\n                    p(progress);\r\n                }\r\n            };\r\n            xhr.onload = () => {\r\n                WebAssembly.instantiate(xhr.response, imports)\r\n                    .then(output => {\r\n                        success(output.instance, output.module);\r\n                    })\r\n                    .catch(error => {\r\n                        this.logger.log({\r\n                            timestamp: new Date(),\r\n                            level: LogLevel.ERROR,\r\n                            origin: LogOrigin.BINDINGS,\r\n                            topic: LogTopic.INSTANTIATE,\r\n                            event: LogEvent.ERROR,\r\n                            value: 'Failed to instantiate WASM: ' + error,\r\n                        });\r\n                        throw new Error(error);\r\n                    });\r\n            };\r\n            xhr.send();\r\n        } else {\r\n            console.warn('instantiating with manual fetch since streaming instantiation and xhrs are unavailable');\r\n            const run = async () => {\r\n                const request = new Request(this.mainModuleURL);\r\n                const response = await fetch(request);\r\n                const buffer = await response.arrayBuffer();\r\n                WebAssembly.instantiate(buffer, imports).then(output => {\r\n                    success(output.instance, output.module);\r\n                });\r\n            };\r\n            run();\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /// Instantiation must be done by the browser variants\r\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\r\n}\r\n", "import DuckDBWasm from './duckdb-mvp.js';\r\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\r\nimport { DuckDBModule } from './duckdb_module';\r\nimport { DuckDBRuntime } from './runtime';\r\nimport { Logger } from '../log';\r\n\r\n/** DuckDB bindings for the browser */\r\nexport class DuckDB extends DuckDBBrowserBindings {\r\n    /** Constructor */\r\n    public constructor(\r\n        logger: Logger,\r\n        runtime: DuckDBRuntime,\r\n        mainModuleURL: string,\r\n        pthreadWorkerURL: string | null = null,\r\n    ) {\r\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\r\n    }\r\n\r\n    /** Instantiate the bindings */\r\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\r\n        return DuckDBWasm({\r\n            ...moduleOverrides,\r\n            instantiateWasm: this.instantiateWasm.bind(this),\r\n            locateFile: this.locateFile.bind(this),\r\n        });\r\n    }\r\n}\r\n", "\nvar DuckDB = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nasync function(DuckDB = {})  {\n\nvar Module = typeof DuckDB != \"undefined\" ? DuckDB : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise((resolve, reject) => {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\n[ \"_main\", \"_malloc\", \"_free\", \"_duckdb_web_clear_response\", \"_duckdb_web_collect_file_stats\", \"_duckdb_web_connect\", \"_duckdb_web_copy_file_to_buffer\", \"_duckdb_web_copy_file_to_path\", \"_duckdb_web_disconnect\", \"_duckdb_web_export_file_stats\", \"_duckdb_web_fail_with\", \"_duckdb_web_flush_file\", \"_duckdb_web_flush_files\", \"_duckdb_web_fs_drop_file\", \"_duckdb_web_fs_drop_files\", \"_duckdb_web_fs_get_file_info_by_id\", \"_duckdb_web_fs_get_file_info_by_name\", \"_duckdb_web_fs_glob_add_path\", \"_duckdb_web_fs_glob_file_infos\", \"_duckdb_web_fs_register_file_buffer\", \"_duckdb_web_fs_register_file_url\", \"_duckdb_web_get_feature_flags\", \"_duckdb_web_get_global_file_info\", \"_duckdb_web_get_tablenames\", \"_duckdb_web_get_version\", \"_duckdb_web_insert_arrow_from_ipc_stream\", \"_duckdb_web_insert_csv_from_path\", \"_duckdb_web_insert_json_from_path\", \"_duckdb_web_open\", \"_duckdb_web_pending_query_cancel\", \"_duckdb_web_pending_query_poll\", \"_duckdb_web_pending_query_start\", \"_duckdb_web_prepared_close\", \"_duckdb_web_prepared_create\", \"_duckdb_web_prepared_run\", \"_duckdb_web_prepared_send\", \"_duckdb_web_query_fetch_results\", \"_duckdb_web_query_run\", \"_duckdb_web_reset\", \"_duckdb_web_tokenize\", \"_duckdb_web_udf_scalar_create\", \"getExceptionMessage\", \"___get_exception_message\", \"___cpp_exception\", \"___cxa_increment_exception_refcount\", \"___cxa_decrement_exception_refcount\", \"___thrown_object_from_unwind_exception\", \"_fflush\", \"onRuntimeInitialized\" ].forEach(prop => {\n if (!Object.getOwnPropertyDescriptor(Module[\"ready\"], prop)) {\n  Object.defineProperty(Module[\"ready\"], prop, {\n   get: () => abort(\"You are getting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\"),\n   set: () => abort(\"You are setting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")\n  });\n }\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\n\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module[\"ENVIRONMENT\"]) {\n throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\");\n}\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n if (typeof process == \"undefined\" || !process.release || process.release.name !== \"node\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n var nodeVersion = process.versions.node;\n var numericVersion = nodeVersion.split(\".\").slice(0, 3);\n numericVersion = numericVersion[0] * 1e4 + numericVersion[1] * 100 + numericVersion[2].split(\"-\")[0] * 1;\n var minVersion = 101900;\n if (numericVersion < 101900) {\n  throw new Error(\"This emscripten-generated code requires node v10.19.19.0 (detected v\" + nodeVersion + \")\");\n }\n const {createRequire: createRequire} = await import(\"module\");\n var require = createRequire(import.meta.url);\n var fs = require(\"fs\");\n var nodePath = require(\"path\");\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = require(\"url\").fileURLToPath(new URL(\"./\", import.meta.url));\n }\n read_ = (filename, binary) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n };\n readBinary = filename => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n };\n readAsync = (filename, onload, onerror, binary = true) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : \"utf8\", (err, data) => {\n   if (err) onerror(err); else onload(binary ? data.buffer : data);\n  });\n };\n if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n  thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process.argv.slice(2);\n quit_ = (status, toThrow) => {\n  process.exitCode = status;\n  throw toThrow;\n };\n Module[\"inspect\"] = () => \"[Emscripten Module object]\";\n} else if (ENVIRONMENT_IS_SHELL) {\n if (typeof process == \"object\" && typeof require === \"function\" || typeof window == \"object\" || typeof importScripts == \"function\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n if (typeof read != \"undefined\") {\n  read_ = f => {\n   return read(f);\n  };\n }\n readBinary = f => {\n  let data;\n  if (typeof readbuffer == \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data == \"object\");\n  return data;\n };\n readAsync = (f, onload, onerror) => {\n  setTimeout(() => onload(readBinary(f)), 0);\n };\n if (typeof clearTimeout == \"undefined\") {\n  globalThis.clearTimeout = id => {};\n }\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit == \"function\") {\n  quit_ = (status, toThrow) => {\n   setTimeout(() => {\n    if (!(toThrow instanceof ExitStatus)) {\n     let toLog = toThrow;\n     if (toThrow && typeof toThrow == \"object\" && toThrow.stack) {\n      toLog = [ toThrow, toThrow.stack ];\n     }\n     err(`exiting due to exception: ${toLog}`);\n    }\n    quit(status);\n   });\n   throw toThrow;\n  };\n }\n if (typeof print != \"undefined\") {\n  if (typeof console == \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr != \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n if (!(typeof window == \"object\" || typeof importScripts == \"function\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {\n throw new Error(\"environment detection error\");\n}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.error.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\ncheckIncomingModuleAPI();\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nlegacyModuleProp(\"arguments\", \"arguments_\");\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nlegacyModuleProp(\"thisProgram\", \"thisProgram\");\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nlegacyModuleProp(\"quit\", \"quit_\");\n\nassert(typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"filePackagePrefixURL\"] == \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed (modify read_ in JS)\");\n\nassert(typeof Module[\"readAsync\"] == \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\n\nassert(typeof Module[\"readBinary\"] == \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\n\nassert(typeof Module[\"setWindowTitle\"] == \"undefined\", \"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");\n\nassert(typeof Module[\"TOTAL_MEMORY\"] == \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\n\nlegacyModuleProp(\"read\", \"read_\");\n\nlegacyModuleProp(\"readAsync\", \"readAsync\");\n\nlegacyModuleProp(\"readBinary\", \"readBinary\");\n\nlegacyModuleProp(\"setWindowTitle\", \"setWindowTitle\");\n\nvar IDBFS = \"IDBFS is no longer included by default; build with -lidbfs.js\";\n\nvar PROXYFS = \"PROXYFS is no longer included by default; build with -lproxyfs.js\";\n\nvar WORKERFS = \"WORKERFS is no longer included by default; build with -lworkerfs.js\";\n\nvar NODEFS = \"NODEFS is no longer included by default; build with -lnodefs.js\";\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nlegacyModuleProp(\"wasmBinary\", \"wasmBinary\");\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nlegacyModuleProp(\"noExitRuntime\", \"noExitRuntime\");\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\n }\n}\n\nvar HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateMemoryViews() {\n var b = wasmMemory.buffer;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n}\n\nassert(!Module[\"STACK_SIZE\"], \"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\");\n\nassert(typeof Int32Array != \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, \"JS engine does not provide full typed array support\");\n\nassert(!Module[\"wasmMemory\"], \"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally\");\n\nassert(!Module[\"INITIAL_MEMORY\"], \"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically\");\n\nvar wasmTable;\n\nfunction writeStackCookie() {\n var max = _emscripten_stack_get_end();\n assert((max & 3) == 0);\n if (max == 0) {\n  max += 4;\n }\n HEAPU32[max >>> 2] = 34821223;\n HEAPU32[max + 4 >>> 2] = 2310721022;\n HEAPU32[0 >>> 2] = 1668509029;\n}\n\nfunction checkStackCookie() {\n if (ABORT) return;\n var max = _emscripten_stack_get_end();\n if (max == 0) {\n  max += 4;\n }\n var cookie1 = HEAPU32[max >>> 2];\n var cookie2 = HEAPU32[max + 4 >>> 2];\n if (cookie1 != 34821223 || cookie2 != 2310721022) {\n  abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\n }\n if (HEAPU32[0 >>> 2] != 1668509029) {\n  abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\");\n }\n}\n\n(function() {\n var h16 = new Int16Array(1);\n var h8 = new Int8Array(h16.buffer);\n h16[0] = 25459;\n if (h8[0] !== 115 || h8[1] !== 99) throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\n})();\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATMAIN__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n assert(!runtimeInitialized);\n runtimeInitialized = true;\n checkStackCookie();\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n checkStackCookie();\n callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n checkStackCookie();\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nassert(Math.imul, \"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.fround, \"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.clz32, \"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.trunc, \"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n var orig = id;\n while (1) {\n  if (!runDependencyTracking[id]) return id;\n  id = orig + Math.random();\n }\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(!runDependencyTracking[id]);\n  runDependencyTracking[id] = 1;\n  if (runDependencyWatcher === null && typeof setInterval != \"undefined\") {\n   runDependencyWatcher = setInterval(() => {\n    if (ABORT) {\n     clearInterval(runDependencyWatcher);\n     runDependencyWatcher = null;\n     return;\n    }\n    var shown = false;\n    for (var dep in runDependencyTracking) {\n     if (!shown) {\n      shown = true;\n      err(\"still waiting on run dependencies:\");\n     }\n     err(\"dependency: \" + dep);\n    }\n    if (shown) {\n     err(\"(end of list)\");\n    }\n   }, 1e4);\n  }\n } else {\n  err(\"warning: run dependency added without ID\");\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(runDependencyTracking[id]);\n  delete runDependencyTracking[id];\n } else {\n  err(\"warning: run dependency removed without ID\");\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n if (runtimeInitialized) {\n  ___trap();\n }\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nfunction isFileURI(filename) {\n return filename.startsWith(\"file://\");\n}\n\nfunction createExportWrapper(name, fixedasm) {\n return function() {\n  var displayName = name;\n  var asm = fixedasm;\n  if (!fixedasm) {\n   asm = Module[\"asm\"];\n  }\n  assert(runtimeInitialized, \"native function `\" + displayName + \"` called before runtime initialization\");\n  if (!asm[name]) {\n   assert(asm[name], \"exported native function `\" + displayName + \"` not found\");\n  }\n  return asm[name].apply(null, arguments);\n };\n}\n\nvar wasmBinaryFile;\n\nif (Module[\"locateFile\"]) {\n wasmBinaryFile = \"./duckdb-eh.wasm\";\n if (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n }\n} else {\n wasmBinaryFile = new URL(\"./duckdb-eh.wasm\", import.meta.url).href;\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise(binaryFile) {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\") {\n   return fetch(binaryFile, {\n    credentials: \"same-origin\"\n   }).then(response => {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(() => getBinary(binaryFile));\n  }\n }\n return Promise.resolve().then(() => getBinary(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n return getBinaryPromise(binaryFile).then(binary => {\n  return WebAssembly.instantiate(binary, imports);\n }).then(instance => {\n  return instance;\n }).then(receiver, reason => {\n  err(\"failed to asynchronously prepare wasm: \" + reason);\n  if (isFileURI(wasmBinaryFile)) {\n   err(\"warning: Loading from a file URI (\" + wasmBinaryFile + \") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\");\n  }\n  abort(reason);\n });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n  return fetch(binaryFile, {\n   credentials: \"same-origin\"\n  }).then(response => {\n   var result = WebAssembly.instantiateStreaming(response, imports);\n   return result.then(callback, function(reason) {\n    err(\"wasm streaming compile failed: \" + reason);\n    err(\"falling back to ArrayBuffer instantiation\");\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n   });\n  });\n } else {\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n }\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": wasmImports,\n  \"wasi_snapshot_preview1\": wasmImports\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  assert(wasmMemory, \"memory not found in wasm exports\");\n  updateMemoryViews();\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  assert(wasmTable, \"table not found in wasm exports\");\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n  return exports;\n }\n addRunDependency(\"wasm-instantiate\");\n var trueModule = Module;\n function receiveInstantiationResult(result) {\n  assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\n  trueModule = null;\n  receiveInstance(result[\"instance\"]);\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   return Module[\"instantiateWasm\"](info, receiveInstance);\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   readyPromiseReject(e);\n  }\n }\n instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n return {};\n}\n\nvar tempDouble;\n\nvar tempI64;\n\nfunction legacyModuleProp(prop, newName) {\n if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n  Object.defineProperty(Module, prop, {\n   configurable: true,\n   get: function() {\n    abort(\"Module.\" + prop + \" has been replaced with plain \" + newName + \" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\n   }\n  });\n }\n}\n\nfunction ignoredModuleProp(prop) {\n if (Object.getOwnPropertyDescriptor(Module, prop)) {\n  abort(\"`Module.\" + prop + \"` was supplied but `\" + prop + \"` not included in INCOMING_MODULE_JS_API\");\n }\n}\n\nfunction isExportedByForceFilesystem(name) {\n return name === \"FS_createPath\" || name === \"FS_createDataFile\" || name === \"FS_createPreloadedFile\" || name === \"FS_unlink\" || name === \"addRunDependency\" || name === \"FS_createLazyFile\" || name === \"FS_createDevice\" || name === \"removeRunDependency\";\n}\n\nfunction missingGlobal(sym, msg) {\n if (typeof globalThis !== \"undefined\") {\n  Object.defineProperty(globalThis, sym, {\n   configurable: true,\n   get: function() {\n    warnOnce(\"`\" + sym + \"` is not longer defined by emscripten. \" + msg);\n    return undefined;\n   }\n  });\n }\n}\n\nmissingGlobal(\"buffer\", \"Please use HEAP8.buffer or wasmMemory.buffer\");\n\nfunction missingLibrarySymbol(sym) {\n if (typeof globalThis !== \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n  Object.defineProperty(globalThis, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"`\" + sym + \"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line\";\n    var librarySymbol = sym;\n    if (!librarySymbol.startsWith(\"_\")) {\n     librarySymbol = \"$\" + sym;\n    }\n    msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    warnOnce(msg);\n    return undefined;\n   }\n  });\n }\n unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n  Object.defineProperty(Module, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    abort(msg);\n   }\n  });\n }\n}\n\nfunction dbg(text) {\n console.warn.apply(console, arguments);\n}\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = `Program terminated with exit(${status})`;\n this.status = status;\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction getCppExceptionTag() {\n return Module[\"asm\"][\"__cpp_exception\"];\n}\n\nfunction getCppExceptionThrownObjectFromWebAssemblyException(ex) {\n var unwind_header = ex.getArg(getCppExceptionTag(), 0);\n return ___thrown_object_from_unwind_exception(unwind_header);\n}\n\nfunction decrementExceptionRefcount(ex) {\n var ptr = getCppExceptionThrownObjectFromWebAssemblyException(ex);\n ___cxa_decrement_exception_refcount(ptr);\n}\n\nfunction withStackSave(f) {\n var stack = stackSave();\n var ret = f();\n stackRestore(stack);\n return ret;\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n idx >>>= 0;\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   if ((u0 & 248) != 240) warnOnce(\"Invalid UTF-8 leading byte \" + ptrToString(u0) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n assert(typeof ptr == \"number\");\n ptr >>>= 0;\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction getExceptionMessageCommon(ptr) {\n return withStackSave(function() {\n  var type_addr_addr = stackAlloc(4);\n  var message_addr_addr = stackAlloc(4);\n  ___get_exception_message(ptr, type_addr_addr, message_addr_addr);\n  var type_addr = HEAPU32[type_addr_addr >>> 2];\n  var message_addr = HEAPU32[message_addr_addr >>> 2];\n  var type = UTF8ToString(type_addr);\n  _free(type_addr);\n  var message;\n  if (message_addr) {\n   message = UTF8ToString(message_addr);\n   _free(message_addr);\n  }\n  return [ type, message ];\n });\n}\n\nfunction getExceptionMessage(ex) {\n var ptr = getCppExceptionThrownObjectFromWebAssemblyException(ex);\n return getExceptionMessageCommon(ptr);\n}\n\nModule[\"getExceptionMessage\"] = getExceptionMessage;\n\nfunction getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >>> 0];\n\n case \"i8\":\n  return HEAP8[ptr >>> 0];\n\n case \"i16\":\n  return HEAP16[ptr >>> 1];\n\n case \"i32\":\n  return HEAP32[ptr >>> 2];\n\n case \"i64\":\n  abort(\"to do getValue(i64) use WASM_BIGINT\");\n\n case \"float\":\n  return HEAPF32[ptr >>> 2];\n\n case \"double\":\n  return HEAPF64[ptr >>> 3];\n\n case \"*\":\n  return HEAPU32[ptr >>> 2];\n\n default:\n  abort(`invalid type for getValue: ${type}`);\n }\n}\n\nfunction incrementExceptionRefcount(ex) {\n var ptr = getCppExceptionThrownObjectFromWebAssemblyException(ex);\n ___cxa_increment_exception_refcount(ptr);\n}\n\nfunction ptrToString(ptr) {\n assert(typeof ptr === \"number\");\n return \"0x\" + ptr.toString(16).padStart(8, \"0\");\n}\n\nfunction setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[ptr >>> 1] = value;\n  break;\n\n case \"i32\":\n  HEAP32[ptr >>> 2] = value;\n  break;\n\n case \"i64\":\n  abort(\"to do setValue(i64) use WASM_BIGINT\");\n\n case \"float\":\n  HEAPF32[ptr >>> 2] = value;\n  break;\n\n case \"double\":\n  HEAPF64[ptr >>> 3] = value;\n  break;\n\n case \"*\":\n  HEAPU32[ptr >>> 2] = value;\n  break;\n\n default:\n  abort(`invalid type for setValue: ${type}`);\n }\n}\n\nfunction warnOnce(text) {\n if (!warnOnce.shown) warnOnce.shown = {};\n if (!warnOnce.shown[text]) {\n  warnOnce.shown[text] = 1;\n  if (ENVIRONMENT_IS_NODE) text = \"warning: \" + text;\n  err(text);\n }\n}\n\nfunction _XML_GetBuffer() {\n err(\"missing function: XML_GetBuffer\");\n abort(-1);\n}\n\nfunction _XML_GetErrorCode() {\n err(\"missing function: XML_GetErrorCode\");\n abort(-1);\n}\n\nfunction _XML_Parse() {\n err(\"missing function: XML_Parse\");\n abort(-1);\n}\n\nfunction _XML_ParseBuffer() {\n err(\"missing function: XML_ParseBuffer\");\n abort(-1);\n}\n\nfunction _XML_ParserCreate() {\n err(\"missing function: XML_ParserCreate\");\n abort(-1);\n}\n\nfunction _XML_ParserFree() {\n err(\"missing function: XML_ParserFree\");\n abort(-1);\n}\n\nfunction _XML_ResumeParser() {\n err(\"missing function: XML_ResumeParser\");\n abort(-1);\n}\n\nfunction _XML_SetCharacterDataHandler() {\n err(\"missing function: XML_SetCharacterDataHandler\");\n abort(-1);\n}\n\nfunction _XML_SetElementHandler() {\n err(\"missing function: XML_SetElementHandler\");\n abort(-1);\n}\n\nfunction _XML_SetUserData() {\n err(\"missing function: XML_SetUserData\");\n abort(-1);\n}\n\nfunction _XML_StopParser() {\n err(\"missing function: XML_StopParser\");\n abort(-1);\n}\n\nfunction ___assert_fail(condition, filename, line, func) {\n abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [ filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\" ]);\n}\n\nvar dlopenMissingError = \"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\";\n\nfunction ___dlsym(handle, symbol, ra) {\n abort(dlopenMissingError);\n}\n\nvar SYSCALLS = {\n varargs: undefined,\n get: function() {\n  assert(SYSCALLS.varargs != undefined);\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nfunction ___syscall__newselect(nfds, readfds, writefds, exceptfds, timeout) {\n assert(nfds <= 64, \"nfds must be less than or equal to 64\");\n assert(!exceptfds, \"exceptfds not supported\");\n var total = 0;\n var srcReadLow = readfds ? HEAP32[readfds >>> 2] : 0, srcReadHigh = readfds ? HEAP32[readfds + 4 >>> 2] : 0;\n var srcWriteLow = writefds ? HEAP32[writefds >>> 2] : 0, srcWriteHigh = writefds ? HEAP32[writefds + 4 >>> 2] : 0;\n var srcExceptLow = exceptfds ? HEAP32[exceptfds >>> 2] : 0, srcExceptHigh = exceptfds ? HEAP32[exceptfds + 4 >>> 2] : 0;\n var dstReadLow = 0, dstReadHigh = 0;\n var dstWriteLow = 0, dstWriteHigh = 0;\n var dstExceptLow = 0, dstExceptHigh = 0;\n var allLow = (readfds ? HEAP32[readfds >>> 2] : 0) | (writefds ? HEAP32[writefds >>> 2] : 0) | (exceptfds ? HEAP32[exceptfds >>> 2] : 0);\n var allHigh = (readfds ? HEAP32[readfds + 4 >>> 2] : 0) | (writefds ? HEAP32[writefds + 4 >>> 2] : 0) | (exceptfds ? HEAP32[exceptfds + 4 >>> 2] : 0);\n var check = function(fd, low, high, val) {\n  return fd < 32 ? low & val : high & val;\n };\n for (var fd = 0; fd < nfds; fd++) {\n  var mask = 1 << fd % 32;\n  if (!check(fd, allLow, allHigh, mask)) {\n   continue;\n  }\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  var flags = SYSCALLS.DEFAULT_POLLMASK;\n  if (stream.stream_ops.poll) {\n   flags = stream.stream_ops.poll(stream);\n  }\n  if (flags & 1 && check(fd, srcReadLow, srcReadHigh, mask)) {\n   fd < 32 ? dstReadLow = dstReadLow | mask : dstReadHigh = dstReadHigh | mask;\n   total++;\n  }\n  if (flags & 4 && check(fd, srcWriteLow, srcWriteHigh, mask)) {\n   fd < 32 ? dstWriteLow = dstWriteLow | mask : dstWriteHigh = dstWriteHigh | mask;\n   total++;\n  }\n  if (flags & 2 && check(fd, srcExceptLow, srcExceptHigh, mask)) {\n   fd < 32 ? dstExceptLow = dstExceptLow | mask : dstExceptHigh = dstExceptHigh | mask;\n   total++;\n  }\n }\n if (readfds) {\n  HEAP32[readfds >>> 2] = dstReadLow;\n  HEAP32[readfds + 4 >>> 2] = dstReadHigh;\n }\n if (writefds) {\n  HEAP32[writefds >>> 2] = dstWriteLow;\n  HEAP32[writefds + 4 >>> 2] = dstWriteHigh;\n }\n if (exceptfds) {\n  HEAP32[exceptfds >>> 2] = dstExceptLow;\n  HEAP32[exceptfds + 4 >>> 2] = dstExceptHigh;\n }\n return total;\n}\n\nfunction SOCKFS() {\n err(\"missing function: $SOCKFS\");\n abort(-1);\n}\n\nfunction FS() {\n err(\"missing function: $FS\");\n abort(-1);\n}\n\nfunction getSocketFromFD(fd) {\n var socket = SOCKFS.getSocket(fd);\n if (!socket) throw new FS.ErrnoError(8);\n return socket;\n}\n\nfunction setErrNo(value) {\n HEAP32[___errno_location() >>> 2] = value;\n return value;\n}\n\nvar Sockets = {\n BUFFER_SIZE: 10240,\n MAX_BUFFER_SIZE: 10485760,\n nextFd: 1,\n fds: {},\n nextport: 1,\n maxport: 65535,\n peer: null,\n connections: {},\n portmap: {},\n localAddr: 4261412874,\n addrPool: [ 33554442, 50331658, 67108874, 83886090, 100663306, 117440522, 134217738, 150994954, 167772170, 184549386, 201326602, 218103818, 234881034 ]\n};\n\nfunction inetNtop4(addr) {\n return (addr & 255) + \".\" + (addr >> 8 & 255) + \".\" + (addr >> 16 & 255) + \".\" + (addr >> 24 & 255);\n}\n\nfunction inetNtop6(ints) {\n var str = \"\";\n var word = 0;\n var longest = 0;\n var lastzero = 0;\n var zstart = 0;\n var len = 0;\n var i = 0;\n var parts = [ ints[0] & 65535, ints[0] >> 16, ints[1] & 65535, ints[1] >> 16, ints[2] & 65535, ints[2] >> 16, ints[3] & 65535, ints[3] >> 16 ];\n var hasipv4 = true;\n var v4part = \"\";\n for (i = 0; i < 5; i++) {\n  if (parts[i] !== 0) {\n   hasipv4 = false;\n   break;\n  }\n }\n if (hasipv4) {\n  v4part = inetNtop4(parts[6] | parts[7] << 16);\n  if (parts[5] === -1) {\n   str = \"::ffff:\";\n   str += v4part;\n   return str;\n  }\n  if (parts[5] === 0) {\n   str = \"::\";\n   if (v4part === \"0.0.0.0\") v4part = \"\";\n   if (v4part === \"0.0.0.1\") v4part = \"1\";\n   str += v4part;\n   return str;\n  }\n }\n for (word = 0; word < 8; word++) {\n  if (parts[word] === 0) {\n   if (word - lastzero > 1) {\n    len = 0;\n   }\n   lastzero = word;\n   len++;\n  }\n  if (len > longest) {\n   longest = len;\n   zstart = word - longest + 1;\n  }\n }\n for (word = 0; word < 8; word++) {\n  if (longest > 1) {\n   if (parts[word] === 0 && word >= zstart && word < zstart + longest) {\n    if (word === zstart) {\n     str += \":\";\n     if (zstart === 0) str += \":\";\n    }\n    continue;\n   }\n  }\n  str += Number(_ntohs(parts[word] & 65535)).toString(16);\n  str += word < 7 ? \":\" : \"\";\n }\n return str;\n}\n\nfunction readSockaddr(sa, salen) {\n var family = HEAP16[sa >>> 1];\n var port = _ntohs(HEAPU16[sa + 2 >>> 1]);\n var addr;\n switch (family) {\n case 2:\n  if (salen !== 16) {\n   return {\n    errno: 28\n   };\n  }\n  addr = HEAP32[sa + 4 >>> 2];\n  addr = inetNtop4(addr);\n  break;\n\n case 10:\n  if (salen !== 28) {\n   return {\n    errno: 28\n   };\n  }\n  addr = [ HEAP32[sa + 8 >>> 2], HEAP32[sa + 12 >>> 2], HEAP32[sa + 16 >>> 2], HEAP32[sa + 20 >>> 2] ];\n  addr = inetNtop6(addr);\n  break;\n\n default:\n  return {\n   errno: 5\n  };\n }\n return {\n  family: family,\n  addr: addr,\n  port: port\n };\n}\n\nfunction inetPton4(str) {\n var b = str.split(\".\");\n for (var i = 0; i < 4; i++) {\n  var tmp = Number(b[i]);\n  if (isNaN(tmp)) return null;\n  b[i] = tmp;\n }\n return (b[0] | b[1] << 8 | b[2] << 16 | b[3] << 24) >>> 0;\n}\n\nfunction jstoi_q(str) {\n return parseInt(str);\n}\n\nfunction inetPton6(str) {\n var words;\n var w, offset, z, i;\n var valid6regx = /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;\n var parts = [];\n if (!valid6regx.test(str)) {\n  return null;\n }\n if (str === \"::\") {\n  return [ 0, 0, 0, 0, 0, 0, 0, 0 ];\n }\n if (str.startsWith(\"::\")) {\n  str = str.replace(\"::\", \"Z:\");\n } else {\n  str = str.replace(\"::\", \":Z:\");\n }\n if (str.indexOf(\".\") > 0) {\n  str = str.replace(new RegExp(\"[.]\", \"g\"), \":\");\n  words = str.split(\":\");\n  words[words.length - 4] = jstoi_q(words[words.length - 4]) + jstoi_q(words[words.length - 3]) * 256;\n  words[words.length - 3] = jstoi_q(words[words.length - 2]) + jstoi_q(words[words.length - 1]) * 256;\n  words = words.slice(0, words.length - 2);\n } else {\n  words = str.split(\":\");\n }\n offset = 0;\n z = 0;\n for (w = 0; w < words.length; w++) {\n  if (typeof words[w] == \"string\") {\n   if (words[w] === \"Z\") {\n    for (z = 0; z < 8 - words.length + 1; z++) {\n     parts[w + z] = 0;\n    }\n    offset = z - 1;\n   } else {\n    parts[w + offset] = _htons(parseInt(words[w], 16));\n   }\n  } else {\n   parts[w + offset] = words[w];\n  }\n }\n return [ parts[1] << 16 | parts[0], parts[3] << 16 | parts[2], parts[5] << 16 | parts[4], parts[7] << 16 | parts[6] ];\n}\n\nvar DNS = {\n address_map: {\n  id: 1,\n  addrs: {},\n  names: {}\n },\n lookup_name: function(name) {\n  var res = inetPton4(name);\n  if (res !== null) {\n   return name;\n  }\n  res = inetPton6(name);\n  if (res !== null) {\n   return name;\n  }\n  var addr;\n  if (DNS.address_map.addrs[name]) {\n   addr = DNS.address_map.addrs[name];\n  } else {\n   var id = DNS.address_map.id++;\n   assert(id < 65535, \"exceeded max address mappings of 65535\");\n   addr = \"172.29.\" + (id & 255) + \".\" + (id & 65280);\n   DNS.address_map.names[addr] = name;\n   DNS.address_map.addrs[name] = addr;\n  }\n  return addr;\n },\n lookup_addr: function(addr) {\n  if (DNS.address_map.names[addr]) {\n   return DNS.address_map.names[addr];\n  }\n  return null;\n }\n};\n\nfunction getSocketAddress(addrp, addrlen, allowNull) {\n if (allowNull && addrp === 0) return null;\n var info = readSockaddr(addrp, addrlen);\n if (info.errno) throw new FS.ErrnoError(info.errno);\n info.addr = DNS.lookup_addr(info.addr) || info.addr;\n return info;\n}\n\nfunction ___syscall_bind(fd, addr, addrlen, d1, d2, d3) {\n var sock = getSocketFromFD(fd);\n var info = getSocketAddress(addr, addrlen);\n sock.sock_ops.bind(sock, info.addr, info.port);\n return 0;\n}\n\nfunction ___syscall_connect(fd, addr, addrlen, d1, d2, d3) {\n var sock = getSocketFromFD(fd);\n var info = getSocketAddress(addr, addrlen);\n sock.sock_ops.connect(sock, info.addr, info.port);\n return 0;\n}\n\nfunction ___syscall_faccessat(dirfd, path, amode, flags) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_fstat64(fd, buf) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction convertI32PairToI53Checked(lo, hi) {\n assert(lo == lo >>> 0 || lo == (lo | 0));\n assert(hi === (hi | 0));\n return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n}\n\nfunction ___syscall_ftruncate64(fd, length_low, length_high) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n outIdx >>>= 0;\n assert(typeof str === \"string\");\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++ >>> 0] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 192 | u >> 6;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 224 | u >> 12;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   if (u > 1114111) warnOnce(\"Invalid Unicode code point \" + ptrToString(u) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\n   heap[outIdx++ >>> 0] = 240 | u >> 18;\n   heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  }\n }\n heap[outIdx >>> 0] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction ___syscall_getdents64(fd, dirp, count) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction zeroMemory(address, size) {\n HEAPU8.fill(0, address, address + size);\n return address;\n}\n\nfunction writeSockaddr(sa, family, addr, port, addrlen) {\n switch (family) {\n case 2:\n  addr = inetPton4(addr);\n  zeroMemory(sa, 16);\n  if (addrlen) {\n   HEAP32[addrlen >>> 2] = 16;\n  }\n  HEAP16[sa >>> 1] = family;\n  HEAP32[sa + 4 >>> 2] = addr;\n  HEAP16[sa + 2 >>> 1] = _htons(port);\n  break;\n\n case 10:\n  addr = inetPton6(addr);\n  zeroMemory(sa, 28);\n  if (addrlen) {\n   HEAP32[addrlen >>> 2] = 28;\n  }\n  HEAP32[sa >>> 2] = family;\n  HEAP32[sa + 8 >>> 2] = addr[0];\n  HEAP32[sa + 12 >>> 2] = addr[1];\n  HEAP32[sa + 16 >>> 2] = addr[2];\n  HEAP32[sa + 20 >>> 2] = addr[3];\n  HEAP16[sa + 2 >>> 1] = _htons(port);\n  break;\n\n default:\n  return 5;\n }\n return 0;\n}\n\nfunction ___syscall_getpeername(fd, addr, addrlen, d1, d2, d3) {\n var sock = getSocketFromFD(fd);\n if (!sock.daddr) {\n  return -53;\n }\n var errno = writeSockaddr(addr, sock.family, DNS.lookup_name(sock.daddr), sock.dport, addrlen);\n assert(!errno);\n return 0;\n}\n\nfunction ___syscall_getsockopt(fd, level, optname, optval, optlen, d1) {\n var sock = getSocketFromFD(fd);\n if (level === 1) {\n  if (optname === 4) {\n   HEAP32[optval >>> 2] = sock.error;\n   HEAP32[optlen >>> 2] = 4;\n   sock.error = null;\n   return 0;\n  }\n }\n return -50;\n}\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_lstat64(path, buf) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_mkdirat(dirfd, path, mode) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_newfstatat(dirfd, path, buf, flags) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n SYSCALLS.varargs = varargs;\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_recvfrom(fd, buf, len, flags, addr, addrlen) {\n var sock = getSocketFromFD(fd);\n var msg = sock.sock_ops.recvmsg(sock, len);\n if (!msg) return 0;\n if (addr) {\n  var errno = writeSockaddr(addr, sock.family, DNS.lookup_name(msg.addr), msg.port, addrlen);\n  assert(!errno);\n }\n HEAPU8.set(msg.buffer, buf >>> 0);\n return msg.buffer.byteLength;\n}\n\nfunction ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_rmdir(path) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_sendto(fd, message, length, flags, addr, addr_len) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_socket(domain, type, protocol) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_stat64(path, buf) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___syscall_unlinkat(dirfd, path, flags) {\n abort(\"it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction ___throw_exception_with_stack_trace(ex) {\n var e = new WebAssembly.Exception(getCppExceptionTag(), [ ex ], {\n  traceStack: true\n });\n e.message = getExceptionMessage(e);\n if (e.stack) {\n  var arr = e.stack.split(\"\\n\");\n  arr.splice(1, 1);\n  e.stack = arr.join(\"\\n\");\n }\n throw e;\n}\n\nvar nowIsMonotonic = true;\n\nfunction __emscripten_get_now_is_monotonic() {\n return nowIsMonotonic;\n}\n\nfunction readI53FromI64(ptr) {\n return HEAPU32[ptr >>> 2] + HEAP32[ptr + 4 >>> 2] * 4294967296;\n}\n\nfunction isLeapYear(year) {\n return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nvar MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];\n\nvar MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];\n\nfunction ydayFromDate(date) {\n var leap = isLeapYear(date.getFullYear());\n var monthDaysCumulative = leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE;\n var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n return yday;\n}\n\nfunction __localtime_js(time, tmPtr) {\n var date = new Date(readI53FromI64(time) * 1e3);\n HEAP32[tmPtr >>> 2] = date.getSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getFullYear() - 1900;\n HEAP32[tmPtr + 24 >>> 2] = date.getDay();\n var yday = ydayFromDate(date) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n HEAP32[tmPtr + 36 >>> 2] = -(date.getTimezoneOffset() * 60);\n var start = new Date(date.getFullYear(), 0, 1);\n var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n var winterOffset = start.getTimezoneOffset();\n var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n HEAP32[tmPtr + 32 >>> 2] = dst;\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n}\n\nfunction stringToNewUTF8(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = _malloc(size);\n if (ret) stringToUTF8(str, ret, size);\n return ret;\n}\n\nfunction __tzset_js(timezone, daylight, tzname) {\n var currentYear = new Date().getFullYear();\n var winter = new Date(currentYear, 0, 1);\n var summer = new Date(currentYear, 6, 1);\n var winterOffset = winter.getTimezoneOffset();\n var summerOffset = summer.getTimezoneOffset();\n var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n HEAPU32[timezone >>> 2] = stdTimezoneOffset * 60;\n HEAP32[daylight >>> 2] = Number(winterOffset != summerOffset);\n function extractZone(date) {\n  var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n  return match ? match[1] : \"GMT\";\n }\n var winterName = extractZone(winter);\n var summerName = extractZone(summer);\n var winterNamePtr = stringToNewUTF8(winterName);\n var summerNamePtr = stringToNewUTF8(summerName);\n if (summerOffset < winterOffset) {\n  HEAPU32[tzname >>> 2] = winterNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = summerNamePtr;\n } else {\n  HEAPU32[tzname >>> 2] = summerNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = winterNamePtr;\n }\n}\n\nfunction _abort() {\n abort(\"native code called abort()\");\n}\n\nfunction _dlopen(filename, flags) {\n abort(dlopenMissingError);\n}\n\nfunction _duckdb_web_fs_directory_create(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.createDirectory(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_directory_exists(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.checkDirectory(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_directory_list_files(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_directory_remove(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.removeDirectory(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_file_close(fileId) {\n return globalThis.DUCKDB_RUNTIME.closeFile(Module, fileId);\n}\n\nfunction _duckdb_web_fs_file_exists(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.checkFile(Module, path, pathLen);\n}\n\nfunction _duckdb_web_fs_file_get_last_modified_time(fileId) {\n return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module, fileId);\n}\n\nfunction _duckdb_web_fs_file_move(from, fromLen, to, toLen) {\n return globalThis.DUCKDB_RUNTIME.moveFile(Module, from, fromLen, to, toLen);\n}\n\nfunction _duckdb_web_fs_file_open(fileId, flags) {\n return globalThis.DUCKDB_RUNTIME.openFile(Module, fileId, flags);\n}\n\nfunction _duckdb_web_fs_file_read(fileId, buf, size, location) {\n return globalThis.DUCKDB_RUNTIME.readFile(Module, fileId, buf, size, location);\n}\n\nfunction _duckdb_web_fs_file_truncate(fileId, newSize) {\n return globalThis.DUCKDB_RUNTIME.truncateFile(Module, fileId, newSize);\n}\n\nfunction _duckdb_web_fs_file_write(fileId, buf, size, location) {\n return globalThis.DUCKDB_RUNTIME.writeFile(Module, fileId, buf, size, location);\n}\n\nfunction _duckdb_web_fs_get_default_data_protocol(Module) {\n return globalThis.DUCKDB_RUNTIME.getDefaultDataProtocol(Module);\n}\n\nfunction _duckdb_web_fs_glob(path, pathLen) {\n return globalThis.DUCKDB_RUNTIME.glob(Module, path, pathLen);\n}\n\nfunction _duckdb_web_test_platform_feature(feature) {\n return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module, feature);\n}\n\nfunction _duckdb_web_udf_scalar_call(funcId, descPtr, descSize, ptrsPtr, ptrsSize, response) {\n return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module, funcId, descPtr, descSize, ptrsPtr, ptrsSize, response);\n}\n\nfunction _emscripten_console_error(str) {\n assert(typeof str == \"number\");\n console.error(UTF8ToString(str));\n}\n\nfunction _emscripten_date_now() {\n return Date.now();\n}\n\nfunction getHeapMax() {\n return 4294901760;\n}\n\nfunction _emscripten_get_heap_max() {\n return getHeapMax();\n}\n\nvar _emscripten_get_now;\n\nif (ENVIRONMENT_IS_NODE) {\n global.performance = require(\"perf_hooks\").performance;\n}\n\n_emscripten_get_now = () => performance.now();\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n}\n\nfunction emscripten_realloc_buffer(size) {\n var b = wasmMemory.buffer;\n var pages = size - b.byteLength + 65535 >>> 16;\n try {\n  wasmMemory.grow(pages);\n  updateMemoryViews();\n  return 1;\n } catch (e) {\n  err(`emscripten_realloc_buffer: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);\n }\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n assert(requestedSize > oldSize);\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  err(`Cannot enlarge memory, asked to go up to ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);\n  return false;\n }\n var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);\n return false;\n}\n\nvar ENV = {};\n\nfunction getExecutableName() {\n return thisProgram || \"./this.program\";\n}\n\nfunction getEnvStrings() {\n if (!getEnvStrings.strings) {\n  var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n  var env = {\n   \"USER\": \"web_user\",\n   \"LOGNAME\": \"web_user\",\n   \"PATH\": \"/\",\n   \"PWD\": \"/\",\n   \"HOME\": \"/home/web_user\",\n   \"LANG\": lang,\n   \"_\": getExecutableName()\n  };\n  for (var x in ENV) {\n   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n  }\n  var strings = [];\n  for (var x in env) {\n   strings.push(`${x}=${env[x]}`);\n  }\n  getEnvStrings.strings = strings;\n }\n return getEnvStrings.strings;\n}\n\nfunction stringToAscii(str, buffer) {\n for (var i = 0; i < str.length; ++i) {\n  assert(str.charCodeAt(i) === (str.charCodeAt(i) & 255));\n  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);\n }\n HEAP8[buffer >>> 0] = 0;\n}\n\nfunction _environ_get(__environ, environ_buf) {\n var bufSize = 0;\n getEnvStrings().forEach(function(string, i) {\n  var ptr = environ_buf + bufSize;\n  HEAPU32[__environ + i * 4 >>> 2] = ptr;\n  stringToAscii(string, ptr);\n  bufSize += string.length + 1;\n });\n return 0;\n}\n\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\n var strings = getEnvStrings();\n HEAPU32[penviron_count >>> 2] = strings.length;\n var bufSize = 0;\n strings.forEach(function(string) {\n  bufSize += string.length + 1;\n });\n HEAPU32[penviron_buf_size >>> 2] = bufSize;\n return 0;\n}\n\nfunction _fd_close(fd) {\n abort(\"fd_close called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_fdstat_get(fd, pbuf) {\n var rightsBase = 0;\n var rightsInheriting = 0;\n var flags = 0;\n {\n  assert(fd == 0 || fd == 1 || fd == 2);\n  var type = 2;\n  if (fd == 0) {\n   rightsBase = 2;\n  } else if (fd == 1 || fd == 2) {\n   rightsBase = 64;\n  }\n  flags = 1;\n }\n HEAP8[pbuf >>> 0] = type;\n HEAP16[pbuf + 2 >>> 1] = flags;\n tempI64 = [ rightsBase >>> 0, (tempDouble = rightsBase, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n HEAP32[pbuf + 8 >>> 2] = tempI64[0], HEAP32[pbuf + 12 >>> 2] = tempI64[1];\n tempI64 = [ rightsInheriting >>> 0, (tempDouble = rightsInheriting, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n HEAP32[pbuf + 16 >>> 2] = tempI64[0], HEAP32[pbuf + 20 >>> 2] = tempI64[1];\n return 0;\n}\n\nfunction _fd_pread(fd, iov, iovcnt, offset_low, offset_high, pnum) {\n abort(\"fd_pread called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_pwrite(fd, iov, iovcnt, offset_low, offset_high, pnum) {\n abort(\"fd_pwrite called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n abort(\"fd_read called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n return 70;\n}\n\nfunction _fd_sync(fd) {\n abort(\"fd_sync called without SYSCALLS_REQUIRE_FILESYSTEM\");\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\nfunction printChar(stream, curr) {\n var buffer = printCharBuffers[stream];\n assert(buffer);\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n}\n\nfunction flush_NO_FILESYSTEM() {\n _fflush(0);\n if (printCharBuffers[1].length) printChar(1, 10);\n if (printCharBuffers[2].length) printChar(2, 10);\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[iov >>> 2];\n  var len = HEAPU32[iov + 4 >>> 2];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j >>> 0]);\n  }\n  num += len;\n }\n HEAPU32[pnum >>> 2] = num;\n return 0;\n}\n\nfunction _getaddrinfo(node, service, hint, out) {\n var addrs = [];\n var canon = null;\n var addr = 0;\n var port = 0;\n var flags = 0;\n var family = 0;\n var type = 0;\n var proto = 0;\n var ai, last;\n function allocaddrinfo(family, type, proto, canon, addr, port) {\n  var sa, salen, ai;\n  var errno;\n  salen = family === 10 ? 28 : 16;\n  addr = family === 10 ? inetNtop6(addr) : inetNtop4(addr);\n  sa = _malloc(salen);\n  errno = writeSockaddr(sa, family, addr, port);\n  assert(!errno);\n  ai = _malloc(32);\n  HEAP32[ai + 4 >>> 2] = family;\n  HEAP32[ai + 8 >>> 2] = type;\n  HEAP32[ai + 12 >>> 2] = proto;\n  HEAPU32[ai + 24 >>> 2] = canon;\n  HEAPU32[ai + 20 >>> 2] = sa;\n  if (family === 10) {\n   HEAP32[ai + 16 >>> 2] = 28;\n  } else {\n   HEAP32[ai + 16 >>> 2] = 16;\n  }\n  HEAP32[ai + 28 >>> 2] = 0;\n  return ai;\n }\n if (hint) {\n  flags = HEAP32[hint >>> 2];\n  family = HEAP32[hint + 4 >>> 2];\n  type = HEAP32[hint + 8 >>> 2];\n  proto = HEAP32[hint + 12 >>> 2];\n }\n if (type && !proto) {\n  proto = type === 2 ? 17 : 6;\n }\n if (!type && proto) {\n  type = proto === 17 ? 2 : 1;\n }\n if (proto === 0) {\n  proto = 6;\n }\n if (type === 0) {\n  type = 1;\n }\n if (!node && !service) {\n  return -2;\n }\n if (flags & ~(1 | 2 | 4 | 1024 | 8 | 16 | 32)) {\n  return -1;\n }\n if (hint !== 0 && HEAP32[hint >>> 2] & 2 && !node) {\n  return -1;\n }\n if (flags & 32) {\n  return -2;\n }\n if (type !== 0 && type !== 1 && type !== 2) {\n  return -7;\n }\n if (family !== 0 && family !== 2 && family !== 10) {\n  return -6;\n }\n if (service) {\n  service = UTF8ToString(service);\n  port = parseInt(service, 10);\n  if (isNaN(port)) {\n   if (flags & 1024) {\n    return -2;\n   }\n   return -8;\n  }\n }\n if (!node) {\n  if (family === 0) {\n   family = 2;\n  }\n  if ((flags & 1) === 0) {\n   if (family === 2) {\n    addr = _htonl(2130706433);\n   } else {\n    addr = [ 0, 0, 0, 1 ];\n   }\n  }\n  ai = allocaddrinfo(family, type, proto, null, addr, port);\n  HEAPU32[out >>> 2] = ai;\n  return 0;\n }\n node = UTF8ToString(node);\n addr = inetPton4(node);\n if (addr !== null) {\n  if (family === 0 || family === 2) {\n   family = 2;\n  } else if (family === 10 && flags & 8) {\n   addr = [ 0, 0, _htonl(65535), addr ];\n   family = 10;\n  } else {\n   return -2;\n  }\n } else {\n  addr = inetPton6(node);\n  if (addr !== null) {\n   if (family === 0 || family === 10) {\n    family = 10;\n   } else {\n    return -2;\n   }\n  }\n }\n if (addr != null) {\n  ai = allocaddrinfo(family, type, proto, node, addr, port);\n  HEAPU32[out >>> 2] = ai;\n  return 0;\n }\n if (flags & 4) {\n  return -2;\n }\n node = DNS.lookup_name(node);\n addr = inetPton4(node);\n if (family === 0) {\n  family = 2;\n } else if (family === 10) {\n  addr = [ 0, 0, _htonl(65535), addr ];\n }\n ai = allocaddrinfo(family, type, proto, null, addr, port);\n HEAPU32[out >>> 2] = ai;\n return 0;\n}\n\nfunction initRandomFill() {\n if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") {\n  return view => crypto.getRandomValues(view);\n } else if (ENVIRONMENT_IS_NODE) {\n  try {\n   var crypto_module = require(\"crypto\");\n   var randomFillSync = crypto_module[\"randomFillSync\"];\n   if (randomFillSync) {\n    return view => crypto_module[\"randomFillSync\"](view);\n   }\n   var randomBytes = crypto_module[\"randomBytes\"];\n   return view => (view.set(randomBytes(view.byteLength)), view);\n  } catch (e) {}\n }\n abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\");\n}\n\nfunction randomFill(view) {\n return (randomFill = initRandomFill())(view);\n}\n\nfunction _getentropy(buffer, size) {\n randomFill(HEAPU8.subarray(buffer >>> 0, buffer + size >>> 0));\n return 0;\n}\n\nfunction _getnameinfo(sa, salen, node, nodelen, serv, servlen, flags) {\n var info = readSockaddr(sa, salen);\n if (info.errno) {\n  return -6;\n }\n var port = info.port;\n var addr = info.addr;\n var overflowed = false;\n if (node && nodelen) {\n  var lookup;\n  if (flags & 1 || !(lookup = DNS.lookup_addr(addr))) {\n   if (flags & 8) {\n    return -2;\n   }\n  } else {\n   addr = lookup;\n  }\n  var numBytesWrittenExclNull = stringToUTF8(addr, node, nodelen);\n  if (numBytesWrittenExclNull + 1 >= nodelen) {\n   overflowed = true;\n  }\n }\n if (serv && servlen) {\n  port = \"\" + port;\n  var numBytesWrittenExclNull = stringToUTF8(port, serv, servlen);\n  if (numBytesWrittenExclNull + 1 >= servlen) {\n   overflowed = true;\n  }\n }\n if (overflowed) {\n  return -12;\n }\n return 0;\n}\n\nfunction arraySum(array, index) {\n var sum = 0;\n for (var i = 0; i <= index; sum += array[i++]) {}\n return sum;\n}\n\nvar MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nvar MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nfunction addDays(date, days) {\n var newDate = new Date(date.getTime());\n while (days > 0) {\n  var leap = isLeapYear(newDate.getFullYear());\n  var currentMonth = newDate.getMonth();\n  var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  if (days > daysInCurrentMonth - newDate.getDate()) {\n   days -= daysInCurrentMonth - newDate.getDate() + 1;\n   newDate.setDate(1);\n   if (currentMonth < 11) {\n    newDate.setMonth(currentMonth + 1);\n   } else {\n    newDate.setMonth(0);\n    newDate.setFullYear(newDate.getFullYear() + 1);\n   }\n  } else {\n   newDate.setDate(newDate.getDate() + days);\n   return newDate;\n  }\n }\n return newDate;\n}\n\nfunction intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nfunction writeArrayToMemory(array, buffer) {\n assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\n HEAP8.set(array, buffer >>> 0);\n}\n\nfunction _strftime(s, maxsize, format, tm) {\n var tm_zone = HEAP32[tm + 40 >>> 2];\n var date = {\n  tm_sec: HEAP32[tm >>> 2],\n  tm_min: HEAP32[tm + 4 >>> 2],\n  tm_hour: HEAP32[tm + 8 >>> 2],\n  tm_mday: HEAP32[tm + 12 >>> 2],\n  tm_mon: HEAP32[tm + 16 >>> 2],\n  tm_year: HEAP32[tm + 20 >>> 2],\n  tm_wday: HEAP32[tm + 24 >>> 2],\n  tm_yday: HEAP32[tm + 28 >>> 2],\n  tm_isdst: HEAP32[tm + 32 >>> 2],\n  tm_gmtoff: HEAP32[tm + 36 >>> 2],\n  tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n };\n var pattern = UTF8ToString(format);\n var EXPANSION_RULES_1 = {\n  \"%c\": \"%a %b %d %H:%M:%S %Y\",\n  \"%D\": \"%m/%d/%y\",\n  \"%F\": \"%Y-%m-%d\",\n  \"%h\": \"%b\",\n  \"%r\": \"%I:%M:%S %p\",\n  \"%R\": \"%H:%M\",\n  \"%T\": \"%H:%M:%S\",\n  \"%x\": \"%m/%d/%y\",\n  \"%X\": \"%H:%M:%S\",\n  \"%Ec\": \"%c\",\n  \"%EC\": \"%C\",\n  \"%Ex\": \"%m/%d/%y\",\n  \"%EX\": \"%H:%M:%S\",\n  \"%Ey\": \"%y\",\n  \"%EY\": \"%Y\",\n  \"%Od\": \"%d\",\n  \"%Oe\": \"%e\",\n  \"%OH\": \"%H\",\n  \"%OI\": \"%I\",\n  \"%Om\": \"%m\",\n  \"%OM\": \"%M\",\n  \"%OS\": \"%S\",\n  \"%Ou\": \"%u\",\n  \"%OU\": \"%U\",\n  \"%OV\": \"%V\",\n  \"%Ow\": \"%w\",\n  \"%OW\": \"%W\",\n  \"%Oy\": \"%y\"\n };\n for (var rule in EXPANSION_RULES_1) {\n  pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n }\n var WEEKDAYS = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n var MONTHS = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n function leadingSomething(value, digits, character) {\n  var str = typeof value == \"number\" ? value.toString() : value || \"\";\n  while (str.length < digits) {\n   str = character[0] + str;\n  }\n  return str;\n }\n function leadingNulls(value, digits) {\n  return leadingSomething(value, digits, \"0\");\n }\n function compareByDay(date1, date2) {\n  function sgn(value) {\n   return value < 0 ? -1 : value > 0 ? 1 : 0;\n  }\n  var compare;\n  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n    compare = sgn(date1.getDate() - date2.getDate());\n   }\n  }\n  return compare;\n }\n function getFirstWeekStartDate(janFourth) {\n  switch (janFourth.getDay()) {\n  case 0:\n   return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n  case 1:\n   return janFourth;\n\n  case 2:\n   return new Date(janFourth.getFullYear(), 0, 3);\n\n  case 3:\n   return new Date(janFourth.getFullYear(), 0, 2);\n\n  case 4:\n   return new Date(janFourth.getFullYear(), 0, 1);\n\n  case 5:\n   return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n  case 6:\n   return new Date(janFourth.getFullYear() - 1, 11, 30);\n  }\n }\n function getWeekBasedYear(date) {\n  var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n    return thisDate.getFullYear() + 1;\n   }\n   return thisDate.getFullYear();\n  }\n  return thisDate.getFullYear() - 1;\n }\n var EXPANSION_RULES_2 = {\n  \"%a\": function(date) {\n   return WEEKDAYS[date.tm_wday].substring(0, 3);\n  },\n  \"%A\": function(date) {\n   return WEEKDAYS[date.tm_wday];\n  },\n  \"%b\": function(date) {\n   return MONTHS[date.tm_mon].substring(0, 3);\n  },\n  \"%B\": function(date) {\n   return MONTHS[date.tm_mon];\n  },\n  \"%C\": function(date) {\n   var year = date.tm_year + 1900;\n   return leadingNulls(year / 100 | 0, 2);\n  },\n  \"%d\": function(date) {\n   return leadingNulls(date.tm_mday, 2);\n  },\n  \"%e\": function(date) {\n   return leadingSomething(date.tm_mday, 2, \" \");\n  },\n  \"%g\": function(date) {\n   return getWeekBasedYear(date).toString().substring(2);\n  },\n  \"%G\": function(date) {\n   return getWeekBasedYear(date);\n  },\n  \"%H\": function(date) {\n   return leadingNulls(date.tm_hour, 2);\n  },\n  \"%I\": function(date) {\n   var twelveHour = date.tm_hour;\n   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;\n   return leadingNulls(twelveHour, 2);\n  },\n  \"%j\": function(date) {\n   return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n  },\n  \"%m\": function(date) {\n   return leadingNulls(date.tm_mon + 1, 2);\n  },\n  \"%M\": function(date) {\n   return leadingNulls(date.tm_min, 2);\n  },\n  \"%n\": function() {\n   return \"\\n\";\n  },\n  \"%p\": function(date) {\n   if (date.tm_hour >= 0 && date.tm_hour < 12) {\n    return \"AM\";\n   }\n   return \"PM\";\n  },\n  \"%S\": function(date) {\n   return leadingNulls(date.tm_sec, 2);\n  },\n  \"%t\": function() {\n   return \"\\t\";\n  },\n  \"%u\": function(date) {\n   return date.tm_wday || 7;\n  },\n  \"%U\": function(date) {\n   var days = date.tm_yday + 7 - date.tm_wday;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%V\": function(date) {\n   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n    val++;\n   }\n   if (!val) {\n    val = 52;\n    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n    if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {\n     val++;\n    }\n   } else if (val == 53) {\n    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n    if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n   }\n   return leadingNulls(val, 2);\n  },\n  \"%w\": function(date) {\n   return date.tm_wday;\n  },\n  \"%W\": function(date) {\n   var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%y\": function(date) {\n   return (date.tm_year + 1900).toString().substring(2);\n  },\n  \"%Y\": function(date) {\n   return date.tm_year + 1900;\n  },\n  \"%z\": function(date) {\n   var off = date.tm_gmtoff;\n   var ahead = off >= 0;\n   off = Math.abs(off) / 60;\n   off = off / 60 * 100 + off % 60;\n   return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n  },\n  \"%Z\": function(date) {\n   return date.tm_zone;\n  },\n  \"%%\": function() {\n   return \"%\";\n  }\n };\n pattern = pattern.replace(/%%/g, \"\\0\\0\");\n for (var rule in EXPANSION_RULES_2) {\n  if (pattern.includes(rule)) {\n   pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n  }\n }\n pattern = pattern.replace(/\\0\\0/g, \"%\");\n var bytes = intArrayFromString(pattern, false);\n if (bytes.length > maxsize) {\n  return 0;\n }\n writeArrayToMemory(bytes, s);\n return bytes.length - 1;\n}\n\nfunction _strftime_l(s, maxsize, format, tm, loc) {\n return _strftime(s, maxsize, format, tm);\n}\n\nfunction _ucnv_close_64() {\n err(\"missing function: ucnv_close_64\");\n abort(-1);\n}\n\nfunction _ucnv_convertEx_64() {\n err(\"missing function: ucnv_convertEx_64\");\n abort(-1);\n}\n\nfunction _ucnv_open_64() {\n err(\"missing function: ucnv_open_64\");\n abort(-1);\n}\n\nfunction _ucnv_toAlgorithmic_64() {\n err(\"missing function: ucnv_toAlgorithmic_64\");\n abort(-1);\n}\n\nfunction _ucsdet_close_64() {\n err(\"missing function: ucsdet_close_64\");\n abort(-1);\n}\n\nfunction _ucsdet_detect_64() {\n err(\"missing function: ucsdet_detect_64\");\n abort(-1);\n}\n\nfunction _ucsdet_getConfidence_64() {\n err(\"missing function: ucsdet_getConfidence_64\");\n abort(-1);\n}\n\nfunction _ucsdet_getName_64() {\n err(\"missing function: ucsdet_getName_64\");\n abort(-1);\n}\n\nfunction _ucsdet_open_64() {\n err(\"missing function: ucsdet_open_64\");\n abort(-1);\n}\n\nfunction _ucsdet_setText_64() {\n err(\"missing function: ucsdet_setText_64\");\n abort(-1);\n}\n\nfunction _unzClose() {\n err(\"missing function: unzClose\");\n abort(-1);\n}\n\nfunction _unzCloseCurrentFile() {\n err(\"missing function: unzCloseCurrentFile\");\n abort(-1);\n}\n\nfunction _unzGetCurrentFileInfo() {\n err(\"missing function: unzGetCurrentFileInfo\");\n abort(-1);\n}\n\nfunction _unzGetCurrentFileInfo64() {\n err(\"missing function: unzGetCurrentFileInfo64\");\n abort(-1);\n}\n\nfunction _unzGetGlobalInfo() {\n err(\"missing function: unzGetGlobalInfo\");\n abort(-1);\n}\n\nfunction _unzGoToFirstFile() {\n err(\"missing function: unzGoToFirstFile\");\n abort(-1);\n}\n\nfunction _unzGoToNextFile() {\n err(\"missing function: unzGoToNextFile\");\n abort(-1);\n}\n\nfunction _unzLocateFile() {\n err(\"missing function: unzLocateFile\");\n abort(-1);\n}\n\nfunction _unzOpen() {\n err(\"missing function: unzOpen\");\n abort(-1);\n}\n\nfunction _unzOpen2() {\n err(\"missing function: unzOpen2\");\n abort(-1);\n}\n\nfunction _unzOpenCurrentFile() {\n err(\"missing function: unzOpenCurrentFile\");\n abort(-1);\n}\n\nfunction _unzReadCurrentFile() {\n err(\"missing function: unzReadCurrentFile\");\n abort(-1);\n}\n\nfunction _proc_exit(code) {\n EXITSTATUS = code;\n if (!keepRuntimeAlive()) {\n  if (Module[\"onExit\"]) Module[\"onExit\"](code);\n  ABORT = true;\n }\n quit_(code, new ExitStatus(code));\n}\n\nfunction exitJS(status, implicit) {\n EXITSTATUS = status;\n checkUnflushedContent();\n if (keepRuntimeAlive() && !implicit) {\n  var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\n  readyPromiseReject(msg);\n  err(msg);\n }\n _proc_exit(status);\n}\n\nfunction handleException(e) {\n if (e instanceof ExitStatus || e == \"unwind\") {\n  return EXITSTATUS;\n }\n checkStackCookie();\n if (e instanceof WebAssembly.RuntimeError) {\n  if (_emscripten_stack_get_current() <= 0) {\n   err(\"Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)\");\n  }\n }\n quit_(1, e);\n}\n\nfunction getCFunc(ident) {\n var func = Module[\"_\" + ident];\n assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n return func;\n}\n\nfunction stringToUTF8OnStack(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = stackAlloc(size);\n stringToUTF8(str, ret, size);\n return ret;\n}\n\nfunction ccall(ident, returnType, argTypes, args, opts) {\n var toC = {\n  \"string\": str => {\n   var ret = 0;\n   if (str !== null && str !== undefined && str !== 0) {\n    ret = stringToUTF8OnStack(str);\n   }\n   return ret;\n  },\n  \"array\": arr => {\n   var ret = stackAlloc(arr.length);\n   writeArrayToMemory(arr, ret);\n   return ret;\n  }\n };\n function convertReturnValue(ret) {\n  if (returnType === \"string\") {\n   return UTF8ToString(ret);\n  }\n  if (returnType === \"boolean\") return Boolean(ret);\n  return ret;\n }\n var func = getCFunc(ident);\n var cArgs = [];\n var stack = 0;\n assert(returnType !== \"array\", 'Return type should not be \"array\".');\n if (args) {\n  for (var i = 0; i < args.length; i++) {\n   var converter = toC[argTypes[i]];\n   if (converter) {\n    if (stack === 0) stack = stackSave();\n    cArgs[i] = converter(args[i]);\n   } else {\n    cArgs[i] = args[i];\n   }\n  }\n }\n var ret = func.apply(null, cArgs);\n function onDone(ret) {\n  if (stack !== 0) stackRestore(stack);\n  return convertReturnValue(ret);\n }\n ret = onDone(ret);\n return ret;\n}\n\nfunction checkIncomingModuleAPI() {\n ignoredModuleProp(\"fetchSettings\");\n}\n\nvar wasmImports = {\n \"XML_GetBuffer\": _XML_GetBuffer,\n \"XML_GetErrorCode\": _XML_GetErrorCode,\n \"XML_Parse\": _XML_Parse,\n \"XML_ParseBuffer\": _XML_ParseBuffer,\n \"XML_ParserCreate\": _XML_ParserCreate,\n \"XML_ParserFree\": _XML_ParserFree,\n \"XML_ResumeParser\": _XML_ResumeParser,\n \"XML_SetCharacterDataHandler\": _XML_SetCharacterDataHandler,\n \"XML_SetElementHandler\": _XML_SetElementHandler,\n \"XML_SetUserData\": _XML_SetUserData,\n \"XML_StopParser\": _XML_StopParser,\n \"__assert_fail\": ___assert_fail,\n \"__dlsym\": ___dlsym,\n \"__syscall__newselect\": ___syscall__newselect,\n \"__syscall_bind\": ___syscall_bind,\n \"__syscall_connect\": ___syscall_connect,\n \"__syscall_faccessat\": ___syscall_faccessat,\n \"__syscall_fcntl64\": ___syscall_fcntl64,\n \"__syscall_fstat64\": ___syscall_fstat64,\n \"__syscall_ftruncate64\": ___syscall_ftruncate64,\n \"__syscall_getdents64\": ___syscall_getdents64,\n \"__syscall_getpeername\": ___syscall_getpeername,\n \"__syscall_getsockopt\": ___syscall_getsockopt,\n \"__syscall_ioctl\": ___syscall_ioctl,\n \"__syscall_lstat64\": ___syscall_lstat64,\n \"__syscall_mkdirat\": ___syscall_mkdirat,\n \"__syscall_newfstatat\": ___syscall_newfstatat,\n \"__syscall_openat\": ___syscall_openat,\n \"__syscall_recvfrom\": ___syscall_recvfrom,\n \"__syscall_renameat\": ___syscall_renameat,\n \"__syscall_rmdir\": ___syscall_rmdir,\n \"__syscall_sendto\": ___syscall_sendto,\n \"__syscall_socket\": ___syscall_socket,\n \"__syscall_stat64\": ___syscall_stat64,\n \"__syscall_unlinkat\": ___syscall_unlinkat,\n \"__throw_exception_with_stack_trace\": ___throw_exception_with_stack_trace,\n \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n \"_localtime_js\": __localtime_js,\n \"_tzset_js\": __tzset_js,\n \"abort\": _abort,\n \"dlopen\": _dlopen,\n \"duckdb_web_fs_directory_create\": _duckdb_web_fs_directory_create,\n \"duckdb_web_fs_directory_exists\": _duckdb_web_fs_directory_exists,\n \"duckdb_web_fs_directory_list_files\": _duckdb_web_fs_directory_list_files,\n \"duckdb_web_fs_directory_remove\": _duckdb_web_fs_directory_remove,\n \"duckdb_web_fs_file_close\": _duckdb_web_fs_file_close,\n \"duckdb_web_fs_file_exists\": _duckdb_web_fs_file_exists,\n \"duckdb_web_fs_file_get_last_modified_time\": _duckdb_web_fs_file_get_last_modified_time,\n \"duckdb_web_fs_file_move\": _duckdb_web_fs_file_move,\n \"duckdb_web_fs_file_open\": _duckdb_web_fs_file_open,\n \"duckdb_web_fs_file_read\": _duckdb_web_fs_file_read,\n \"duckdb_web_fs_file_truncate\": _duckdb_web_fs_file_truncate,\n \"duckdb_web_fs_file_write\": _duckdb_web_fs_file_write,\n \"duckdb_web_fs_get_default_data_protocol\": _duckdb_web_fs_get_default_data_protocol,\n \"duckdb_web_fs_glob\": _duckdb_web_fs_glob,\n \"duckdb_web_test_platform_feature\": _duckdb_web_test_platform_feature,\n \"duckdb_web_udf_scalar_call\": _duckdb_web_udf_scalar_call,\n \"emscripten_console_error\": _emscripten_console_error,\n \"emscripten_date_now\": _emscripten_date_now,\n \"emscripten_get_heap_max\": _emscripten_get_heap_max,\n \"emscripten_get_now\": _emscripten_get_now,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap,\n \"environ_get\": _environ_get,\n \"environ_sizes_get\": _environ_sizes_get,\n \"fd_close\": _fd_close,\n \"fd_fdstat_get\": _fd_fdstat_get,\n \"fd_pread\": _fd_pread,\n \"fd_pwrite\": _fd_pwrite,\n \"fd_read\": _fd_read,\n \"fd_seek\": _fd_seek,\n \"fd_sync\": _fd_sync,\n \"fd_write\": _fd_write,\n \"getaddrinfo\": _getaddrinfo,\n \"getentropy\": _getentropy,\n \"getnameinfo\": _getnameinfo,\n \"strftime_l\": _strftime_l,\n \"ucnv_close_64\": _ucnv_close_64,\n \"ucnv_convertEx_64\": _ucnv_convertEx_64,\n \"ucnv_open_64\": _ucnv_open_64,\n \"ucnv_toAlgorithmic_64\": _ucnv_toAlgorithmic_64,\n \"ucsdet_close_64\": _ucsdet_close_64,\n \"ucsdet_detect_64\": _ucsdet_detect_64,\n \"ucsdet_getConfidence_64\": _ucsdet_getConfidence_64,\n \"ucsdet_getName_64\": _ucsdet_getName_64,\n \"ucsdet_open_64\": _ucsdet_open_64,\n \"ucsdet_setText_64\": _ucsdet_setText_64,\n \"unzClose\": _unzClose,\n \"unzCloseCurrentFile\": _unzCloseCurrentFile,\n \"unzGetCurrentFileInfo\": _unzGetCurrentFileInfo,\n \"unzGetCurrentFileInfo64\": _unzGetCurrentFileInfo64,\n \"unzGetGlobalInfo\": _unzGetGlobalInfo,\n \"unzGoToFirstFile\": _unzGoToFirstFile,\n \"unzGoToNextFile\": _unzGoToNextFile,\n \"unzLocateFile\": _unzLocateFile,\n \"unzOpen\": _unzOpen,\n \"unzOpen2\": _unzOpen2,\n \"unzOpenCurrentFile\": _unzOpenCurrentFile,\n \"unzReadCurrentFile\": _unzReadCurrentFile\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n\nvar _main = Module[\"_main\"] = createExportWrapper(\"main\");\n\nvar _duckdb_web_fs_glob_add_path = Module[\"_duckdb_web_fs_glob_add_path\"] = createExportWrapper(\"duckdb_web_fs_glob_add_path\");\n\nvar _duckdb_web_clear_response = Module[\"_duckdb_web_clear_response\"] = createExportWrapper(\"duckdb_web_clear_response\");\n\nvar _duckdb_web_fail_with = Module[\"_duckdb_web_fail_with\"] = createExportWrapper(\"duckdb_web_fail_with\");\n\nvar _duckdb_web_reset = Module[\"_duckdb_web_reset\"] = createExportWrapper(\"duckdb_web_reset\");\n\nvar _duckdb_web_connect = Module[\"_duckdb_web_connect\"] = createExportWrapper(\"duckdb_web_connect\");\n\nvar _duckdb_web_disconnect = Module[\"_duckdb_web_disconnect\"] = createExportWrapper(\"duckdb_web_disconnect\");\n\nvar _duckdb_web_flush_files = Module[\"_duckdb_web_flush_files\"] = createExportWrapper(\"duckdb_web_flush_files\");\n\nvar _duckdb_web_flush_file = Module[\"_duckdb_web_flush_file\"] = createExportWrapper(\"duckdb_web_flush_file\");\n\nvar _duckdb_web_open = Module[\"_duckdb_web_open\"] = createExportWrapper(\"duckdb_web_open\");\n\nvar _duckdb_web_get_global_file_info = Module[\"_duckdb_web_get_global_file_info\"] = createExportWrapper(\"duckdb_web_get_global_file_info\");\n\nvar _duckdb_web_collect_file_stats = Module[\"_duckdb_web_collect_file_stats\"] = createExportWrapper(\"duckdb_web_collect_file_stats\");\n\nvar _duckdb_web_export_file_stats = Module[\"_duckdb_web_export_file_stats\"] = createExportWrapper(\"duckdb_web_export_file_stats\");\n\nvar _duckdb_web_fs_drop_file = Module[\"_duckdb_web_fs_drop_file\"] = createExportWrapper(\"duckdb_web_fs_drop_file\");\n\nvar _duckdb_web_fs_drop_files = Module[\"_duckdb_web_fs_drop_files\"] = createExportWrapper(\"duckdb_web_fs_drop_files\");\n\nvar _duckdb_web_fs_glob_file_infos = Module[\"_duckdb_web_fs_glob_file_infos\"] = createExportWrapper(\"duckdb_web_fs_glob_file_infos\");\n\nvar _duckdb_web_fs_get_file_info_by_id = Module[\"_duckdb_web_fs_get_file_info_by_id\"] = createExportWrapper(\"duckdb_web_fs_get_file_info_by_id\");\n\nvar _duckdb_web_fs_get_file_info_by_name = Module[\"_duckdb_web_fs_get_file_info_by_name\"] = createExportWrapper(\"duckdb_web_fs_get_file_info_by_name\");\n\nvar _duckdb_web_fs_register_file_url = Module[\"_duckdb_web_fs_register_file_url\"] = createExportWrapper(\"duckdb_web_fs_register_file_url\");\n\nvar _duckdb_web_fs_register_file_buffer = Module[\"_duckdb_web_fs_register_file_buffer\"] = createExportWrapper(\"duckdb_web_fs_register_file_buffer\");\n\nvar _duckdb_web_copy_file_to_buffer = Module[\"_duckdb_web_copy_file_to_buffer\"] = createExportWrapper(\"duckdb_web_copy_file_to_buffer\");\n\nvar _duckdb_web_copy_file_to_path = Module[\"_duckdb_web_copy_file_to_path\"] = createExportWrapper(\"duckdb_web_copy_file_to_path\");\n\nvar _duckdb_web_get_version = Module[\"_duckdb_web_get_version\"] = createExportWrapper(\"duckdb_web_get_version\");\n\nvar _duckdb_web_get_feature_flags = Module[\"_duckdb_web_get_feature_flags\"] = createExportWrapper(\"duckdb_web_get_feature_flags\");\n\nvar _duckdb_web_tokenize = Module[\"_duckdb_web_tokenize\"] = createExportWrapper(\"duckdb_web_tokenize\");\n\nvar _duckdb_web_udf_scalar_create = Module[\"_duckdb_web_udf_scalar_create\"] = createExportWrapper(\"duckdb_web_udf_scalar_create\");\n\nvar _duckdb_web_prepared_create = Module[\"_duckdb_web_prepared_create\"] = createExportWrapper(\"duckdb_web_prepared_create\");\n\nvar _duckdb_web_prepared_close = Module[\"_duckdb_web_prepared_close\"] = createExportWrapper(\"duckdb_web_prepared_close\");\n\nvar _duckdb_web_prepared_run = Module[\"_duckdb_web_prepared_run\"] = createExportWrapper(\"duckdb_web_prepared_run\");\n\nvar _duckdb_web_prepared_send = Module[\"_duckdb_web_prepared_send\"] = createExportWrapper(\"duckdb_web_prepared_send\");\n\nvar _duckdb_web_query_run = Module[\"_duckdb_web_query_run\"] = createExportWrapper(\"duckdb_web_query_run\");\n\nvar _duckdb_web_pending_query_start = Module[\"_duckdb_web_pending_query_start\"] = createExportWrapper(\"duckdb_web_pending_query_start\");\n\nvar _duckdb_web_pending_query_poll = Module[\"_duckdb_web_pending_query_poll\"] = createExportWrapper(\"duckdb_web_pending_query_poll\");\n\nvar _duckdb_web_pending_query_cancel = Module[\"_duckdb_web_pending_query_cancel\"] = createExportWrapper(\"duckdb_web_pending_query_cancel\");\n\nvar _duckdb_web_query_fetch_results = Module[\"_duckdb_web_query_fetch_results\"] = createExportWrapper(\"duckdb_web_query_fetch_results\");\n\nvar _duckdb_web_get_tablenames = Module[\"_duckdb_web_get_tablenames\"] = createExportWrapper(\"duckdb_web_get_tablenames\");\n\nvar _duckdb_web_insert_arrow_from_ipc_stream = Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"] = createExportWrapper(\"duckdb_web_insert_arrow_from_ipc_stream\");\n\nvar _duckdb_web_insert_csv_from_path = Module[\"_duckdb_web_insert_csv_from_path\"] = createExportWrapper(\"duckdb_web_insert_csv_from_path\");\n\nvar _duckdb_web_insert_json_from_path = Module[\"_duckdb_web_insert_json_from_path\"] = createExportWrapper(\"duckdb_web_insert_json_from_path\");\n\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n\nvar _htonl = createExportWrapper(\"htonl\");\n\nvar _htons = createExportWrapper(\"htons\");\n\nvar _ntohs = createExportWrapper(\"ntohs\");\n\nvar _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\");\n\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\");\n\nvar ___trap = function() {\n return (___trap = Module[\"asm\"][\"__trap\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_init = function() {\n return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_free = function() {\n return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_base = function() {\n return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_end = function() {\n return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\nvar stackSave = createExportWrapper(\"stackSave\");\n\nvar stackRestore = createExportWrapper(\"stackRestore\");\n\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n\nvar _emscripten_stack_get_current = function() {\n return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\nvar ___cxa_decrement_exception_refcount = Module[\"___cxa_decrement_exception_refcount\"] = createExportWrapper(\"__cxa_decrement_exception_refcount\");\n\nvar ___cxa_increment_exception_refcount = Module[\"___cxa_increment_exception_refcount\"] = createExportWrapper(\"__cxa_increment_exception_refcount\");\n\nvar ___thrown_object_from_unwind_exception = Module[\"___thrown_object_from_unwind_exception\"] = createExportWrapper(\"__thrown_object_from_unwind_exception\");\n\nvar ___get_exception_message = Module[\"___get_exception_message\"] = createExportWrapper(\"__get_exception_message\");\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = createExportWrapper(\"dynCall_iiiiij\");\n\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = createExportWrapper(\"dynCall_iiiiijj\");\n\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = createExportWrapper(\"dynCall_iiiiiijj\");\n\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = createExportWrapper(\"dynCall_viijii\");\n\nvar dynCall_viijji = Module[\"dynCall_viijji\"] = createExportWrapper(\"dynCall_viijji\");\n\nvar dynCall_iiiji = Module[\"dynCall_iiiji\"] = createExportWrapper(\"dynCall_iiiji\");\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = createExportWrapper(\"dynCall_ji\");\n\nvar dynCall_viij = Module[\"dynCall_viij\"] = createExportWrapper(\"dynCall_viij\");\n\nvar dynCall_vij = Module[\"dynCall_vij\"] = createExportWrapper(\"dynCall_vij\");\n\nvar dynCall_vjjijij = Module[\"dynCall_vjjijij\"] = createExportWrapper(\"dynCall_vjjijij\");\n\nvar dynCall_vijjji = Module[\"dynCall_vijjji\"] = createExportWrapper(\"dynCall_vijjji\");\n\nvar dynCall_vjjii = Module[\"dynCall_vjjii\"] = createExportWrapper(\"dynCall_vjjii\");\n\nvar dynCall_viiiiiji = Module[\"dynCall_viiiiiji\"] = createExportWrapper(\"dynCall_viiiiiji\");\n\nvar dynCall_jiiiji = Module[\"dynCall_jiiiji\"] = createExportWrapper(\"dynCall_jiiiji\");\n\nvar dynCall_jiiij = Module[\"dynCall_jiiij\"] = createExportWrapper(\"dynCall_jiiij\");\n\nvar dynCall_jijjij = Module[\"dynCall_jijjij\"] = createExportWrapper(\"dynCall_jijjij\");\n\nvar dynCall_iiij = Module[\"dynCall_iiij\"] = createExportWrapper(\"dynCall_iiij\");\n\nvar dynCall_vijjj = Module[\"dynCall_vijjj\"] = createExportWrapper(\"dynCall_vijjj\");\n\nvar dynCall_vijj = Module[\"dynCall_vijj\"] = createExportWrapper(\"dynCall_vijj\");\n\nvar dynCall_viijj = Module[\"dynCall_viijj\"] = createExportWrapper(\"dynCall_viijj\");\n\nvar dynCall_jiijii = Module[\"dynCall_jiijii\"] = createExportWrapper(\"dynCall_jiijii\");\n\nvar dynCall_jijiii = Module[\"dynCall_jijiii\"] = createExportWrapper(\"dynCall_jijiii\");\n\nvar dynCall_viijiiiii = Module[\"dynCall_viijiiiii\"] = createExportWrapper(\"dynCall_viijiiiii\");\n\nvar dynCall_viijiiij = Module[\"dynCall_viijiiij\"] = createExportWrapper(\"dynCall_viijiiij\");\n\nvar dynCall_vijiiiji = Module[\"dynCall_vijiiiji\"] = createExportWrapper(\"dynCall_vijiiiji\");\n\nvar dynCall_viiiij = Module[\"dynCall_viiiij\"] = createExportWrapper(\"dynCall_viiiij\");\n\nvar dynCall_jiiji = Module[\"dynCall_jiiji\"] = createExportWrapper(\"dynCall_jiiji\");\n\nvar dynCall_viiijij = Module[\"dynCall_viiijij\"] = createExportWrapper(\"dynCall_viiijij\");\n\nvar dynCall_viijiij = Module[\"dynCall_viijiij\"] = createExportWrapper(\"dynCall_viijiij\");\n\nvar dynCall_viiiiijj = Module[\"dynCall_viiiiijj\"] = createExportWrapper(\"dynCall_viiiiijj\");\n\nvar dynCall_viiijji = Module[\"dynCall_viiijji\"] = createExportWrapper(\"dynCall_viiijji\");\n\nvar dynCall_vijii = Module[\"dynCall_vijii\"] = createExportWrapper(\"dynCall_vijii\");\n\nvar dynCall_iiiiiji = Module[\"dynCall_iiiiiji\"] = createExportWrapper(\"dynCall_iiiiiji\");\n\nvar dynCall_iij = Module[\"dynCall_iij\"] = createExportWrapper(\"dynCall_iij\");\n\nvar dynCall_iiijj = Module[\"dynCall_iiijj\"] = createExportWrapper(\"dynCall_iiijj\");\n\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = createExportWrapper(\"dynCall_iijii\");\n\nvar dynCall_viji = Module[\"dynCall_viji\"] = createExportWrapper(\"dynCall_viji\");\n\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = createExportWrapper(\"dynCall_iiji\");\n\nvar dynCall_viijjj = Module[\"dynCall_viijjj\"] = createExportWrapper(\"dynCall_viijjj\");\n\nvar dynCall_viiijj = Module[\"dynCall_viiijj\"] = createExportWrapper(\"dynCall_viiijj\");\n\nvar dynCall_jijj = Module[\"dynCall_jijj\"] = createExportWrapper(\"dynCall_jijj\");\n\nvar dynCall_jiiiii = Module[\"dynCall_jiiiii\"] = createExportWrapper(\"dynCall_jiiiii\");\n\nvar dynCall_jiiii = Module[\"dynCall_jiiii\"] = createExportWrapper(\"dynCall_jiiii\");\n\nvar dynCall_jii = Module[\"dynCall_jii\"] = createExportWrapper(\"dynCall_jii\");\n\nvar dynCall_viijij = Module[\"dynCall_viijij\"] = createExportWrapper(\"dynCall_viijij\");\n\nvar dynCall_viiij = Module[\"dynCall_viiij\"] = createExportWrapper(\"dynCall_viiij\");\n\nvar dynCall_j = Module[\"dynCall_j\"] = createExportWrapper(\"dynCall_j\");\n\nvar dynCall_viiijiiiijj = Module[\"dynCall_viiijiiiijj\"] = createExportWrapper(\"dynCall_viiijiiiijj\");\n\nvar dynCall_jiiiij = Module[\"dynCall_jiiiij\"] = createExportWrapper(\"dynCall_jiiiij\");\n\nvar dynCall_jj = Module[\"dynCall_jj\"] = createExportWrapper(\"dynCall_jj\");\n\nvar dynCall_ij = Module[\"dynCall_ij\"] = createExportWrapper(\"dynCall_ij\");\n\nvar dynCall_ijjj = Module[\"dynCall_ijjj\"] = createExportWrapper(\"dynCall_ijjj\");\n\nvar dynCall_jjjd = Module[\"dynCall_jjjd\"] = createExportWrapper(\"dynCall_jjjd\");\n\nvar dynCall_jjjjjjd = Module[\"dynCall_jjjjjjd\"] = createExportWrapper(\"dynCall_jjjjjjd\");\n\nvar dynCall_jij = Module[\"dynCall_jij\"] = createExportWrapper(\"dynCall_jij\");\n\nvar dynCall_viiijiiijii = Module[\"dynCall_viiijiiijii\"] = createExportWrapper(\"dynCall_viiijiiijii\");\n\nvar dynCall_viijijiiii = Module[\"dynCall_viijijiiii\"] = createExportWrapper(\"dynCall_viijijiiii\");\n\nvar dynCall_viiji = Module[\"dynCall_viiji\"] = createExportWrapper(\"dynCall_viiji\");\n\nvar dynCall_jiiiijj = Module[\"dynCall_jiiiijj\"] = createExportWrapper(\"dynCall_jiiiijj\");\n\nvar dynCall_viiiji = Module[\"dynCall_viiiji\"] = createExportWrapper(\"dynCall_viiiji\");\n\nvar dynCall_viiiiji = Module[\"dynCall_viiiiji\"] = createExportWrapper(\"dynCall_viiiiji\");\n\nvar dynCall_jijiiii = Module[\"dynCall_jijiiii\"] = createExportWrapper(\"dynCall_jijiiii\");\n\nvar dynCall_viiijiji = Module[\"dynCall_viiijiji\"] = createExportWrapper(\"dynCall_viiijiji\");\n\nvar dynCall_viijiji = Module[\"dynCall_viijiji\"] = createExportWrapper(\"dynCall_viijiji\");\n\nvar dynCall_jiii = Module[\"dynCall_jiii\"] = createExportWrapper(\"dynCall_jiii\");\n\nModule[\"stackAlloc\"] = stackAlloc;\n\nModule[\"stackSave\"] = stackSave;\n\nModule[\"stackRestore\"] = stackRestore;\n\nModule[\"ccall\"] = ccall;\n\nvar missingLibrarySymbols = [ \"getHostByName\", \"traverseStack\", \"getCallstack\", \"emscriptenLog\", \"convertPCtoSourceLocation\", \"readEmAsmArgs\", \"jstoi_s\", \"listenOnce\", \"autoResumeAudioContext\", \"dynCallLegacy\", \"getDynCaller\", \"dynCall\", \"runtimeKeepalivePush\", \"runtimeKeepalivePop\", \"callUserCallback\", \"maybeExit\", \"safeSetTimeout\", \"asmjsMangle\", \"asyncLoad\", \"alignMemory\", \"mmapAlloc\", \"HandleAllocator\", \"getNativeTypeSize\", \"STACK_SIZE\", \"STACK_ALIGN\", \"POINTER_SIZE\", \"ASSERTIONS\", \"writeI53ToI64\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"readI53FromU64\", \"convertI32PairToI53\", \"convertU32PairToI53\", \"cwrap\", \"uleb128Encode\", \"sigToWasmTypes\", \"generateFuncType\", \"convertJsFunctionToWasm\", \"getEmptyTableSlot\", \"updateTableMap\", \"getFunctionAddress\", \"addFunction\", \"removeFunction\", \"reallyNegative\", \"unSign\", \"strLen\", \"reSign\", \"formatString\", \"intArrayToString\", \"AsciiToString\", \"UTF16ToString\", \"stringToUTF16\", \"lengthBytesUTF16\", \"UTF32ToString\", \"stringToUTF32\", \"lengthBytesUTF32\", \"registerKeyEventCallback\", \"maybeCStringToJsString\", \"findEventTarget\", \"findCanvasEventTarget\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSize\", \"getCanvasElementSize\", \"demangle\", \"demangleAll\", \"jsStackTrace\", \"stackTrace\", \"checkWasiClock\", \"wasiRightsToMuslOFlags\", \"wasiOFlagsToMuslOFlags\", \"createDyncallWrapper\", \"setImmediateWrapped\", \"clearImmediateWrapped\", \"polyfillSetImmediate\", \"getPromise\", \"makePromise\", \"idsToPromises\", \"makePromiseCallback\", \"setMainLoop\", \"heapObjectForWebGLType\", \"heapAccessShiftForWebGLHeap\", \"webgl_enable_ANGLE_instanced_arrays\", \"webgl_enable_OES_vertex_array_object\", \"webgl_enable_WEBGL_draw_buffers\", \"webgl_enable_WEBGL_multi_draw\", \"emscriptenWebGLGet\", \"computeUnpackAlignedImageSize\", \"colorChannelsInGlTextureFormat\", \"emscriptenWebGLGetTexPixelData\", \"__glGenObject\", \"emscriptenWebGLGetUniform\", \"webglGetUniformLocation\", \"webglPrepareUniformLocationsBeforeFirstUse\", \"webglGetLeftBracePos\", \"emscriptenWebGLGetVertexAttrib\", \"__glGetActiveAttribOrUniform\", \"writeGLArray\", \"registerWebGlEventCallback\", \"runAndAbortIfError\", \"SDL_unicode\", \"SDL_ttfContext\", \"SDL_audio\", \"GLFW_Window\", \"ALLOC_NORMAL\", \"ALLOC_STACK\", \"allocate\", \"writeStringToMemory\", \"writeAsciiToMemory\" ];\n\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\n\nvar unexportedSymbols = [ \"run\", \"addOnPreRun\", \"addOnInit\", \"addOnPreMain\", \"addOnExit\", \"addOnPostRun\", \"addRunDependency\", \"removeRunDependency\", \"FS_createFolder\", \"FS_createPath\", \"FS_createDataFile\", \"FS_createLazyFile\", \"FS_createLink\", \"FS_createDevice\", \"FS_unlink\", \"out\", \"err\", \"callMain\", \"abort\", \"keepRuntimeAlive\", \"wasmMemory\", \"getTempRet0\", \"setTempRet0\", \"writeStackCookie\", \"checkStackCookie\", \"ptrToString\", \"zeroMemory\", \"exitJS\", \"getHeapMax\", \"emscripten_realloc_buffer\", \"ENV\", \"MONTH_DAYS_REGULAR\", \"MONTH_DAYS_LEAP\", \"MONTH_DAYS_REGULAR_CUMULATIVE\", \"MONTH_DAYS_LEAP_CUMULATIVE\", \"isLeapYear\", \"ydayFromDate\", \"arraySum\", \"addDays\", \"ERRNO_CODES\", \"ERRNO_MESSAGES\", \"setErrNo\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"DNS\", \"Protocols\", \"Sockets\", \"initRandomFill\", \"randomFill\", \"timers\", \"warnOnce\", \"UNWIND_CACHE\", \"readEmAsmArgsArray\", \"jstoi_q\", \"getExecutableName\", \"handleException\", \"readI53FromI64\", \"convertI32PairToI53Checked\", \"getCFunc\", \"freeTableIndexes\", \"functionsInTableMap\", \"setValue\", \"getValue\", \"PATH\", \"PATH_FS\", \"UTF8Decoder\", \"UTF8ArrayToString\", \"UTF8ToString\", \"stringToUTF8Array\", \"stringToUTF8\", \"lengthBytesUTF8\", \"intArrayFromString\", \"stringToAscii\", \"UTF16Decoder\", \"stringToNewUTF8\", \"stringToUTF8OnStack\", \"writeArrayToMemory\", \"JSEvents\", \"specialHTMLTargets\", \"currentFullscreenStrategy\", \"restoreOldWindowedStyle\", \"ExitStatus\", \"getEnvStrings\", \"flush_NO_FILESYSTEM\", \"dlopenMissingError\", \"promiseMap\", \"getExceptionMessageCommon\", \"getCppExceptionTag\", \"getCppExceptionThrownObjectFromWebAssemblyException\", \"incrementExceptionRefcount\", \"decrementExceptionRefcount\", \"getExceptionMessage\", \"Browser\", \"wget\", \"SYSCALLS\", \"getSocketFromFD\", \"getSocketAddress\", \"tempFixedLengthArray\", \"miniTempWebGLFloatBuffers\", \"miniTempWebGLIntBuffers\", \"GL\", \"emscripten_webgl_power_preferences\", \"AL\", \"GLUT\", \"EGL\", \"GLEW\", \"IDBStore\", \"SDL\", \"SDL_gfx\", \"GLFW\", \"allocateUTF8\", \"allocateUTF8OnStack\", \"SOCKFS\", \"FS\" ];\n\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction callMain() {\n assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\n assert(__ATPRERUN__.length == 0, \"cannot call main when preRun functions remain to be called\");\n var entryFunction = _main;\n var argc = 0;\n var argv = 0;\n try {\n  var ret = entryFunction(argc, argv);\n  exitJS(ret, true);\n  return ret;\n } catch (e) {\n  return handleException(e);\n }\n}\n\nfunction stackCheckInit() {\n _emscripten_stack_init();\n writeStackCookie();\n}\n\nfunction run() {\n if (runDependencies > 0) {\n  return;\n }\n stackCheckInit();\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  preMain();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  if (shouldRunNow) callMain();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n var oldOut = out;\n var oldErr = err;\n var has = false;\n out = err = x => {\n  has = true;\n };\n try {\n  flush_NO_FILESYSTEM();\n } catch (e) {}\n out = oldOut;\n err = oldErr;\n if (has) {\n  warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.\");\n  warnOnce(\"(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)\");\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nvar shouldRunNow = true;\n\nif (Module[\"noInitialRun\"]) shouldRunNow = false;\n\nrun();\n\n\n  return DuckDB.ready\n}\n\n);\n})();\nexport default DuckDB;", "import DuckDBWasm from './duckdb-eh.js';\r\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\r\nimport { DuckDBModule } from './duckdb_module';\r\nimport { DuckDBRuntime } from './runtime';\r\nimport { Logger } from '../log';\r\n\r\n/** DuckDB bindings for the browser */\r\nexport class DuckDB extends DuckDBBrowserBindings {\r\n    /** Constructor */\r\n    public constructor(\r\n        logger: Logger,\r\n        runtime: DuckDBRuntime,\r\n        mainModuleURL: string,\r\n        pthreadWorkerURL: string | null = null,\r\n    ) {\r\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\r\n    }\r\n\r\n    /** Instantiate the bindings */\r\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\r\n        return DuckDBWasm({\r\n            ...moduleOverrides,\r\n            instantiateWasm: this.instantiateWasm.bind(this),\r\n            locateFile: this.locateFile.bind(this),\r\n        });\r\n    }\r\n}\r\n\r\nexport default DuckDB;\r\n", "export * from '../bindings';\r\nexport * from '../log';\r\nexport * from '../platform';\r\nexport * from '../status';\r\nexport * from '../version';\r\nexport { DuckDBDataProtocol } from '../bindings/runtime';\r\nexport { DEFAULT_RUNTIME } from '../bindings/runtime';\r\nexport { BROWSER_RUNTIME } from '../bindings/runtime_browser';\r\n\r\nimport { Logger } from '../log';\r\nimport { DuckDBRuntime, DuckDBBindings } from '../bindings';\r\nimport { DuckDBBundles, getPlatformFeatures } from '../platform';\r\nimport { DuckDB as DuckDBMVP } from '../bindings/bindings_browser_mvp';\r\nimport { DuckDB as DuckDBNext } from '../bindings/bindings_browser_eh';\r\n\r\nexport async function createDuckDB(\r\n    bundles: DuckDBBundles,\r\n    logger: Logger,\r\n    runtime: DuckDBRuntime,\r\n): Promise<DuckDBBindings> {\r\n    const platform = await getPlatformFeatures();\r\n    if (platform.wasmExceptions) {\r\n        if (bundles.eh) {\r\n            return new DuckDBNext(logger, runtime, bundles.eh!.mainModule);\r\n        }\r\n    }\r\n    return new DuckDBMVP(logger, runtime, bundles.mvp.mainModule);\r\n}\r\n", "import * as arrow from 'apache-arrow';\r\nimport { AsyncDuckDB } from './async_bindings';\r\nimport { LogLevel, LogTopic, LogOrigin, LogEvent } from '../log';\r\nimport { ArrowInsertOptions, CSVInsertOptions, JSONInsertOptions } from '../bindings/insert_options';\r\n\r\n/** A thin helper to memoize the connection id */\r\nexport class AsyncDuckDBConnection {\r\n    /** The async duckdb */\r\n    protected readonly _bindings: AsyncDuckDB;\r\n    /** The conn handle */\r\n    protected readonly _conn: number;\r\n\r\n    constructor(bindings: AsyncDuckDB, conn: number) {\r\n        this._bindings = bindings;\r\n        this._conn = conn;\r\n    }\r\n\r\n    /** Access the database bindings */\r\n    public get bindings(): AsyncDuckDB {\r\n        return this._bindings;\r\n    }\r\n\r\n    /** Disconnect from the database */\r\n    public async close(): Promise<void> {\r\n        return this._bindings.disconnect(this._conn);\r\n    }\r\n\r\n    /** Brave souls may use this function to consume the underlying connection id */\r\n    public useUnsafe<R>(callback: (bindings: AsyncDuckDB, conn: number) => R) {\r\n        return callback(this._bindings, this._conn);\r\n    }\r\n\r\n    /** Run a query */\r\n    public async query<T extends { [key: string]: arrow.DataType } = any>(text: string): Promise<arrow.Table<T>> {\r\n        this._bindings.logger.log({\r\n            timestamp: new Date(),\r\n            level: LogLevel.INFO,\r\n            origin: LogOrigin.ASYNC_DUCKDB,\r\n            topic: LogTopic.QUERY,\r\n            event: LogEvent.RUN,\r\n            value: text,\r\n        });\r\n        const buffer = await this._bindings.runQuery(this._conn, text);\r\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\r\n        console.assert(reader.isSync(), \"Reader is not sync\");\r\n        console.assert(reader.isFile(), \"Reader is not file\");\r\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\r\n    }\r\n\r\n    /** Send a query */\r\n    public async send<T extends { [key: string]: arrow.DataType } = any>(\r\n        text: string,\r\n    ): Promise<arrow.AsyncRecordBatchStreamReader<T>> {\r\n        this._bindings.logger.log({\r\n            timestamp: new Date(),\r\n            level: LogLevel.INFO,\r\n            origin: LogOrigin.ASYNC_DUCKDB,\r\n            topic: LogTopic.QUERY,\r\n            event: LogEvent.RUN,\r\n            value: text,\r\n        });\r\n        let header = await this._bindings.startPendingQuery(this._conn, text);\r\n        while (header == null) {\r\n            header = await this._bindings.pollPendingQuery(this._conn);\r\n        }\r\n        const iter = new AsyncResultStreamIterator(this._bindings, this._conn, header);\r\n        const reader = await arrow.RecordBatchReader.from<T>(iter);\r\n        console.assert(reader.isAsync());\r\n        console.assert(reader.isStream());\r\n        return reader as unknown as arrow.AsyncRecordBatchStreamReader<T>; // XXX\r\n    }\r\n\r\n    /** Cancel a query that was sent earlier */\r\n    public async cancelSent(): Promise<boolean> {\r\n        return await this._bindings.cancelPendingQuery(this._conn);\r\n    }\r\n\r\n    /** Get table names */\r\n    public async getTableNames(query: string): Promise<string[]> {\r\n        return await this._bindings.getTableNames(this._conn, query);\r\n    }\r\n\r\n    /** Create a prepared statement */\r\n    public async prepare<T extends { [key: string]: arrow.DataType } = any>(\r\n        text: string,\r\n    ): Promise<AsyncPreparedStatement> {\r\n        const stmt = await this._bindings.createPrepared(this._conn, text);\r\n        return new AsyncPreparedStatement<T>(this._bindings, this._conn, stmt);\r\n    }\r\n\r\n    /** Insert an arrow table */\r\n    public async insertArrowTable(table: arrow.Table, options: ArrowInsertOptions): Promise<void> {\r\n        const buffer = arrow.tableToIPC(table, 'stream');\r\n        await this.insertArrowFromIPCStream(buffer, options);\r\n    }\r\n    /** Insert an arrow table from an ipc stream */\r\n    public async insertArrowFromIPCStream(buffer: Uint8Array, options: ArrowInsertOptions): Promise<void> {\r\n        await this._bindings.insertArrowFromIPCStream(this._conn, buffer, options);\r\n    }\r\n    /** Insert csv file from path */\r\n    public async insertCSVFromPath(text: string, options: CSVInsertOptions): Promise<void> {\r\n        await this._bindings.insertCSVFromPath(this._conn, text, options);\r\n    }\r\n    /** Insert json file from path */\r\n    public async insertJSONFromPath(text: string, options: JSONInsertOptions): Promise<void> {\r\n        await this._bindings.insertJSONFromPath(this._conn, text, options);\r\n    }\r\n}\r\n\r\n/** An async result stream iterator */\r\nexport class AsyncResultStreamIterator implements AsyncIterable<Uint8Array> {\r\n    /** First chunk? */\r\n    protected _first: boolean;\r\n    /** Reached end of stream? */\r\n    protected _depleted: boolean;\r\n    /** In-flight */\r\n    protected _inFlight: Promise<Uint8Array> | null;\r\n\r\n    constructor(\r\n        protected readonly db: AsyncDuckDB,\r\n        protected readonly conn: number,\r\n        protected readonly header: Uint8Array,\r\n    ) {\r\n        this._first = true;\r\n        this._depleted = false;\r\n        this._inFlight = null;\r\n    }\r\n\r\n    async next(): Promise<IteratorResult<Uint8Array>> {\r\n        if (this._first) {\r\n            this._first = false;\r\n            return { done: false, value: this.header };\r\n        }\r\n        if (this._depleted) {\r\n            return { done: true, value: null };\r\n        }\r\n        let buffer: Uint8Array;\r\n        if (this._inFlight != null) {\r\n            buffer = await this._inFlight;\r\n            this._inFlight = null;\r\n        } else {\r\n            buffer = await this.db.fetchQueryResults(this.conn);\r\n        }\r\n        this._depleted = buffer.length == 0;\r\n        if (!this._depleted) {\r\n            this._inFlight = this.db.fetchQueryResults(this.conn);\r\n        }\r\n        return {\r\n            done: this._depleted,\r\n            value: buffer,\r\n        };\r\n    }\r\n\r\n    [Symbol.asyncIterator]() {\r\n        return this;\r\n    }\r\n}\r\n\r\n/** A thin helper to bind the prepared statement id */\r\nexport class AsyncPreparedStatement<T extends { [key: string]: arrow.DataType } = any> {\r\n    /** The bindings */\r\n    protected readonly bindings: AsyncDuckDB;\r\n    /** The connection id */\r\n    protected readonly connectionId: number;\r\n    /** The statement id */\r\n    protected readonly statementId: number;\r\n\r\n    /** Constructor */\r\n    constructor(bindings: AsyncDuckDB, connectionId: number, statementId: number) {\r\n        this.bindings = bindings;\r\n        this.connectionId = connectionId;\r\n        this.statementId = statementId;\r\n    }\r\n\r\n    /** Close a prepared statement */\r\n    public async close() {\r\n        await this.bindings.closePrepared(this.connectionId, this.statementId);\r\n    }\r\n\r\n    /** Run a prepared statement */\r\n    public async query(...params: any[]): Promise<arrow.Table<T>> {\r\n        const buffer = await this.bindings.runPrepared(this.connectionId, this.statementId, params);\r\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\r\n        console.assert(reader.isSync());\r\n        console.assert(reader.isFile());\r\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\r\n    }\r\n\r\n    /** Send a prepared statement */\r\n    public async send(...params: any[]): Promise<arrow.AsyncRecordBatchStreamReader<T>> {\r\n        const header = await this.bindings.sendPrepared(this.connectionId, this.statementId, params);\r\n        const iter = new AsyncResultStreamIterator(this.bindings, this.connectionId, header);\r\n        const reader = await arrow.RecordBatchReader.from<T>(iter);\r\n        console.assert(reader.isAsync());\r\n        console.assert(reader.isStream());\r\n        return reader as unknown as arrow.AsyncRecordBatchStreamReader<T>; // XXX\r\n    }\r\n}\r\n", "import { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from '../bindings/insert_options';\r\nimport { LogEntryVariant } from '../log';\r\nimport { ScriptTokens } from '../bindings/tokens';\r\nimport { FileStatistics } from '../bindings/file_stats';\r\nimport { DuckDBConfig } from '../bindings/config';\r\nimport { WebFile } from '../bindings/web_file';\r\nimport { InstantiationProgress } from '../bindings/progress';\r\nimport { DuckDBDataProtocol } from '../bindings';\r\n\r\nexport type ConnectionID = number;\r\nexport type StatementID = number;\r\n\r\nexport enum WorkerRequestType {\r\n    CANCEL_PENDING_QUERY = 'CANCEL_PENDING_QUERY',\r\n    CLOSE_PREPARED = 'CLOSE_PREPARED',\r\n    COLLECT_FILE_STATISTICS = 'COLLECT_FILE_STATISTICS',\r\n    CONNECT = 'CONNECT',\r\n    COPY_FILE_TO_BUFFER = 'COPY_FILE_TO_BUFFER',\r\n    COPY_FILE_TO_PATH = 'COPY_FILE_TO_PATH',\r\n    CREATE_PREPARED = 'CREATE_PREPARED',\r\n    DISCONNECT = 'DISCONNECT',\r\n    DROP_FILE = 'DROP_FILE',\r\n    DROP_FILES = 'DROP_FILES',\r\n    EXPORT_FILE_STATISTICS = 'EXPORT_FILE_STATISTICS',\r\n    FETCH_QUERY_RESULTS = 'FETCH_QUERY_RESULTS',\r\n    FLUSH_FILES = 'FLUSH_FILES',\r\n    GET_FEATURE_FLAGS = 'GET_FEATURE_FLAGS',\r\n    GET_TABLE_NAMES = 'GET_TABLE_NAMES',\r\n    GET_VERSION = 'GET_VERSION',\r\n    GLOB_FILE_INFOS = 'GLOB_FILE_INFOS',\r\n    INSERT_ARROW_FROM_IPC_STREAM = 'INSERT_ARROW_FROM_IPC_STREAM',\r\n    INSERT_CSV_FROM_PATH = 'IMPORT_CSV_FROM_PATH',\r\n    INSERT_JSON_FROM_PATH = 'IMPORT_JSON_FROM_PATH',\r\n    INSTANTIATE = 'INSTANTIATE',\r\n    OPEN = 'OPEN',\r\n    PING = 'PING',\r\n    POLL_PENDING_QUERY = 'POLL_PENDING_QUERY',\r\n    REGISTER_FILE_BUFFER = 'REGISTER_FILE_BUFFER',\r\n    REGISTER_FILE_HANDLE = 'REGISTER_FILE_HANDLE',\r\n    REGISTER_FILE_URL = 'REGISTER_FILE_URL',\r\n    RESET = 'RESET',\r\n    RUN_PREPARED = 'RUN_PREPARED',\r\n    RUN_QUERY = 'RUN_QUERY',\r\n    SEND_PREPARED = 'SEND_PREPARED',\r\n    START_PENDING_QUERY = 'START_PENDING_QUERY',\r\n    TOKENIZE = 'TOKENIZE',\r\n}\r\n\r\nexport enum WorkerResponseType {\r\n    CONNECTION_INFO = 'CONNECTION_INFO',\r\n    ERROR = 'ERROR',\r\n    FEATURE_FLAGS = 'FEATURE_FLAGS',\r\n    FILE_BUFFER = 'FILE_BUFFER',\r\n    FILE_INFOS = 'FILE_INFOS',\r\n    FILE_SIZE = 'FILE_SIZE',\r\n    FILE_STATISTICS = 'FILE_STATISTICS',\r\n    INSTANTIATE_PROGRESS = 'INSTANTIATE_PROGRESS',\r\n    LOG = 'LOG',\r\n    OK = 'OK',\r\n    PREPARED_STATEMENT_ID = 'PREPARED_STATEMENT_ID',\r\n    QUERY_PLAN = 'QUERY_PLAN',\r\n    QUERY_RESULT = 'QUERY_RESULT',\r\n    QUERY_RESULT_CHUNK = 'QUERY_RESULT_CHUNK',\r\n    QUERY_RESULT_HEADER = 'QUERY_RESULT_HEADER',\r\n    QUERY_RESULT_HEADER_OR_NULL = 'QUERY_RESULT_HEADER_OR_NULL',\r\n    REGISTERED_FILE = 'REGISTERED_FILE',\r\n    SCRIPT_TOKENS = 'SCRIPT_TOKENS',\r\n    SUCCESS = 'SUCCESS',\r\n    TABLE_NAMES = 'TABLE_NAMES',\r\n    VERSION_STRING = 'VERSION_STRING',\r\n}\r\n\r\nexport type WorkerRequest<T, P> = {\r\n    readonly messageId: number;\r\n    readonly type: T;\r\n    readonly data: P;\r\n};\r\n\r\nexport type WorkerResponse<T, P> = {\r\n    readonly messageId: number;\r\n    readonly requestId: number;\r\n    readonly type: T;\r\n    readonly data: P;\r\n};\r\n\r\nexport type WorkerTaskReturnType<T extends WorkerTaskVariant> = T extends WorkerTask<any, any, infer P> ? P : never;\r\n\r\nexport class WorkerTask<T, D, P> {\r\n    readonly type: T;\r\n    readonly data: D;\r\n    promise: Promise<P>;\r\n    promiseResolver: (value: P | PromiseLike<P>) => void = () => {};\r\n    promiseRejecter: (value: any) => void = () => {};\r\n\r\n    constructor(type: T, data: D) {\r\n        this.type = type;\r\n        this.data = data;\r\n        this.promise = new Promise<P>(\r\n            (resolve: (value: P | PromiseLike<P>) => void, reject: (reason?: void) => void) => {\r\n                this.promiseResolver = resolve;\r\n                this.promiseRejecter = reject;\r\n            },\r\n        );\r\n    }\r\n}\r\n\r\nexport type WorkerRequestVariant =\r\n    | WorkerRequest<WorkerRequestType.CLOSE_PREPARED, [ConnectionID, StatementID]>\r\n    | WorkerRequest<WorkerRequestType.CANCEL_PENDING_QUERY, number>\r\n    | WorkerRequest<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean]>\r\n    | WorkerRequest<WorkerRequestType.CONNECT, null>\r\n    | WorkerRequest<WorkerRequestType.COPY_FILE_TO_BUFFER, string>\r\n    | WorkerRequest<WorkerRequestType.COPY_FILE_TO_PATH, [string, string]>\r\n    | WorkerRequest<WorkerRequestType.CREATE_PREPARED, [ConnectionID, string]>\r\n    | WorkerRequest<WorkerRequestType.DISCONNECT, number>\r\n    | WorkerRequest<WorkerRequestType.DROP_FILE, string>\r\n    | WorkerRequest<WorkerRequestType.DROP_FILES, null>\r\n    | WorkerRequest<WorkerRequestType.EXPORT_FILE_STATISTICS, string>\r\n    | WorkerRequest<WorkerRequestType.FETCH_QUERY_RESULTS, number>\r\n    | WorkerRequest<WorkerRequestType.FLUSH_FILES, null>\r\n    | WorkerRequest<WorkerRequestType.GET_FEATURE_FLAGS, null>\r\n    | WorkerRequest<WorkerRequestType.GET_TABLE_NAMES, [number, string]>\r\n    | WorkerRequest<WorkerRequestType.GET_VERSION, null>\r\n    | WorkerRequest<WorkerRequestType.GLOB_FILE_INFOS, string>\r\n    | WorkerRequest<\r\n          WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\r\n          [number, Uint8Array, ArrowInsertOptions | undefined]\r\n      >\r\n    | WorkerRequest<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions]>\r\n    | WorkerRequest<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions]>\r\n    | WorkerRequest<WorkerRequestType.INSTANTIATE, [string, string | null]>\r\n    | WorkerRequest<WorkerRequestType.OPEN, DuckDBConfig>\r\n    | WorkerRequest<WorkerRequestType.PING, null>\r\n    | WorkerRequest<WorkerRequestType.POLL_PENDING_QUERY, number>\r\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array]>\r\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_HANDLE, [string, any, DuckDBDataProtocol, boolean]>\r\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_URL, [string, string, DuckDBDataProtocol, boolean]>\r\n    | WorkerRequest<WorkerRequestType.RESET, null>\r\n    | WorkerRequest<WorkerRequestType.RUN_PREPARED, [number, number, any[]]>\r\n    | WorkerRequest<WorkerRequestType.RUN_QUERY, [number, string]>\r\n    | WorkerRequest<WorkerRequestType.SEND_PREPARED, [number, number, any[]]>\r\n    | WorkerRequest<WorkerRequestType.START_PENDING_QUERY, [number, string]>\r\n    | WorkerRequest<WorkerRequestType.TOKENIZE, string>;\r\n\r\nexport type WorkerResponseVariant =\r\n    | WorkerResponse<WorkerResponseType.CONNECTION_INFO, number>\r\n    | WorkerResponse<WorkerResponseType.ERROR, any>\r\n    | WorkerResponse<WorkerResponseType.FEATURE_FLAGS, number>\r\n    | WorkerResponse<WorkerResponseType.FILE_BUFFER, Uint8Array>\r\n    | WorkerResponse<WorkerResponseType.FILE_INFOS, WebFile[]>\r\n    | WorkerResponse<WorkerResponseType.FILE_SIZE, number>\r\n    | WorkerResponse<WorkerResponseType.FILE_STATISTICS, FileStatistics>\r\n    | WorkerResponse<WorkerResponseType.INSTANTIATE_PROGRESS, InstantiationProgress>\r\n    | WorkerResponse<WorkerResponseType.LOG, LogEntryVariant>\r\n    | WorkerResponse<WorkerResponseType.OK, null>\r\n    | WorkerResponse<WorkerResponseType.PREPARED_STATEMENT_ID, number>\r\n    | WorkerResponse<WorkerResponseType.QUERY_PLAN, Uint8Array>\r\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT, Uint8Array>\r\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT_CHUNK, Uint8Array>\r\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT_HEADER, Uint8Array>\r\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT_HEADER_OR_NULL, Uint8Array | null>\r\n    | WorkerResponse<WorkerResponseType.SCRIPT_TOKENS, ScriptTokens>\r\n    | WorkerResponse<WorkerResponseType.SUCCESS, boolean>\r\n    | WorkerResponse<WorkerResponseType.TABLE_NAMES, string[]>\r\n    | WorkerResponse<WorkerResponseType.VERSION_STRING, string>;\r\n\r\nexport type WorkerTaskVariant =\r\n    | WorkerTask<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean], null>\r\n    | WorkerTask<WorkerRequestType.CLOSE_PREPARED, [number, number], null>\r\n    | WorkerTask<WorkerRequestType.CONNECT, null, ConnectionID>\r\n    | WorkerTask<WorkerRequestType.COPY_FILE_TO_BUFFER, string, Uint8Array>\r\n    | WorkerTask<WorkerRequestType.COPY_FILE_TO_PATH, [string, string], null>\r\n    | WorkerTask<WorkerRequestType.CREATE_PREPARED, [number, string], number>\r\n    | WorkerTask<WorkerRequestType.DISCONNECT, ConnectionID, null>\r\n    | WorkerTask<WorkerRequestType.DROP_FILE, string, null>\r\n    | WorkerTask<WorkerRequestType.DROP_FILES, null, null>\r\n    | WorkerTask<WorkerRequestType.EXPORT_FILE_STATISTICS, string, FileStatistics>\r\n    | WorkerTask<WorkerRequestType.FETCH_QUERY_RESULTS, ConnectionID, Uint8Array>\r\n    | WorkerTask<WorkerRequestType.FLUSH_FILES, null, null>\r\n    | WorkerTask<WorkerRequestType.GET_FEATURE_FLAGS, null, number>\r\n    | WorkerTask<WorkerRequestType.GET_TABLE_NAMES, [number, string], string[]>\r\n    | WorkerTask<WorkerRequestType.GET_VERSION, null, string>\r\n    | WorkerTask<\r\n          WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\r\n          [number, Uint8Array, ArrowInsertOptions | undefined],\r\n          null\r\n      >\r\n    | WorkerTask<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions], null>\r\n    | WorkerTask<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions], null>\r\n    | WorkerTask<WorkerRequestType.INSTANTIATE, [string, string | null], null>\r\n    | WorkerTask<WorkerRequestType.OPEN, DuckDBConfig, null>\r\n    | WorkerTask<WorkerRequestType.PING, null, null>\r\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>\r\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_HANDLE, [string, any, DuckDBDataProtocol, boolean], null>\r\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_URL, [string, string, DuckDBDataProtocol, boolean], null>\r\n    | WorkerTask<WorkerRequestType.GLOB_FILE_INFOS, string, WebFile[]>\r\n    | WorkerTask<WorkerRequestType.RESET, null, null>\r\n    | WorkerTask<WorkerRequestType.RUN_PREPARED, [number, number, any[]], Uint8Array>\r\n    | WorkerTask<WorkerRequestType.RUN_QUERY, [ConnectionID, string], Uint8Array>\r\n    | WorkerTask<WorkerRequestType.SEND_PREPARED, [number, number, any[]], Uint8Array>\r\n    | WorkerTask<WorkerRequestType.START_PENDING_QUERY, [ConnectionID, string], Uint8Array | null>\r\n    | WorkerTask<WorkerRequestType.POLL_PENDING_QUERY, ConnectionID, Uint8Array | null>\r\n    | WorkerTask<WorkerRequestType.CANCEL_PENDING_QUERY, ConnectionID, boolean>\r\n    | WorkerTask<WorkerRequestType.TOKENIZE, string, ScriptTokens>;\r\n", "import {\r\n    WorkerRequestType,\r\n    WorkerResponseType,\r\n    WorkerResponseVariant,\r\n    WorkerTaskVariant,\r\n    WorkerTask,\r\n    ConnectionID,\r\n    WorkerTaskReturnType,\r\n} from './worker_request';\r\nimport { AsyncDuckDBBindings } from './async_bindings_interface';\r\nimport { Logger } from '../log';\r\nimport { AsyncDuckDBConnection } from './async_connection';\r\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from '../bindings/insert_options';\r\nimport { ScriptTokens } from '../bindings/tokens';\r\nimport { FileStatistics } from '../bindings/file_stats';\r\nimport { DuckDBConfig } from '../bindings/config';\r\nimport { InstantiationProgress } from '../bindings/progress';\r\nimport { arrowToSQLField } from '../json_typedef';\r\nimport { WebFile } from '../bindings/web_file';\r\nimport { DuckDBDataProtocol } from '../bindings';\r\n\r\nconst TEXT_ENCODER = new TextEncoder();\r\n\r\nexport class AsyncDuckDB implements AsyncDuckDBBindings {\r\n    /** The message handler */\r\n    protected readonly _onMessageHandler: (event: MessageEvent) => void;\r\n    /** The error handler */\r\n    protected readonly _onErrorHandler: (event: ErrorEvent) => void;\r\n    /** The close handler */\r\n    protected readonly _onCloseHandler: () => void;\r\n\r\n    /** Instantiate the module */\r\n    protected _onInstantiationProgress: ((p: InstantiationProgress) => void)[] = [];\r\n\r\n    /** The logger */\r\n    protected readonly _logger: Logger;\r\n    /** The worker */\r\n    protected _worker: Worker | null = null;\r\n    /** The promise for the worker shutdown */\r\n    protected _workerShutdownPromise: Promise<null> | null = null;\r\n    /** Make the worker as terminated */\r\n    protected _workerShutdownResolver: (value: PromiseLike<null> | null) => void = () => {};\r\n\r\n    /** The next message id */\r\n    protected _nextMessageId = 0;\r\n    /** The pending requests */\r\n    protected _pendingRequests: Map<number, WorkerTaskVariant> = new Map();\r\n\r\n    constructor(logger: Logger, worker: Worker | null = null) {\r\n        this._logger = logger;\r\n        this._onMessageHandler = this.onMessage.bind(this);\r\n        this._onErrorHandler = this.onError.bind(this);\r\n        this._onCloseHandler = this.onClose.bind(this);\r\n        if (worker != null) this.attach(worker);\r\n    }\r\n\r\n    /** Get the logger */\r\n    public get logger(): Logger {\r\n        return this._logger;\r\n    }\r\n\r\n    /** Attach to worker */\r\n    protected attach(worker: Worker): void {\r\n        this._worker = worker;\r\n        this._worker.addEventListener('message', this._onMessageHandler);\r\n        this._worker.addEventListener('error', this._onErrorHandler);\r\n        this._worker.addEventListener('close', this._onCloseHandler);\r\n        this._workerShutdownPromise = new Promise<null>(\r\n            (resolve: (value: PromiseLike<null> | null) => void, _reject: (reason?: void) => void) => {\r\n                this._workerShutdownResolver = resolve;\r\n            },\r\n        );\r\n    }\r\n\r\n    /** Detach from worker */\r\n    public detach(): void {\r\n        if (!this._worker) return;\r\n        this._worker.removeEventListener('message', this._onMessageHandler);\r\n        this._worker.removeEventListener('error', this._onErrorHandler);\r\n        this._worker.removeEventListener('close', this._onCloseHandler);\r\n        this._worker = null;\r\n        this._workerShutdownResolver(null);\r\n        this._workerShutdownPromise = null;\r\n        this._workerShutdownResolver = () => {};\r\n    }\r\n\r\n    /** Kill the worker */\r\n    public async terminate(): Promise<void> {\r\n        if (!this._worker) return;\r\n        this._worker.terminate();\r\n        //await this._workerShutdownPromise; TODO deadlocking in karma?\r\n        this._worker = null;\r\n        this._workerShutdownPromise = null;\r\n        this._workerShutdownResolver = () => {};\r\n    }\r\n\r\n    /** Post a task */\r\n    protected async postTask<W extends WorkerTaskVariant>(\r\n        task: W,\r\n        transfer: ArrayBuffer[] = [],\r\n    ): Promise<WorkerTaskReturnType<W>> {\r\n        if (!this._worker) {\r\n            console.error('cannot send a message since the worker is not set!');\r\n            return undefined as any;\r\n        }\r\n        const mid = this._nextMessageId++;\r\n        this._pendingRequests.set(mid, task);\r\n        this._worker.postMessage(\r\n            {\r\n                messageId: mid,\r\n                type: task.type,\r\n                data: task.data,\r\n            },\r\n            transfer,\r\n        );\r\n        return (await task.promise) as WorkerTaskReturnType<W>;\r\n    }\r\n\r\n    /** Received a message */\r\n    protected onMessage(event: MessageEvent): void {\r\n        // Unassociated responses?\r\n        const response = event.data as WorkerResponseVariant;\r\n        switch (response.type) {\r\n            // Request failed?\r\n            case WorkerResponseType.LOG: {\r\n                this._logger.log(response.data);\r\n                return;\r\n            }\r\n            // Call progress callback\r\n            case WorkerResponseType.INSTANTIATE_PROGRESS: {\r\n                for (const p of this._onInstantiationProgress) {\r\n                    p(response.data);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Get associated task\r\n        const task = this._pendingRequests.get(response.requestId);\r\n        if (!task) {\r\n            console.warn(`unassociated response: [${response.requestId}, ${response.type.toString()}]`);\r\n            return;\r\n        }\r\n        this._pendingRequests.delete(response.requestId);\r\n\r\n        // Request failed?\r\n        if (response.type == WorkerResponseType.ERROR) {\r\n            // Workaround for Firefox not being able to perform structured-clone on Native Errors\r\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\r\n            const e = new Error(response.data.message);\r\n            e.name = response.data.name;\r\n            e.stack = response.data.stack;\r\n            task.promiseRejecter(e);\r\n            return;\r\n        }\r\n\r\n        // Otherwise differentiate between the tasks first\r\n        switch (task.type) {\r\n            case WorkerRequestType.CLOSE_PREPARED:\r\n            case WorkerRequestType.COLLECT_FILE_STATISTICS:\r\n            case WorkerRequestType.COPY_FILE_TO_PATH:\r\n            case WorkerRequestType.DISCONNECT:\r\n            case WorkerRequestType.DROP_FILE:\r\n            case WorkerRequestType.DROP_FILES:\r\n            case WorkerRequestType.FLUSH_FILES:\r\n            case WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM:\r\n            case WorkerRequestType.INSERT_CSV_FROM_PATH:\r\n            case WorkerRequestType.INSERT_JSON_FROM_PATH:\r\n            case WorkerRequestType.OPEN:\r\n            case WorkerRequestType.PING:\r\n            case WorkerRequestType.REGISTER_FILE_BUFFER:\r\n            case WorkerRequestType.REGISTER_FILE_HANDLE:\r\n            case WorkerRequestType.REGISTER_FILE_URL:\r\n            case WorkerRequestType.RESET:\r\n                if (response.type == WorkerResponseType.OK) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.INSTANTIATE:\r\n                this._onInstantiationProgress = [];\r\n                if (response.type == WorkerResponseType.OK) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.GLOB_FILE_INFOS:\r\n                if (response.type == WorkerResponseType.FILE_INFOS) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.GET_VERSION:\r\n                if (response.type == WorkerResponseType.VERSION_STRING) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.GET_FEATURE_FLAGS:\r\n                if (response.type == WorkerResponseType.FEATURE_FLAGS) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.GET_TABLE_NAMES:\r\n                if (response.type == WorkerResponseType.TABLE_NAMES) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.TOKENIZE:\r\n                if (response.type == WorkerResponseType.SCRIPT_TOKENS) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.COPY_FILE_TO_BUFFER:\r\n                if (response.type == WorkerResponseType.FILE_BUFFER) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.EXPORT_FILE_STATISTICS:\r\n                if (response.type == WorkerResponseType.FILE_STATISTICS) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.CONNECT:\r\n                if (response.type == WorkerResponseType.CONNECTION_INFO) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.RUN_PREPARED:\r\n            case WorkerRequestType.RUN_QUERY:\r\n                if (response.type == WorkerResponseType.QUERY_RESULT) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.SEND_PREPARED:\r\n                if (response.type == WorkerResponseType.QUERY_RESULT_HEADER) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.START_PENDING_QUERY:\r\n                if (response.type == WorkerResponseType.QUERY_RESULT_HEADER_OR_NULL) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.POLL_PENDING_QUERY:\r\n                if (response.type == WorkerResponseType.QUERY_RESULT_HEADER_OR_NULL) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.CANCEL_PENDING_QUERY:\r\n                this._onInstantiationProgress = [];\r\n                if (response.type == WorkerResponseType.SUCCESS) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.FETCH_QUERY_RESULTS:\r\n                if (response.type == WorkerResponseType.QUERY_RESULT_CHUNK) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n            case WorkerRequestType.CREATE_PREPARED:\r\n                if (response.type == WorkerResponseType.PREPARED_STATEMENT_ID) {\r\n                    task.promiseResolver(response.data);\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        task.promiseRejecter(new Error(`unexpected response type: ${response.type.toString()}`));\r\n    }\r\n\r\n    /** Received an error */\r\n    protected onError(event: ErrorEvent): void {\r\n        console.error(event);\r\n        console.error(`error in duckdb worker: ${event.message}`);\r\n        this._pendingRequests.clear();\r\n    }\r\n\r\n    /** The worker was closed */\r\n    protected onClose(): void {\r\n        this._workerShutdownResolver(null);\r\n        if (this._pendingRequests.size != 0) {\r\n            console.warn(`worker terminated with ${this._pendingRequests.size} pending requests`);\r\n            return;\r\n        }\r\n        this._pendingRequests.clear();\r\n    }\r\n\r\n    /** Reset the duckdb */\r\n    public async reset(): Promise<null> {\r\n        const task = new WorkerTask<WorkerRequestType.RESET, null, null>(WorkerRequestType.RESET, null);\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Ping the worker thread */\r\n    public async ping(): Promise<any> {\r\n        const task = new WorkerTask<WorkerRequestType.PING, null, null>(WorkerRequestType.PING, null);\r\n        await this.postTask(task);\r\n    }\r\n    /** Try to drop a file */\r\n    public async dropFile(name: string): Promise<null> {\r\n        const task = new WorkerTask<WorkerRequestType.DROP_FILE, string, null>(WorkerRequestType.DROP_FILE, name);\r\n        return await this.postTask(task);\r\n    }\r\n    /** Try to drop files */\r\n    public async dropFiles(): Promise<null> {\r\n        const task = new WorkerTask<WorkerRequestType.DROP_FILES, null, null>(WorkerRequestType.DROP_FILES, null);\r\n        return await this.postTask(task);\r\n    }\r\n    /** Flush all files */\r\n    public async flushFiles(): Promise<null> {\r\n        const task = new WorkerTask<WorkerRequestType.FLUSH_FILES, null, null>(WorkerRequestType.FLUSH_FILES, null);\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Open the database */\r\n    public async instantiate(\r\n        mainModuleURL: string,\r\n        pthreadWorkerURL: string | null = null,\r\n        progress: (progress: InstantiationProgress) => void = _p => {},\r\n    ): Promise<null> {\r\n        this._onInstantiationProgress.push(progress);\r\n        const task = new WorkerTask<WorkerRequestType.INSTANTIATE, [string, string | null], null>(\r\n            WorkerRequestType.INSTANTIATE,\r\n            [mainModuleURL, pthreadWorkerURL],\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Get the version */\r\n    public async getVersion(): Promise<string> {\r\n        const task = new WorkerTask<WorkerRequestType.GET_VERSION, null, string>(WorkerRequestType.GET_VERSION, null);\r\n        const version = await this.postTask(task);\r\n        return version;\r\n    }\r\n\r\n    /** Get the feature flags */\r\n    public async getFeatureFlags(): Promise<number> {\r\n        const task = new WorkerTask<WorkerRequestType.GET_FEATURE_FLAGS, null, number>(\r\n            WorkerRequestType.GET_FEATURE_FLAGS,\r\n            null,\r\n        );\r\n        const feature = await this.postTask(task);\r\n        return feature;\r\n    }\r\n\r\n    /** Open a new database */\r\n    public async open(config: DuckDBConfig): Promise<void> {\r\n        const task = new WorkerTask<WorkerRequestType.OPEN, DuckDBConfig, null>(WorkerRequestType.OPEN, config);\r\n        await this.postTask(task);\r\n    }\r\n\r\n    /** Tokenize a script text */\r\n    public async tokenize(text: string): Promise<ScriptTokens> {\r\n        const task = new WorkerTask<WorkerRequestType.TOKENIZE, string, ScriptTokens>(WorkerRequestType.TOKENIZE, text);\r\n        const tokens = await this.postTask(task);\r\n        return tokens;\r\n    }\r\n\r\n    /** Connect to the database */\r\n    public async connectInternal(): Promise<number> {\r\n        const task = new WorkerTask<WorkerRequestType.CONNECT, null, ConnectionID>(WorkerRequestType.CONNECT, null);\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Connect to the database */\r\n    public async connect(): Promise<AsyncDuckDBConnection> {\r\n        const cid = await this.connectInternal();\r\n        return new AsyncDuckDBConnection(this, cid);\r\n    }\r\n\r\n    /** Disconnect from the database */\r\n    public async disconnect(conn: ConnectionID): Promise<void> {\r\n        const task = new WorkerTask<WorkerRequestType.DISCONNECT, ConnectionID, null>(\r\n            WorkerRequestType.DISCONNECT,\r\n            conn,\r\n        );\r\n        await this.postTask(task);\r\n    }\r\n\r\n    /** Run a query */\r\n    public async runQuery(conn: ConnectionID, text: string): Promise<Uint8Array> {\r\n        const task = new WorkerTask<WorkerRequestType.RUN_QUERY, [ConnectionID, string], Uint8Array>(\r\n            WorkerRequestType.RUN_QUERY,\r\n            [conn, text],\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Start a pending query */\r\n    public async startPendingQuery(conn: ConnectionID, text: string): Promise<Uint8Array | null> {\r\n        const task = new WorkerTask<WorkerRequestType.START_PENDING_QUERY, [ConnectionID, string], Uint8Array | null>(\r\n            WorkerRequestType.START_PENDING_QUERY,\r\n            [conn, text],\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n    /** Poll a pending query */\r\n    public async pollPendingQuery(conn: ConnectionID): Promise<Uint8Array | null> {\r\n        const task = new WorkerTask<WorkerRequestType.POLL_PENDING_QUERY, ConnectionID, Uint8Array | null>(\r\n            WorkerRequestType.POLL_PENDING_QUERY,\r\n            conn,\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n    /** Cancel a pending query */\r\n    public async cancelPendingQuery(conn: ConnectionID): Promise<boolean> {\r\n        const task = new WorkerTask<WorkerRequestType.CANCEL_PENDING_QUERY, ConnectionID, boolean>(\r\n            WorkerRequestType.CANCEL_PENDING_QUERY,\r\n            conn,\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Fetch query results */\r\n    public async fetchQueryResults(conn: ConnectionID): Promise<Uint8Array> {\r\n        const task = new WorkerTask<WorkerRequestType.FETCH_QUERY_RESULTS, ConnectionID, Uint8Array>(\r\n            WorkerRequestType.FETCH_QUERY_RESULTS,\r\n            conn,\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Get table names */\r\n    public async getTableNames(conn: number, text: string): Promise<string[]> {\r\n        const task = new WorkerTask<WorkerRequestType.GET_TABLE_NAMES, [number, string], string[]>(\r\n            WorkerRequestType.GET_TABLE_NAMES,\r\n            [conn, text],\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Prepare a statement and return its identifier */\r\n    public async createPrepared(conn: number, text: string): Promise<number> {\r\n        const task = new WorkerTask<WorkerRequestType.CREATE_PREPARED, [number, string], number>(\r\n            WorkerRequestType.CREATE_PREPARED,\r\n            [conn, text],\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n    /** Close a prepared statement */\r\n    public async closePrepared(conn: number, statement: number): Promise<void> {\r\n        const task = new WorkerTask<WorkerRequestType.CLOSE_PREPARED, [number, number], null>(\r\n            WorkerRequestType.CLOSE_PREPARED,\r\n            [conn, statement],\r\n        );\r\n        await this.postTask(task);\r\n    }\r\n    /** Execute a prepared statement and return the full result */\r\n    public async runPrepared(conn: number, statement: number, params: any[]): Promise<Uint8Array> {\r\n        const task = new WorkerTask<WorkerRequestType.RUN_PREPARED, [ConnectionID, number, any[]], Uint8Array>(\r\n            WorkerRequestType.RUN_PREPARED,\r\n            [conn, statement, params],\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n    /** Execute a prepared statement and stream the result */\r\n    public async sendPrepared(conn: number, statement: number, params: any[]): Promise<Uint8Array> {\r\n        const task = new WorkerTask<WorkerRequestType.SEND_PREPARED, [ConnectionID, number, any[]], Uint8Array>(\r\n            WorkerRequestType.SEND_PREPARED,\r\n            [conn, statement, params],\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n    /** Glob file infos */\r\n    public async globFiles(path: string): Promise<WebFile[]> {\r\n        const task = new WorkerTask<WorkerRequestType.GLOB_FILE_INFOS, string, WebFile[]>(\r\n            WorkerRequestType.GLOB_FILE_INFOS,\r\n            path,\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n    /** Register file text */\r\n    public async registerFileText(name: string, text: string): Promise<void> {\r\n        const buffer = TEXT_ENCODER.encode(text);\r\n        await this.registerFileBuffer(name, buffer);\r\n    }\r\n    /** Register a file path. */\r\n    public async registerFileURL(\r\n        name: string,\r\n        url: string,\r\n        proto: DuckDBDataProtocol,\r\n        directIO: boolean,\r\n    ): Promise<void> {\r\n        if (url === undefined) {\r\n            url = name;\r\n        }\r\n        const task = new WorkerTask<\r\n            WorkerRequestType.REGISTER_FILE_URL,\r\n            [string, string, DuckDBDataProtocol, boolean],\r\n            null\r\n        >(WorkerRequestType.REGISTER_FILE_URL, [name, url, proto, directIO]);\r\n        await this.postTask(task);\r\n    }\r\n\r\n    /** Register an empty file buffer. */\r\n    public async registerEmptyFileBuffer(name: string): Promise<void> {\r\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>(\r\n            WorkerRequestType.REGISTER_FILE_BUFFER,\r\n            [name, new Uint8Array()],\r\n        );\r\n        await this.postTask(task);\r\n    }\r\n\r\n    /** Register a file buffer. */\r\n    public async registerFileBuffer(name: string, buffer: Uint8Array): Promise<void> {\r\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>(\r\n            WorkerRequestType.REGISTER_FILE_BUFFER,\r\n            [name, buffer],\r\n        );\r\n        await this.postTask(task, [buffer.buffer]);\r\n    }\r\n\r\n    /** Register a file handle. */\r\n    public async registerFileHandle<HandleType>(\r\n        name: string,\r\n        handle: HandleType,\r\n        protocol: DuckDBDataProtocol,\r\n        directIO: boolean,\r\n    ): Promise<void> {\r\n        const task = new WorkerTask<\r\n            WorkerRequestType.REGISTER_FILE_HANDLE,\r\n            [string, any, DuckDBDataProtocol, boolean],\r\n            null\r\n        >(WorkerRequestType.REGISTER_FILE_HANDLE, [name, handle, protocol, directIO]);\r\n        await this.postTask(task, []);\r\n    }\r\n\r\n    /** Enable file statistics */\r\n    public async collectFileStatistics(name: string, enable: boolean): Promise<void> {\r\n        const task = new WorkerTask<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean], null>(\r\n            WorkerRequestType.COLLECT_FILE_STATISTICS,\r\n            [name, enable],\r\n        );\r\n        await this.postTask(task, []);\r\n    }\r\n\r\n    /** Export file statistics */\r\n    public async exportFileStatistics(name: string): Promise<FileStatistics> {\r\n        const task = new WorkerTask<WorkerRequestType.EXPORT_FILE_STATISTICS, string, FileStatistics>(\r\n            WorkerRequestType.EXPORT_FILE_STATISTICS,\r\n            name,\r\n        );\r\n        return await this.postTask(task, []);\r\n    }\r\n\r\n    /** Copy a file to a buffer. */\r\n    public async copyFileToBuffer(name: string): Promise<Uint8Array> {\r\n        const task = new WorkerTask<WorkerRequestType.COPY_FILE_TO_BUFFER, string, Uint8Array>(\r\n            WorkerRequestType.COPY_FILE_TO_BUFFER,\r\n            name,\r\n        );\r\n        return await this.postTask(task);\r\n    }\r\n\r\n    /** Copy a file to a path. */\r\n    public async copyFileToPath(name: string, path: string): Promise<void> {\r\n        const task = new WorkerTask<WorkerRequestType.COPY_FILE_TO_PATH, [string, string], null>(\r\n            WorkerRequestType.COPY_FILE_TO_PATH,\r\n            [name, path],\r\n        );\r\n        await this.postTask(task);\r\n    }\r\n\r\n    /** Insert arrow from an ipc stream */\r\n    public async insertArrowFromIPCStream(\r\n        conn: ConnectionID,\r\n        buffer: Uint8Array,\r\n        options?: ArrowInsertOptions,\r\n    ): Promise<void> {\r\n        if (buffer.length == 0) return;\r\n        // Pass to the worker\r\n        const task = new WorkerTask<\r\n            WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\r\n            [number, Uint8Array, ArrowInsertOptions | undefined],\r\n            null\r\n        >(WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM, [conn, buffer, options]);\r\n        await this.postTask(task, [buffer.buffer]);\r\n    }\r\n    /** Insert a csv file */\r\n    public async insertCSVFromPath(conn: ConnectionID, path: string, options: CSVInsertOptions): Promise<void> {\r\n        // Flatten the table options\r\n        if (options.columns !== undefined) {\r\n            const out = [];\r\n            for (const k in options.columns) {\r\n                const type = options.columns[k];\r\n                out.push(arrowToSQLField(k, type));\r\n            }\r\n            options.columnsFlat = out;\r\n            delete options.columns;\r\n        }\r\n\r\n        // Pass to the worker\r\n        const task = new WorkerTask<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions], null>(\r\n            WorkerRequestType.INSERT_CSV_FROM_PATH,\r\n            [conn, path, options],\r\n        );\r\n        await this.postTask(task);\r\n    }\r\n    /** Insert a json file */\r\n    public async insertJSONFromPath(conn: ConnectionID, path: string, options: JSONInsertOptions): Promise<void> {\r\n        // Flatten the table options\r\n        if (options.columns !== undefined) {\r\n            const out = [];\r\n            for (const k in options.columns) {\r\n                const type = options.columns[k];\r\n                out.push(arrowToSQLField(k, type));\r\n            }\r\n            options.columnsFlat = out;\r\n            delete options.columns;\r\n        }\r\n\r\n        // Pass to the worker\r\n        const task = new WorkerTask<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions], null>(\r\n            WorkerRequestType.INSERT_JSON_FROM_PATH,\r\n            [conn, path, options],\r\n        );\r\n        await this.postTask(task);\r\n    }\r\n}\r\n", "import Worker from 'web-worker';\r\n\r\nexport async function createWorker(url: string) {\r\n    const request = new Request(url);\r\n    const workerScript = await fetch(request);\r\n    const workerURL = URL.createObjectURL(await workerScript.blob());\r\n    return new Worker(workerURL);\r\n}\r\n", "import * as duckdb from '../src/';\r\nimport { Vector } from 'apache-arrow';\r\nimport { DuckDBQueryConfig } from '../src/';\r\n\r\n// The max interval in microsec from DuckDB is 83 years 3 months 999 days 00:16:39.999999, with months as 30 days.\r\n// Note that due to Arrow JS not supporting the duration type, the castDurationToInterval option is used for intervals.\r\n// This has a side-effect that while the value is in microseconds, it only has millisecond accuracy. This is\r\n// because DuckDB emits intervals in milliseconds and the Arrow Time64 type does not support milliseconds as unit.\r\n//const MAX_INTERVAL_US = (((83 * (12 * 30) + 3 * 30 + 999) * 24 * 60 + 16) * 60 + 39) * 1000000 + 999000;\r\n\r\n// JS Date at +/-8640000000000000ms\r\nconst MINIMUM_DATE_STR = '-271821-04-20';\r\nconst MINIMUM_DATE = new Date(Date.UTC(-271821, 3, 20));\r\nconst MAXIMUM_DATE_STR = '275760-09-13';\r\nconst MAXIMUM_DATE = new Date(Date.UTC(275760, 8, 13));\r\n\r\n// All columns contain 3 values: [min_value, max_value, null]\r\ntype AnswerObjectType = {\r\n    [key: string]: any[];\r\n};\r\n\r\ninterface AllTypesTest {\r\n    name: string;\r\n    query: string;\r\n    skip: string[];\r\n    answerMap: AnswerObjectType;\r\n    answerCount: number;\r\n    queryConfig: DuckDBQueryConfig | null;\r\n}\r\n\r\n// These types currently do not work in DuckDB-WASM\r\n// timestamp_xx and date_tz types will soon be fully supported by duckdb and should be added then.\r\n// hugeint, dec_18_3, dec38_10 and uuid require JS BigInts for full support, which is currently not supported by ArrowJS\r\nconst NOT_IMPLEMENTED_TYPES = [\r\n    'timestamp_s',\r\n    'timestamp_ms',\r\n    'timestamp_ns',\r\n    'timestamp_tz',\r\n    'hugeint',\r\n    'dec_18_6',\r\n    'dec38_10',\r\n    'uuid',\r\n    'map',\r\n    'json',\r\n    'date_array',\r\n    'timestamp_array',\r\n    'timestamptz_array',\r\n];\r\n\r\n// These types are supported, but not the full range returned from the test_all_types() table function, here we define\r\n// the limits we do expect to be supported.\r\nconst PARTIALLY_IMPLEMENTED_TYPES = ['date', 'timestamp'];\r\nconst PARTIALLY_IMPLEMENTED_ANSWER_MAP: AnswerObjectType = {\r\n    date: [MINIMUM_DATE.valueOf(), MAXIMUM_DATE.valueOf(), null],\r\n    timestamp: [MINIMUM_DATE.valueOf(), MAXIMUM_DATE.valueOf(), null],\r\n};\r\n\r\n// Subqueries that return the limits of the subset of the full range that is implemented\r\nconst PARTIALLY_IMPLEMENTED_TYPES_SUBSTITUTIONS = [\r\n    `(SELECT array_extract(['${MINIMUM_DATE_STR}'::Date,'${MAXIMUM_DATE_STR}'::Date,null],i + 1)) as date`,\r\n    `(SELECT array_extract(['${MINIMUM_DATE_STR}'::Timestamp,'${MAXIMUM_DATE_STR}'::Timestamp,null],i + 1)) as timestamp`,\r\n];\r\n\r\n// These types do not work with default configuration, but have\r\nconst TYPES_REQUIRING_CUSTOM_CONFIG = ['dec_4_1', 'dec_9_4'];\r\n\r\n// Types that are fully supported.\r\nconst FULLY_IMPLEMENTED_ANSWER_MAP: AnswerObjectType = {\r\n    bool: [false, true, null],\r\n    tinyint: [-128, 127, null],\r\n    smallint: [-32768, 32767, null],\r\n    int: [-2147483648, 2147483647, null],\r\n    utinyint: [0, 255, null],\r\n    usmallint: [0, 65535, null],\r\n    uint: [0, 4294967295, null],\r\n    ubigint: [BigInt(0), BigInt('18446744073709551615'), null],\r\n    bigint: [BigInt('-9223372036854775808'), BigInt('9223372036854775807'), null],\r\n\r\n    // Note that we multiply by thousand (and add 999 for the max) because the value returned by DuckDB is in microseconds,\r\n    // whereas the Date object is in milliseconds.\r\n    time: [BigInt(0), BigInt(new Date('1970-01-01T23:59:59.999+00:00').valueOf()) * BigInt(1000) + BigInt(999), null],\r\n    time_tz: [\r\n        BigInt(0),\r\n        BigInt(new Date('1970-01-01T23:59:59.999+00:00').valueOf()) * BigInt(1000) + BigInt(999),\r\n        null,\r\n    ],\r\n    interval: [new Int32Array([0,0]),  new Int32Array([0,0]), null],\r\n\r\n    float: [-3.4028234663852886e38, 3.4028234663852886e38, null],\r\n    double: [-1.7976931348623157e308, 1.7976931348623157e308, null],\r\n    varchar: ['\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86', 'goo\\x00se', null],\r\n    small_enum: ['DUCK_DUCK_ENUM', 'GOOSE', null],\r\n    medium_enum: ['enum_0', 'enum_299', null],\r\n    large_enum: ['enum_0', 'enum_69999', null],\r\n\r\n    int_array: [[], [42, 999, null, null, -42], null],\r\n    double_array: [[], [42.0, NaN, Infinity, -Infinity, null, -42.0], null],\r\n    varchar_array: [[], ['\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86', 'goose', null, ''], null],\r\n    nested_int_array: [[], [[], [42, 999, null, null, -42], null, [], [42, 999, null, null, -42]], null],\r\n\r\n    struct: ['{\"a\":null,\"b\":null}', '{\"a\":42,\"b\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\"}', null],\r\n    struct_of_arrays: [\r\n        '{\"a\":null,\"b\":null}',\r\n        '{\"a\":[42,999,null,null,-42],\"b\":[\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\",\"goose\",null,\"\"]}',\r\n        null,\r\n    ],\r\n    array_of_structs: [[], ['{\"a\":null,\"b\":null}', '{\"a\":42,\"b\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\"}', null], null],\r\n\r\n    // XXX sometimes throws\r\n    // map: ['{}', '{\"key1\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\",\"key2\":\"goose\"}', null],\r\n    blob: [\r\n        Uint8Array.from([\r\n            116, 104, 105, 115, 105, 115, 97, 108, 111, 110, 103, 98, 108, 111, 98, 0, 119, 105, 116, 104, 110, 117,\r\n            108, 108, 98, 121, 116, 101, 115,\r\n        ]),\r\n        Uint8Array.from([0, 0, 0, 97]),\r\n        null,\r\n    ],\r\n};\r\n\r\n// Replacements for the values we knowingly don't support from the test_all_types query\r\nconst REPLACE_COLUMNS = PARTIALLY_IMPLEMENTED_TYPES.concat(NOT_IMPLEMENTED_TYPES).concat(TYPES_REQUIRING_CUSTOM_CONFIG);\r\n\r\nfunction unpack(v: any): any {\r\n    if (v === null) return null;\r\n\r\n    if (v instanceof Vector) {\r\n        const ret = Array.from(v.toArray());\r\n        for (let i = 0; i < ret.length; i++) {\r\n            if (!v.isValid(i)) {\r\n                ret[i] = null;\r\n            }\r\n        }\r\n        return unpack(ret);\r\n    } else if (v instanceof Array) {\r\n        const ret: any = [];\r\n        for (let i = 0; i < v.length; i++) {\r\n            ret[i] = unpack(v[i]);\r\n        }\r\n        return ret;\r\n    } else if (v instanceof Uint8Array) {\r\n        return v;\r\n    } else if (v.toJSON instanceof Function) {\r\n        return JSON.stringify(v.toJSON());\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nfunction getValue(x: any): any {\r\n    if (typeof x?.valueOf === 'function') {\r\n        return x.valueOf();\r\n    } else {\r\n        return x;\r\n    }\r\n}\r\n\r\nconst ALL_TYPES_TEST: AllTypesTest[] = [\r\n    {\r\n        name: 'fully supported types',\r\n        query: `SELECT * REPLACE('not_implemented' as map) FROM test_all_types()`,\r\n        skip: REPLACE_COLUMNS,\r\n        answerMap: FULLY_IMPLEMENTED_ANSWER_MAP,\r\n        answerCount: REPLACE_COLUMNS.length + Object.keys(FULLY_IMPLEMENTED_ANSWER_MAP).length,\r\n        queryConfig: null,\r\n    },\r\n    {\r\n        name: 'partially supported types',\r\n        query: `SELECT ${PARTIALLY_IMPLEMENTED_TYPES_SUBSTITUTIONS.join(', ')}\r\n                FROM range(0, 3) tbl(i)`,\r\n        skip: [],\r\n        answerMap: PARTIALLY_IMPLEMENTED_ANSWER_MAP,\r\n        answerCount: PARTIALLY_IMPLEMENTED_TYPES.length,\r\n        queryConfig: null,\r\n    },\r\n    {\r\n        name: 'types with custom config',\r\n        query: `SELECT ${TYPES_REQUIRING_CUSTOM_CONFIG.join(',')} FROM test_all_types()`,\r\n        skip: [],\r\n        answerMap: {\r\n            dec_4_1: [-999.9000000000001, 999.9000000000001, null],\r\n            dec_9_4: [-99999.99990000001, 99999.99990000001, null],\r\n        },\r\n        answerCount: TYPES_REQUIRING_CUSTOM_CONFIG.length,\r\n        queryConfig: {\r\n            castDecimalToDouble: true,\r\n        },\r\n    },\r\n];\r\n\r\nexport function testAllTypes(db: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection | null;\r\n\r\n    beforeEach(() => {\r\n        db().flushFiles();\r\n    });\r\n\r\n    afterEach(() => {\r\n        if (conn) {\r\n            conn.close();\r\n            conn = null;\r\n        }\r\n        db().flushFiles();\r\n        db().dropFiles();\r\n    });\r\n    describe('Test All Types', () => {\r\n        for (const test of ALL_TYPES_TEST) {\r\n            it(test.name, () => {\r\n                if (test.queryConfig) db().open({ query: test.queryConfig });\r\n\r\n                conn = db().connect();\r\n\r\n                const results = conn.query(test.query);\r\n                expect(results.numCols).toEqual(test.answerCount);\r\n\r\n                const skip = new Map();\r\n                for (const s of test.skip) {\r\n                    skip.set(s, true);\r\n                }\r\n                for (let i = 0; i < results.numCols; i++) {\r\n                    const name = results.schema.fields[i].name;\r\n                    if (name == \"bit\")\r\n                        continue;\r\n                    const col = results.getChildAt(i);\r\n                    if (skip.get(name)) continue;\r\n                    expect(col).not.toBeNull();\r\n                    expect(col?.length).not.toEqual(0);\r\n\r\n                    expect(unpack(getValue(col!.get(0))))\r\n                       .withContext(name)\r\n                       .toEqual(test.answerMap[name][0]); // Min\r\n                    expect(unpack(getValue(col!.get(1))))\r\n                       .withContext(name)\r\n                       .toEqual(test.answerMap[name][1]); // Max\r\n                    expect(col!.get(2))\r\n                       .withContext(name)\r\n                       .toEqual(test.answerMap[name][2]); // Null\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport function testAllTypesAsync(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\r\n\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n    });\r\n    afterEach(async () => {\r\n        if (conn) {\r\n            await conn.close();\r\n            conn = null;\r\n        }\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n\r\n    describe('Test All Types Async', () => {\r\n        for (const test of ALL_TYPES_TEST) {\r\n            it(test.name, async () => {\r\n                if (test.queryConfig) db().open({ query: test.queryConfig });\r\n\r\n                conn = await db().connect();\r\n                const results = await conn.query(test.query);\r\n                expect(results.numCols).toEqual(test.answerCount);\r\n\r\n                const skip = new Map();\r\n                for (const s of test.skip) {\r\n                    skip.set(s, true);\r\n                }\r\n                for (let i = 0; i < results.numCols; i++) {\r\n                    const name = results.schema.fields[i].name;\r\n                    if (name == \"bit\")\r\n                        continue;\r\n                    const col = results.getChildAt(i);\r\n                    if (skip.get(name)) continue;\r\n                    expect(col).not.toBeNull();\r\n                    expect(col?.length).not.toEqual(0);\r\n\r\n                    expect(Object.keys(test.answerMap)).toContain(name);\r\n                    expect(unpack(getValue(col!.get(0))))\r\n                        .withContext(name + '|' + col?.toString() + '|[0]')\r\n                        .toEqual(test.answerMap[name][0]); // Min\r\n                    expect(unpack(getValue(col!.get(1))))\r\n                        .withContext(name + '|' + col?.toString() + '|[1]')\r\n                        .toEqual(test.answerMap[name][1]); // Max\r\n                    expect(col!.get(2))\r\n                        .withContext(name + '|' + col?.toString() + '|[2]')\r\n                        .toEqual(test.answerMap[name][2]); // Null\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n", "import * as duckdb from '../src/';\r\nimport { getS3Params, S3Params, S3PayloadParams, createS3Headers, uriEncode, getHTTPUrl } from '../src/utils';\r\nimport { AsyncDuckDBConnection, DuckDBBindings, DuckDBBindingsBase, DuckDBModule } from '../src/';\r\nimport BROWSER_RUNTIME from '../src/bindings/runtime_browser';\r\n\r\n// S3 config for tests\r\nconst BUCKET_NAME = 'test-bucket';\r\nconst ACCESS_KEY_ID = 'S3RVER';\r\nconst ACCESS_KEY_SECRET = 'S3RVER';\r\nconst S3_ENDPOINT = 'http://localhost:4923';\r\nconst S3_REGION = 'eu-west-1';\r\n\r\nenum AWSConfigType {\r\n    EMPTY,\r\n    VALID,\r\n    INVALID,\r\n}\r\nconst setAwsConfig = async function (conn: AsyncDuckDBConnection, type: AWSConfigType = AWSConfigType.VALID) {\r\n    switch (type) {\r\n        case AWSConfigType.EMPTY:\r\n            await conn.query(\"SET s3_region='';\");\r\n            await conn.query(\"SET s3_access_key_id='';\");\r\n            await conn.query(\"SET s3_secret_access_key='';\");\r\n            await conn.query(\"SET s3_session_token='';\");\r\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\r\n            break;\r\n        case AWSConfigType.VALID:\r\n            await conn.query(`SET s3_region='${S3_REGION}';`);\r\n            await conn.query(`SET s3_access_key_id='${ACCESS_KEY_ID}';`);\r\n            await conn.query(`SET s3_secret_access_key='${ACCESS_KEY_SECRET}';`);\r\n            await conn.query(\"SET s3_session_token='';\");\r\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\r\n            break;\r\n        case AWSConfigType.INVALID:\r\n            await conn.query(\"SET s3_region='a-very-remote-and-non-existent-s3-region';\");\r\n            await conn.query(\"SET s3_access_key_id='THISACCESSKEYIDISNOTVALID';\");\r\n            await conn.query(\"SET s3_secret_access_key='THISSECRETACCESSKEYISNOTVALID';\");\r\n            await conn.query(\"SET s3_session_token='INVALIDSESSIONTOKEN';\");\r\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\r\n            break;\r\n    }\r\n};\r\n\r\nexport function testHTTPFS(sdb: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection | null;\r\n\r\n    const getModule = function () {\r\n        let module: DuckDBModule | null = null;\r\n        conn!.useUnsafe((bindings: DuckDBBindings, con_number: number) => {\r\n            module = (bindings as DuckDBBindingsBase).mod;\r\n        });\r\n        expect(module).toBeDefined();\r\n        return module;\r\n    };\r\n    const reset = async () => {\r\n        sdb().reset();\r\n        conn = sdb().connect();\r\n    };\r\n    beforeEach(async () => await reset());\r\n    afterEach(async () => await reset());\r\n\r\n    describe('HTTPFS', () => {\r\n        it('s3 config is set correctly', async () => {\r\n            const module = getModule();\r\n\r\n            // Default values are empty\r\n            const globalFileInfo = BROWSER_RUNTIME.getGlobalFileInfo(module!);\r\n            const cacheEpoch = globalFileInfo!.cacheEpoch;\r\n            expect(globalFileInfo?.s3Config).toBeDefined();\r\n            expect(globalFileInfo?.s3Config?.region).toEqual('');\r\n            expect(globalFileInfo?.s3Config?.accessKeyId).toEqual('');\r\n            expect(globalFileInfo?.s3Config?.secretAccessKey).toEqual('');\r\n            expect(globalFileInfo?.s3Config?.sessionToken).toEqual('');\r\n            expect(globalFileInfo?.s3Config?.endpoint).toEqual('');\r\n\r\n            // Confirm settings are correctly set\r\n            conn!.query(\"SET s3_region='a-very-remote-and-non-existent-s3-region';\");\r\n            conn!.query(\"SET s3_access_key_id='THISACCESSKEYIDISNOTVALID';\");\r\n            conn!.query(\"SET s3_secret_access_key='THISSECRETACCESSKEYISNOTVALID';\");\r\n            conn!.query(\"SET s3_session_token='ANICESESSIONTOKEN';\");\r\n            conn!.query(\"SET s3_endpoint='s3.some.sort.of.cloud';\");\r\n            const globalFileInfoUpdated = BROWSER_RUNTIME.getGlobalFileInfo(module!);\r\n            expect(globalFileInfoUpdated?.s3Config).toBeDefined();\r\n            expect(globalFileInfoUpdated?.cacheEpoch).toEqual(cacheEpoch + 5);\r\n            const params = getS3Params(globalFileInfoUpdated?.s3Config, 's3://test-bucket/testfile.txt', 'GET');\r\n            expect(params.url).toEqual('/testfile.txt');\r\n            expect(params.query).toEqual('');\r\n            expect(params.host).toEqual('test-bucket.s3.some.sort.of.cloud');\r\n            expect(params.region).toEqual('a-very-remote-and-non-existent-s3-region');\r\n            expect(params.service).toEqual('s3');\r\n            expect(params.method).toEqual('GET');\r\n            expect(params.accessKeyId).toEqual('THISACCESSKEYIDISNOTVALID');\r\n            expect(params.secretAccessKey).toEqual('THISSECRETACCESSKEYISNOTVALID');\r\n            expect(params.sessionToken).toEqual('ANICESESSIONTOKEN');\r\n\r\n            // Cover full http endpoint config\r\n            conn!.query(\"SET s3_endpoint='http://localhost:1337';\");\r\n            const globalFileInfoFullHttpEndpoint = BROWSER_RUNTIME.getGlobalFileInfo(module!);\r\n            const paramsFullHttpEndpoint = getS3Params(\r\n                globalFileInfoFullHttpEndpoint?.s3Config,\r\n                's3://test-bucket/testfile.txt',\r\n                'GET',\r\n            );\r\n            expect(paramsFullHttpEndpoint.host).toEqual('localhost:1337');\r\n\r\n            // Reset should clear config\r\n            await reset();\r\n            const globalFileInfoCleared = BROWSER_RUNTIME.getGlobalFileInfo(module!);\r\n            const paramsCleared = getS3Params(globalFileInfoCleared?.s3Config, 's3://test-bucket/testfile.txt', 'GET');\r\n            expect(paramsCleared.url).toEqual('/testfile.txt');\r\n            expect(paramsCleared.query).toEqual('');\r\n            expect(paramsCleared.host).toEqual('test-bucket.s3.amazonaws.com');\r\n            expect(paramsCleared.region).toEqual('');\r\n            expect(paramsCleared.service).toEqual('s3');\r\n            expect(paramsCleared.method).toEqual('GET');\r\n            expect(paramsCleared.accessKeyId).toEqual('');\r\n            expect(paramsCleared.secretAccessKey).toEqual('');\r\n            expect(paramsCleared.sessionToken).toEqual('');\r\n        });\r\n\r\n        it('url parsing is correct', () => {\r\n            const module = getModule();\r\n\r\n            conn!.query(\"SET s3_endpoint='';\");\r\n            const globalFileInfoDefault = BROWSER_RUNTIME.getGlobalFileInfo(module!);\r\n            expect(globalFileInfoDefault?.s3Config).toBeDefined();\r\n            const defaultUrl = getHTTPUrl(globalFileInfoDefault?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\r\n            expect(defaultUrl).toEqual(`https://${BUCKET_NAME}.s3.amazonaws.com/test-file.csv`);\r\n\r\n            conn!.query(\"SET s3_endpoint='https://duckdblabs.com';\");\r\n            const globalFileInfoFullUrl = BROWSER_RUNTIME.getGlobalFileInfo(module!);\r\n            expect(globalFileInfoFullUrl?.s3Config).toBeDefined();\r\n            const fullUrl = getHTTPUrl(globalFileInfoFullUrl?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\r\n            expect(fullUrl).toEqual(`https://duckdblabs.com/${BUCKET_NAME}/test-file.csv`);\r\n\r\n            conn!.query(\"SET s3_endpoint='duckdblabs.com';\");\r\n            const globalFileInfoDomain = BROWSER_RUNTIME.getGlobalFileInfo(module!);\r\n            expect(globalFileInfoDomain?.s3Config).toBeDefined();\r\n            const domainOnlyUrl = getHTTPUrl(globalFileInfoDomain?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\r\n            expect(domainOnlyUrl).toEqual(`https://${BUCKET_NAME}.duckdblabs.com/test-file.csv`);\r\n        });\r\n\r\n        // validate authorization headers for known requests, based on: https://czak.pl/2015/09/15/s3-rest-api-with-curl.html\r\n        it('s3 helper passes validation', () => {\r\n            const testParams1: S3Params = {\r\n                url: '/',\r\n                query: '',\r\n                host: 'my-precious-bucket.s3.amazonaws.com',\r\n                region: 'us-east-1',\r\n                service: 's3',\r\n                method: 'GET',\r\n                accessKeyId: 'AKIAIOSFODNN7EXAMPLE',\r\n                secretAccessKey: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY',\r\n                sessionToken: '',\r\n                dateNow: '20150915',\r\n                datetimeNow: '20150915T124500Z',\r\n            };\r\n            const result = createS3Headers(testParams1).get('Authorization');\r\n            expect(result).toEqual(\r\n                'AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20150915/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=182072eb53d85c36b2d791a1fa46a12d23454ec1e921b02075c23aee40166d5a',\r\n            );\r\n\r\n            const canonical_query_string = 'delimiter=%2F&encoding-type=url&list-type=2&prefix='; // aws s3 ls <bucket>\r\n            const testParams2: S3Params = {\r\n                url: '/',\r\n                query: canonical_query_string,\r\n                host: 'my-precious-bucket.s3.eu-west-1.amazonaws.com',\r\n                region: 'eu-west-1',\r\n                service: 's3',\r\n                method: 'GET',\r\n                accessKeyId: 'ASIAYSPIOYDTHTBIITVC',\r\n                secretAccessKey: 'vs1BZPxSL2qVARBSg5vCMKJsavCoEPlo/HSHRaVe',\r\n                sessionToken:\r\n                    'IQoJb3JpZ2luX2VjENX//////////wEaCWV1LXdlc3QtMSJHMEUCIQDfjzs9BYHrEXDMU/NR+PHV1uSTr7CSVSQdjKSfiPRLdgIgCCztF0VMbi9+uHHAfBVKhV4t9MlUrQg3VAOIsLxrWyoqlAIIHRAAGgw1ODk0MzQ4OTY2MTQiDOGl2DsYxENcKCbh+irxARe91faI+hwUhT60sMGRFg0GWefKnPclH4uRFzczrDOcJlAAaQRJ7KOsT8BrJlrY1jSgjkO7PkVjPp92vi6lJX77bg99MkUTJActiOKmd84XvAE5bFc/jFbqechtBjXzopAPkKsGuaqAhCenXnFt6cwq+LZikv/NJGVw7TRphLV+Aq9PSL9XwdzIgsW2qXwe1c3rxDNj53yStRZHVggdxJ0OgHx5v040c98gFphzSULHyg0OY6wmCMTYcswpb4kO2IIi6AiD9cY25TlwPKRKPi5CdBsTPnyTeW62u7PvwK0fTSy4ZuJUuGKQnH2cKmCXquEwoOHEiQY6nQH9fzY/EDGHMRxWWhxu0HiqIfsuFqC7GS0p0ToKQE+pzNsvVwMjZc+KILIDDQpdCWRIwu53I5PZy2Cvk+3y4XLvdZKQCsAKqeOc4c94UAS4NmUT7mCDOuRV0cLBVM8F0JYBGrUxyI+YoIvHhQWmnRLuKgTb5PkF7ZWrXBHFWG5/tZDOvBbbaCWTlRCL9b0Vpg5+BM/81xd8jChP4w83',\r\n                dateNow: '20210904',\r\n                datetimeNow: '20210904T121746Z',\r\n            };\r\n            const result2 = createS3Headers(testParams2).get('Authorization');\r\n            expect(result2).toEqual(\r\n                'AWS4-HMAC-SHA256 Credential=ASIAYSPIOYDTHTBIITVC/20210904/eu-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=4d9d6b59d7836b6485f6ad822de97be40287da30347d83042ea7fbed530dc4c0',\r\n            );\r\n\r\n            const testParams3: S3Params = {\r\n                url: '/correct_auth_test.csv',\r\n                query: '',\r\n                host: 'test-bucket-ceiveran.s3.amazonaws.com',\r\n                region: 'eu-west-1',\r\n                service: 's3',\r\n                method: 'PUT',\r\n                accessKeyId: 'S3RVER',\r\n                secretAccessKey: 'S3RVER',\r\n                sessionToken: '',\r\n                dateNow: '20220121',\r\n                datetimeNow: '20220121T141452Z',\r\n            };\r\n            const test3PayloadParams: S3PayloadParams = {\r\n                contentHash: '28a0cf6ac5c4cb73793091fe6ecc6a68bf90855ac9186158748158f50241bb0c',\r\n                contentType: 'text/data;charset=utf-8',\r\n            };\r\n            const result3 = createS3Headers(testParams3, test3PayloadParams).get('Authorization');\r\n            expect(result3).toEqual(\r\n                'AWS4-HMAC-SHA256 Credential=S3RVER/20220121/eu-west-1/s3/aws4_request, SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=5d9a6cbfaa78a6d0f2ab7df0445e2f1cc9c80cd3655ac7de9e7219c036f23f02',\r\n            );\r\n\r\n            expect(uriEncode('/category=Books/')).toEqual('/category%3DBooks/');\r\n            expect(uriEncode('/?category=Books&title=Ducks Retreat/')).toEqual(\r\n                '/%3Fcategory%3DBooks%26title%3DDucks%20Retreat/',\r\n            );\r\n            expect(uriEncode('/?category=Books&title=Ducks Retreat/', true)).toEqual(\r\n                '%2F%3Fcategory%3DBooks%26title%3DDucks%20Retreat%2F',\r\n            );\r\n        });\r\n    });\r\n}\r\n\r\nexport function testHTTPFSAsync(\r\n    adb: () => duckdb.AsyncDuckDB,\r\n    resolveData: (url: string) => Promise<Uint8Array | null>,\r\n    baseDir: string,\r\n): void {\r\n    let conn: duckdb.AsyncDuckDBConnection | null;\r\n\r\n    // PUTs an S3 file to the S3 test server\r\n    const putTestFileToS3 = async function (fileName: string, format: string, test_data: Uint8Array | null) {\r\n        await adb().registerFileBuffer('test_file.parquet', test_data!);\r\n        if (!conn) {\r\n            conn = await adb().connect();\r\n        }\r\n        await setAwsConfig(conn, AWSConfigType.VALID);\r\n        await conn.query(`CREATE TABLE test_table AS (SELECT * FROM parquet_scan('test_file.parquet'));`);\r\n        await conn.query(`COPY test_table TO 's3://${BUCKET_NAME}/${fileName}.${format}' (FORMAT '${format}');`);\r\n        await adb().flushFiles();\r\n        await adb().dropFiles();\r\n    };\r\n\r\n    // Requires an open conn\r\n    const assertTestFileResultCorrect = async function (result: any, test_data: Uint8Array | null) {\r\n        await adb().registerFileBuffer('test_file_baseline.parquet', test_data!);\r\n        await conn!.query(`SELECT * FROM parquet_scan('test_file_baseline.parquet');`);\r\n        // expect(result.getChildAt(0).toArray()).toEqual(result_baseline.getChildAt(0)?.toArray());\r\n    };\r\n\r\n    // Reset databases between tests\r\n    const reset = async () => {\r\n        await adb().reset();\r\n        conn = await adb().connect();\r\n    };\r\n    beforeEach(async () => await reset());\r\n    afterEach(async () => await reset());\r\n\r\n    describe('HTTPFS Async', () => {\r\n        it('can fetch https file', async () => {\r\n            const results = await conn!.query(\r\n                `select * from \"https://raw.githubusercontent.com/duckdb/duckdb-wasm/master/data/test.csv\";`,\r\n            );\r\n            expect(BigInt(results.getChildAt(2)?.get(2))).toEqual(BigInt(9n));\r\n        });\r\n\r\n        it('can read and write csv file from S3 with correct auth credentials', async () => {\r\n            let data = await resolveData('/uni/studenten.parquet');\r\n            await setAwsConfig(conn!);\r\n            await putTestFileToS3('correct_auth_test', 'csv', data);\r\n            const results_with_auth = await conn!.query(`select * from \"s3://${BUCKET_NAME}/correct_auth_test.csv\";`);\r\n            data = await resolveData('/uni/studenten.parquet');\r\n            assertTestFileResultCorrect(results_with_auth, data);\r\n        });\r\n\r\n        it('can read and write parquet file from S3 with correct auth credentials', async () => {\r\n            let data = await resolveData('/uni/studenten.parquet');\r\n            await putTestFileToS3('correct_auth_test', 'parquet', data);\r\n            await setAwsConfig(conn!);\r\n            const results_with_auth = await conn!.query(\r\n                `select * from \"s3://${BUCKET_NAME}/correct_auth_test.parquet\";`,\r\n            );\r\n            data = await resolveData('/uni/studenten.parquet');\r\n            assertTestFileResultCorrect(results_with_auth, data);\r\n        });\r\n\r\n        it('can not read a file with incorrect credentials', async () => {\r\n            const data = await resolveData('/uni/studenten.parquet');\r\n            await putTestFileToS3('incorrect_auth_test', 'parquet', data);\r\n            await setAwsConfig(conn!, AWSConfigType.INVALID);\r\n            await expectAsync(\r\n                conn!.query(`select * from \"s3://${BUCKET_NAME}/incorrect_auth_test.csv\";`),\r\n            ).toBeRejected();\r\n        });\r\n\r\n        it('properly invalidates file caches on settings update.', async () => {\r\n            const data = await resolveData('/tpch/0_01/parquet/lineitem.parquet');\r\n            await putTestFileToS3('file_cache_invalidation_test', 'parquet', data);\r\n            await setAwsConfig(conn!);\r\n            const results_correct = await conn!.query(\r\n                `select l_partkey from \"s3://${BUCKET_NAME}/file_cache_invalidation_test.parquet\" limit 1;`,\r\n            );\r\n            expect(results_correct.getChildAt(0)?.get(0)).toEqual(1552);\r\n            await setAwsConfig(conn!, AWSConfigType.INVALID);\r\n            await expectAsync(\r\n                conn!.query(`select avg(l_partkey) from \"s3://${BUCKET_NAME}/lineitem.parquet\";`),\r\n            ).toBeRejected();\r\n        });\r\n\r\n        it('write after read throws incorrect flag error without dropping files', async () => {\r\n            await setAwsConfig(conn!);\r\n            await conn!.query(\r\n                `COPY (SELECT * FROM range(1000,1010) tbl(i)) TO 's3://${BUCKET_NAME}/test_written.csv' (FORMAT 'csv');`,\r\n            );\r\n            const result = await conn!.query(`SELECT * FROM \"s3://${BUCKET_NAME}/test_written.csv\";`);\r\n            expect(Number((result.getChildAt(0)?.get(6)))).toEqual(Number(1006));\r\n            await expectAsync(\r\n                conn!.query(\r\n                    `COPY (SELECT * FROM range(2000,2010) tbl(i)) TO 's3://${BUCKET_NAME}/test_written.csv' (FORMAT 'csv');`,\r\n                ),\r\n            ).toBeRejectedWithError('Invalid Error: File is not opened in write mode');\r\n        });\r\n    });\r\n}\r\n", "import * as arrow from 'apache-arrow';\r\nimport * as duckdb from '../src/';\r\nimport { DuckDBAccessMode, DuckDBDataProtocol } from '../src/';\r\n\r\nexport function testBindings(db: () => duckdb.DuckDBBindings, baseURL: string): void {\r\n    let conn: duckdb.DuckDBConnection;\r\n\r\n    beforeEach(() => {\r\n        conn = db().connect();\r\n    });\r\n\r\n    afterEach(() => {\r\n        conn.close();\r\n        db().flushFiles();\r\n        db().dropFiles();\r\n    });\r\n\r\n    describe('DuckDBBindings', () => {\r\n        describe('error handling', () => {\r\n            it('INVALID SQL', async () => {\r\n                let error: Error | null = null;\r\n                try {\r\n                    await conn.send('INVALID');\r\n                } catch (e: any) {\r\n                    error = e;\r\n                }\r\n                expect(error).not.toBe(null);\r\n            });\r\n        });\r\n\r\n        describe('Check version', () => {\r\n            it('Version check', async () => {\r\n                await db().reset();\r\n                conn = db().connect();\r\n                const version = conn.query<{ name: arrow.Utf8 }>(\r\n                    \"select * from (select version()) where version() != 'v0.0.1-dev0';\",\r\n                );\r\n                const rows = version.toArray();\r\n                expect(rows.length).toEqual(1);\r\n                await db().reset();\r\n            });\r\n        });\r\n\r\n        //describe('Open', () => {\r\n        // XXX apparently synchronous XHR on the main thread does not allow for arraybuffer response type?\r\n        // it('Remote TPCH 0_01', async () => {\r\n        //     await db().registerFileURL('tpch_0_01.db', `${baseURL}/tpch/0_01/duckdb/db`);\r\n        //     db().open('tpch_0_01.db');\r\n        // });\r\n        //});\r\n\r\n        describe('Reset', () => {\r\n            it('table must disappear', async () => {\r\n                await db().reset();\r\n                conn = db().connect();\r\n                conn.query('CREATE TABLE foo (a int)');\r\n                let table = conn.query<{ name: arrow.Utf8 }>('PRAGMA show_tables;');\r\n                let rows = table.toArray();\r\n                expect(rows.length).toEqual(1);\r\n                expect(rows[0]?.name).toEqual('foo');\r\n                await db().reset();\r\n                conn = db().connect();\r\n                table = conn.query<{ name: arrow.Utf8 }>('PRAGMA show_tables;');\r\n                rows = table.toArray();\r\n                expect(rows.length).toEqual(0);\r\n            });\r\n        });\r\n\r\n        describe('Prepared Statement', () => {\r\n            it('Materialized', async () => {\r\n                const stmt = conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\r\n                const result = stmt.query(234);\r\n                expect(result.numRows).toBe(10001);\r\n                stmt.close();\r\n            });\r\n\r\n            it('Streaming', async () => {\r\n                const stmt = conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\r\n                const stream = stmt.send(234);\r\n                let size = 0;\r\n                for (const batch of stream) {\r\n                    size += batch.numRows;\r\n                }\r\n                expect(size).toBe(10001);\r\n                conn.close();\r\n            });\r\n            it('Typecheck', async () => {\r\n                conn.query(`CREATE TABLE typecheck (\r\n                    a BOOLEAN DEFAULT NULL,\r\n                    b TINYINT DEFAULT NULL,\r\n                    c SMALLINT DEFAULT NULL,\r\n                    d INTEGER DEFAULT NULL,\r\n                    e BIGINT DEFAULT NULL,\r\n                    f FLOAT DEFAULT NULL,\r\n                    g DOUBLE DEFAULT NULL,\r\n                    h CHAR(11) DEFAULT NULL,\r\n                    i VARCHAR(11) DEFAULT NULL\r\n                )`);\r\n\r\n                const stmt = conn.prepare('INSERT INTO typecheck VALUES(?,?,?,?,?,?,?,?,?)');\r\n                expect(() =>\r\n                    stmt.query(true, 100, 10_000, 1_000_000, 5_000_000_000, 0.5, Math.PI, 'hello world', 'hi'),\r\n                ).not.toThrow();\r\n                expect(() =>\r\n                    stmt.query(\r\n                        'test', // varchar for bool\r\n                        100,\r\n                        10_000,\r\n                        1_000_000,\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    ),\r\n                ).toThrow();\r\n                expect(() =>\r\n                    stmt.query(\r\n                        true,\r\n                        10_000, // smallint for tinyint\r\n                        10_000,\r\n                        1_000_000,\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    ),\r\n                ).toThrow();\r\n                expect(() =>\r\n                    stmt.query(\r\n                        true,\r\n                        100,\r\n                        1_000_000, // int for smallint\r\n                        1_000_000,\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    ),\r\n                ).toThrow();\r\n                expect(() =>\r\n                    stmt.query(\r\n                        true,\r\n                        100,\r\n                        10_000,\r\n                        5_000_000_000, // bigint for int\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    ),\r\n                ).toThrow();\r\n                conn.close();\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nexport function testAsyncBindings(\r\n    adb: () => duckdb.AsyncDuckDB,\r\n    baseURL: string,\r\n    baseDirProto: DuckDBDataProtocol,\r\n): void {\r\n    beforeEach(async () => {});\r\n\r\n    afterEach(async () => {\r\n        await adb().flushFiles();\r\n        await adb().dropFiles();\r\n        await adb().open({\r\n            path: ':memory:',\r\n        });\r\n    });\r\n\r\n    describe('Bindings', () => {\r\n        describe('Open', () => {\r\n            it('Remote TPCH 0_01', async () => {\r\n                await adb().registerFileURL('tpch_0_01.db', `${baseURL}/tpch/0_01/duckdb/db`, baseDirProto, false);\r\n                await adb().open({\r\n                    path: 'tpch_0_01.db',\r\n                });\r\n                const conn = await adb().connect();\r\n                const table = await conn.query<{\r\n                    a: arrow.Int;\r\n                }>('select count(*)::INTEGER as a from lineitem');\r\n                const rows = table.toArray();\r\n                expect(rows.length).toEqual(1);\r\n                expect(rows[0]?.a).toEqual(60175);\r\n            });\r\n        });\r\n\r\n        describe('Patching', () => {\r\n            it('Count(*) Default', async () => {\r\n                await adb().open({\r\n                    path: ':memory:',\r\n                    query: {\r\n                        castBigIntToDouble: false,\r\n                    },\r\n                });\r\n                const conn = await adb().connect();\r\n                const table = await conn.query('select 1::BIGINT');\r\n                expect(table.schema.fields.length).toEqual(1);\r\n                expect(table.schema.fields[0].typeId).toEqual(arrow.Type.Int);\r\n            });\r\n\r\n            it('Count(*) No BigInt', async () => {\r\n                await adb().open({\r\n                    path: ':memory:',\r\n                    query: {\r\n                        castBigIntToDouble: true,\r\n                    },\r\n                });\r\n                const conn = await adb().connect();\r\n                const table = await conn.query('select 1::BIGINT');\r\n                expect(table.schema.fields.length).toEqual(1);\r\n                expect(table.schema.fields[0].typeId).toEqual(arrow.Type.Float);\r\n            });\r\n        });\r\n\r\n        describe('Prepared Statement', () => {\r\n            it('Materialized', async () => {\r\n                const conn = await adb().connect();\r\n                const stmt = await conn.prepare('SELECT v + ? FROM generate_series(0, 10000) as t(v);');\r\n                const result = await stmt.query(234);\r\n                expect(result.numRows).toBe(10001);\r\n                await stmt.close();\r\n            });\r\n\r\n            it('Streaming', async () => {\r\n                const conn = await adb().connect();\r\n                const stmt = await conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\r\n                const stream = await stmt.send(234);\r\n                let size = 0;\r\n                for await (const batch of stream) {\r\n                    size += batch.numRows;\r\n                }\r\n                expect(size).toBe(10001);\r\n                await conn.close();\r\n            });\r\n            it('Typecheck', async () => {\r\n                const conn = await adb().connect();\r\n                await conn.query(`CREATE TABLE typecheck (\r\n                    a BOOLEAN DEFAULT NULL,\r\n                    b TINYINT DEFAULT NULL,\r\n                    c SMALLINT DEFAULT NULL,\r\n                    d INTEGER DEFAULT NULL,\r\n                    e BIGINT DEFAULT NULL,\r\n                    f FLOAT DEFAULT NULL,\r\n                    g DOUBLE DEFAULT NULL,\r\n                    h CHAR(11) DEFAULT NULL,\r\n                    i VARCHAR(11) DEFAULT NULL\r\n                )`);\r\n\r\n                const stmt = await conn.prepare('INSERT INTO typecheck VALUES(?,?,?,?,?,?,?,?,?)');\r\n\r\n                const expectToThrow = async (fn: () => Promise<void>) => {\r\n                    let throwed = false;\r\n                    try {\r\n                        await fn();\r\n                    } catch (e) {\r\n                        throwed = true;\r\n                    }\r\n                    expect(throwed).toBe(true);\r\n                };\r\n                expectToThrow(async () => {\r\n                    await stmt.query(\r\n                        'test', // varchar for bool\r\n                        100,\r\n                        10_000,\r\n                        1_000_000,\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    );\r\n                });\r\n                expectToThrow(async () => {\r\n                    await stmt.query(\r\n                        true,\r\n                        10_000, // smallint for tinyint\r\n                        10_000,\r\n                        1_000_000,\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    );\r\n                });\r\n                expectToThrow(async () => {\r\n                    await stmt.query(\r\n                        true,\r\n                        100,\r\n                        1_000_000, // int for smallint\r\n                        1_000_000,\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    );\r\n                });\r\n                expectToThrow(async () => {\r\n                    await stmt.query(\r\n                        true,\r\n                        100,\r\n                        10_000,\r\n                        5_000_000_000, // bigint for int\r\n                        5_000_000_000,\r\n                        0.5,\r\n                        Math.PI,\r\n                        'hello world',\r\n                        'hi',\r\n                    );\r\n                });\r\n                await conn.close();\r\n            });\r\n        });\r\n\r\n        describe('AccessMode', () => {\r\n            it('READ_ONLY', async () => {\r\n                await expectAsync(\r\n                    adb().open({\r\n                        accessMode: DuckDBAccessMode.READ_ONLY,\r\n                    }),\r\n                ).toBeRejectedWithError(/Cannot launch in-memory database in read-only mode/);\r\n            });\r\n            it('READ_WRITE', async () => {\r\n                await expectAsync(\r\n                    adb().open({\r\n                        accessMode: DuckDBAccessMode.READ_WRITE,\r\n                    }),\r\n                ).toBeResolved();\r\n            });\r\n        });\r\n\r\n        describe('Cancellation', () => {\r\n            it('hello cancel', async () => {\r\n                // Set query polling interval to 0 to poll 1 task at a time\r\n                await adb().open({\r\n                    path: ':memory:',\r\n                    query: {\r\n                        queryPollingInterval: 0,\r\n                    },\r\n                });\r\n                const conn = await adb().connect();\r\n                const result = await conn.useUnsafe((db, id) =>\r\n                    db.startPendingQuery(id, 'SELECT SUM(i) FROM range(1000000) tbl(i);'),\r\n                );\r\n                expect(result).toBeNull();\r\n                const cancelOK = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\r\n                expect(cancelOK).toBeTrue();\r\n                let polledHeader = null;\r\n                let polledError = null;\r\n                try {\r\n                    polledHeader = await conn.useUnsafe((db, id) => db.pollPendingQuery(id));\r\n                } catch (e: any) {\r\n                    polledError = e;\r\n                }\r\n                expect(polledHeader).toBeNull();\r\n                expect(polledError).not.toBeNull();\r\n                expect(polledError.toString()).toEqual('Error: query was canceled');\r\n                const canceledAgain = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\r\n                expect(canceledAgain).toBeFalse();\r\n                // Check the connection is destroyed or not when we cancel query\r\n                const table = await conn.query('select 42::integer;');\r\n                expect(table.schema.fields.length).toEqual(1);\r\n            });\r\n\r\n            it('noop cancel', async () => {\r\n                await adb().open({\r\n                    path: ':memory:',\r\n                    query: {\r\n                        queryPollingInterval: 0,\r\n                    },\r\n                });\r\n                const conn = await adb().connect();\r\n                const result = await conn.useUnsafe((db, id) =>\r\n                    db.startPendingQuery(id, 'SELECT SUM(i) FROM range(1000000) tbl(i);'),\r\n                );\r\n                expect(result).toBeNull();\r\n                let polledHeader = null;\r\n                let polledError = null;\r\n                try {\r\n                    // We execute 1 task at a time, so this may take multiple polls\r\n                    while (polledHeader == null) {\r\n                        polledHeader = await conn.useUnsafe((db, id) => db.pollPendingQuery(id));\r\n                    }\r\n                } catch (e: any) {\r\n                    polledError = e;\r\n                }\r\n                expect(polledHeader).not.toBeNull();\r\n                expect(polledError).toBeNull();\r\n                const cancelOK = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\r\n                expect(cancelOK).toBeFalse();\r\n                const anotherOne = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\r\n                expect(anotherOne).toBeFalse();\r\n            });\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../src/';\r\n\r\nconst testRows = 10000;\r\n\r\nexport function testBatchStream(db: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection;\r\n\r\n    beforeEach(() => {\r\n        conn = db().connect();\r\n    });\r\n\r\n    afterEach(() => {\r\n        conn.close();\r\n        db().flushFiles();\r\n        db().dropFiles();\r\n    });\r\n\r\n    describe('Arrow Record-Batches Row-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const row of batch) {\r\n                        expect(row!.v).toBe(i++ & 127);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const row of batch) {\r\n                        expect(row!.v).toBe(i++ & 32767);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const row of batch) {\r\n                        expect(row!.v).toBe(i++);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const row of batch) {\r\n                        expect(row!.v).toBe(BigInt(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const row of batch) {\r\n                        expect(row!.v).toBe(String(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n\r\n    describe('Arrow Record-Batches Column-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++ & 127);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++ & 32767);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(BigInt(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(String(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n\r\n    describe('Arrow Table Row-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', () => {\r\n                const table = conn.query(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(i++ & 127);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', () => {\r\n                const table = conn.query(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(i++ & 32767);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', () => {\r\n                const table = conn.query(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(i++);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', () => {\r\n                const table = conn.query(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(BigInt(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', () => {\r\n                const table = conn.query(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v.valueOf()).toBe(String(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n\r\n    describe('Arrow Table Column-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', () => {\r\n                const table = conn.query(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(i++ & 127);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', () => {\r\n                const table = conn.query(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(i++ & 32767);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', () => {\r\n                const table = conn.query(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(i++);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', () => {\r\n                const table = conn.query(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(BigInt(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', () => {\r\n                const table = conn.query(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(String(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../src/';\r\n\r\nconst testRows = 10000;\r\n\r\nexport function testAsyncBatchStream(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        conn = await db().connect();\r\n    });\r\n\r\n    afterEach(async () => {\r\n        await conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n\r\n    describe('AsyncDuckDB', () => {\r\n        it('ping', async () => {\r\n            await db().ping();\r\n        });\r\n    });\r\n\r\n    describe('Arrow Record-Batches Row-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const row of batch) {\r\n                        expect(row!.v).toBe(i++ & 127);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++ & 32767);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(BigInt(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(String(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n\r\n        describe('scripts', () => {\r\n            it('test1', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::INTEGER AS x, (sin(v) * 100 + 100)::INTEGER AS y FROM generate_series(0, ${testRows}) as t(v)\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(2);\r\n                    for (const row of batch) {\r\n                        expect(row!.x).toBe(i++);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n\r\n    describe('Arrow Record-Batches Column-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++ & 127);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++ & 32767);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(i++);\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(BigInt(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', async () => {\r\n                const result = await conn.send(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for await (const batch of result) {\r\n                    expect(batch.numCols).toBe(1);\r\n                    for (const v of batch.getChildAt(0)!) {\r\n                        expect(v).toBe(String(i++));\r\n                    }\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n\r\n    describe('Arrow Table Row-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(i++ & 127);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(i++ & 32767);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(i++);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v).toBe(BigInt(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const row of table) {\r\n                    expect(row?.v.valueOf()).toBe(String(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n\r\n    describe('Arrow Table Column-Major', () => {\r\n        describe('single column', () => {\r\n            it('TINYINT', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(i++ & 127);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('SMALLINT', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(i++ & 32767);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('INTEGER', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(i++);\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('BIGINT', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(BigInt(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n\r\n            it('STRING', async () => {\r\n                const table = await conn.query(`\r\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\r\n                `);\r\n                let i = 0;\r\n                for (const v of table.getChildAt(0)!) {\r\n                    expect(v).toBe(String(i++));\r\n                }\r\n                expect(i).toBe(testRows + 1);\r\n            });\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../src/';\r\nimport * as arrow from 'apache-arrow';\r\n\r\nconst decoder = new TextDecoder();\r\n\r\nexport function testFilesystem(\r\n    db: () => duckdb.AsyncDuckDB,\r\n    resolveData: (url: string) => Promise<Uint8Array | null>,\r\n    baseDir: string,\r\n    baseDirProto: duckdb.DuckDBDataProtocol,\r\n): void {\r\n    let conn: duckdb.AsyncDuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        conn = await db().connect();\r\n    });\r\n\r\n    afterEach(async () => {\r\n        await conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n\r\n    describe('File buffer registration', () => {\r\n        const test = async () => {\r\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\r\n            const batches = [];\r\n            for await (const batch of result) {\r\n                batches.push(batch);\r\n            }\r\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\r\n            expect(table.getChildAt(0)?.toArray()).toEqual(\r\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\r\n            );\r\n        };\r\n        it('File buffer used once', async () => {\r\n            const students = await resolveData('/uni/studenten.parquet');\r\n            expect(students).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students!);\r\n            await test();\r\n        });\r\n        it('File buffer registered twice', async () => {\r\n            const students0 = await resolveData('/uni/studenten.parquet');\r\n            const students1 = await resolveData('/uni/studenten.parquet');\r\n            expect(students0).not.toBeNull();\r\n            expect(students1).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students0!);\r\n            await test();\r\n            await db().registerFileBuffer('studenten.parquet', students1!);\r\n            await test();\r\n        });\r\n        it('File buffer used twice', async () => {\r\n            const students = await resolveData('/uni/studenten.parquet');\r\n            expect(students).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students!);\r\n            await test();\r\n            await test();\r\n        });\r\n    });\r\n\r\n    describe('Parquet Scans', () => {\r\n        it('single table from buffer', async () => {\r\n            const students = await resolveData('/uni/studenten.parquet');\r\n            expect(students).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students!);\r\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\r\n            const batches = [];\r\n            for await (const batch of result) {\r\n                batches.push(batch);\r\n            }\r\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\r\n            expect(table.getChildAt(0)?.toArray()).toEqual(\r\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\r\n            );\r\n        });\r\n\r\n        it('simple join', async () => {\r\n            const students = await resolveData('/uni/studenten.parquet');\r\n            const hoeren = await resolveData('/uni/hoeren.parquet');\r\n            const vorlesungen = await resolveData('/uni/vorlesungen.parquet');\r\n            expect(students).not.toBeNull();\r\n            expect(hoeren).not.toBeNull();\r\n            expect(vorlesungen).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students!);\r\n            await db().registerFileBuffer('hoeren.parquet', hoeren!);\r\n            await db().registerFileBuffer('vorlesungen.parquet', vorlesungen!);\r\n\r\n            const result = await conn.send(`\r\n                    SELECT students.matrnr, vorlesungen.titel\r\n                    FROM parquet_scan('studenten.parquet') students\r\n                    INNER JOIN parquet_scan('hoeren.parquet') hoeren ON (students.matrnr = hoeren.matrnr)\r\n                    INNER JOIN parquet_scan('vorlesungen.parquet') vorlesungen ON (vorlesungen.vorlnr = hoeren.vorlnr);\r\n                `);\r\n            const batches = [];\r\n            for await (const batch of result) {\r\n                batches.push(batch);\r\n            }\r\n            const table = await new arrow.Table<{ matrnr: arrow.Int; titel: arrow.Utf8 }>(batches);\r\n            expect(table.numCols).toBe(2);\r\n            const flat = [];\r\n            for (const row of table) {\r\n                flat.push({\r\n                    matrnr: row?.matrnr,\r\n                    titel: row?.titel?.toString(),\r\n                });\r\n            }\r\n            expect(flat).toEqual([\r\n                { matrnr: 26120, titel: 'Grundz\u00FCge' },\r\n                { matrnr: 27550, titel: 'Grundz\u00FCge' },\r\n                { matrnr: 27550, titel: 'Logik' },\r\n                { matrnr: 28106, titel: 'Ethik' },\r\n                { matrnr: 28106, titel: 'Wissenschaftstheorie' },\r\n                { matrnr: 28106, titel: 'Bioethik' },\r\n                { matrnr: 28106, titel: 'Der Wiener Kreis' },\r\n                { matrnr: 29120, titel: 'Grundz\u00FCge' },\r\n                { matrnr: 29120, titel: 'Ethik' },\r\n                { matrnr: 29120, titel: 'M\u00E4eutik' },\r\n                { matrnr: 29555, titel: 'Glaube und Wissen' },\r\n                { matrnr: 25403, titel: 'Glaube und Wissen' },\r\n            ]);\r\n        });\r\n    });\r\n\r\n    describe('Writing', () => {\r\n        it('Copy To CSV Buffer', async () => {\r\n            const students = await resolveData('/uni/studenten.parquet');\r\n            expect(students).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students!);\r\n            await db().registerEmptyFileBuffer('students.csv');\r\n            await conn.query(`CREATE TABLE students AS SELECT * FROM parquet_scan('studenten.parquet');`);\r\n            await conn.query(`COPY students TO 'students.csv' WITH (HEADER 1, DELIMITER ';', FORMAT CSV);`);\r\n            await conn.query(`DROP TABLE IF EXISTS students`);\r\n            const outBuffer = await db().copyFileToBuffer('students.csv');\r\n            expect(outBuffer).not.toBeNull();\r\n            const text = decoder.decode(outBuffer!);\r\n            expect(text).toBe(`matrnr;name;semester\r\n24002;Xenokrates;18\r\n25403;Jonas;12\r\n26120;Fichte;10\r\n26830;Aristoxenos;8\r\n27550;Schopenhauer;6\r\n28106;Carnap;3\r\n29120;Theophrastos;2\r\n29555;Feuerbach;2\r\n`);\r\n        });\r\n\r\n        it('Copy To Parquet', async () => {\r\n            const students = await resolveData('/uni/studenten.parquet');\r\n            expect(students).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students!);\r\n            await db().registerEmptyFileBuffer('students2.parquet');\r\n            await conn.query(`CREATE TABLE students2 AS SELECT * FROM parquet_scan('studenten.parquet');`);\r\n            await conn.query(`COPY students2 TO 'students2.parquet' (FORMAT PARQUET);`);\r\n            const url = await db().copyFileToBuffer('students2.parquet');\r\n            expect(url).not.toBeNull();\r\n        });\r\n\r\n        it('Copy To Parquet And Load Again', async () => {\r\n            const students = await resolveData('/uni/studenten.parquet');\r\n            expect(students).not.toBeNull();\r\n            await db().registerFileBuffer('studenten.parquet', students!);\r\n            await db().registerEmptyFileBuffer('students3.parquet');\r\n            await conn.query(`CREATE TABLE students3 AS SELECT * FROM parquet_scan('studenten.parquet');`);\r\n            await conn.query(`COPY students3 TO 'students3.parquet' (FORMAT PARQUET);`);\r\n            const url = await db().copyFileToBuffer('students3.parquet');\r\n            expect(url).not.toBeNull();\r\n            await conn.query(`CREATE TABLE students4 AS SELECT * FROM parquet_scan('students3.parquet');`);\r\n            const result = await conn.send(`SELECT matrnr FROM students4;`);\r\n            const batches = [];\r\n            for await (const batch of result) {\r\n                batches.push(batch);\r\n            }\r\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\r\n            expect(table.getChildAt(0)?.toArray()).toEqual(\r\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\r\n            );\r\n        });\r\n    });\r\n\r\n    describe('File access', () => {\r\n        it('Small Parquet file', async () => {\r\n            await db().registerFileURL('studenten.parquet', `${baseDir}/uni/studenten.parquet`, baseDirProto, true);\r\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\r\n            const batches = [];\r\n            for await (const batch of result) {\r\n                batches.push(batch);\r\n            }\r\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\r\n            expect(table.getChildAt(0)?.toArray()).toEqual(\r\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\r\n            );\r\n        });\r\n\r\n        it('Large Parquet file', async () => {\r\n            await db().registerFileURL(\r\n                'lineitem.parquet',\r\n                `${baseDir}/tpch/0_01/parquet/lineitem.parquet`,\r\n                baseDirProto,\r\n                true,\r\n            );\r\n            const result = await conn.send(`SELECT count(*)::INTEGER as cnt FROM parquet_scan('lineitem.parquet');`);\r\n            const batches = [];\r\n            for await (const batch of result) {\r\n                batches.push(batch);\r\n            }\r\n            const table = await new arrow.Table<{ cnt: arrow.Int }>(batches);\r\n            expect(table.getChildAt(0)?.get(0)).toBeGreaterThan(60_000);\r\n        });\r\n    });\r\n\r\n    describe('Export', () => {\r\n        it('Generate Series as CSV', async () => {\r\n            await conn.query('CREATE TABLE foo AS SELECT * FROM generate_series(1, 5) t(v)');\r\n            await conn.query(`EXPORT DATABASE '/tmp/duckdbexportcsv'`);\r\n\r\n            const results = await db().globFiles('/tmp/duckdbexportcsv/*');\r\n            expect(results).not.toEqual([]);\r\n            expect(results.length).toEqual(3);\r\n            const filenames = results.map(file => file.fileName).sort();\r\n            expect(filenames).toEqual([\r\n                '/tmp/duckdbexportcsv/foo.csv',\r\n                '/tmp/duckdbexportcsv/load.sql',\r\n                '/tmp/duckdbexportcsv/schema.sql',\r\n            ]);\r\n\r\n            const csv_buffer_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/foo.csv');\r\n            const load_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/load.sql');\r\n            const schema_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/schema.sql');\r\n            expect(load_script_utf8.length).not.toEqual(0);\r\n            expect(schema_script_utf8.length).not.toEqual(0);\r\n            expect(csv_buffer_utf8.length).not.toEqual(0);\r\n\r\n            const load_script = decoder.decode(load_script_utf8);\r\n            const schema_script = decoder.decode(schema_script_utf8);\r\n            const csv_buffer = decoder.decode(csv_buffer_utf8);\r\n            expect(load_script.trim()).toEqual(\r\n                `COPY foo FROM '/tmp/duckdbexportcsv/foo.csv' (FORMAT 'csv', quote '\"', delimiter ',', header 0);`,\r\n            );\r\n            expect(schema_script.trim()).toEqual(`CREATE TABLE foo(v BIGINT);`);\r\n            expect(csv_buffer.trim()).toEqual(`1\\n2\\n3\\n4\\n5`);\r\n        });\r\n\r\n        it('Generate Series as Parquet', async () => {\r\n            await conn.query('CREATE TABLE foo AS SELECT * FROM generate_series(1, 5) t(v)');\r\n            await conn.query(`EXPORT DATABASE '/tmp/duckdbexportparquet' (FORMAT PARQUET)`);\r\n\r\n            const results = await db().globFiles('/tmp/duckdbexportparquet/*');\r\n            expect(results).not.toEqual([]);\r\n            expect(results.length).toEqual(3);\r\n            const filenames = results.map(file => file.fileName).sort();\r\n            expect(filenames).toEqual([\r\n                '/tmp/duckdbexportparquet/foo.parquet',\r\n                '/tmp/duckdbexportparquet/load.sql',\r\n                '/tmp/duckdbexportparquet/schema.sql',\r\n            ]);\r\n\r\n            const parquet_buffer = await db().copyFileToBuffer('/tmp/duckdbexportparquet/foo.parquet');\r\n            const load_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportparquet/load.sql');\r\n            const schema_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportparquet/schema.sql');\r\n            expect(load_script_utf8.length).not.toEqual(0);\r\n            expect(schema_script_utf8.length).not.toEqual(0);\r\n            expect(parquet_buffer.length).not.toEqual(0);\r\n\r\n            const content = await conn.query(\r\n                `SELECT v::integer FROM parquet_scan('/tmp/duckdbexportparquet/foo.parquet')`,\r\n            );\r\n            expect(content.nullCount).toEqual(0);\r\n            expect(content.numRows).toEqual(5);\r\n            expect(content.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 3, 4, 5]));\r\n        });\r\n    });\r\n\r\n    describe('Copy', () => {\r\n        it('Generate Series as Parquet', async () => {\r\n            await conn.query(\r\n                `COPY (SELECT * FROM generate_series(1, 5) t(v)) TO '/tmp/duckdbcopytest.parquet' (FORMAT 'parquet')`,\r\n            );\r\n            const results = await db().globFiles('/tmp/duckdbcopytest*');\r\n            expect(results).not.toEqual([]);\r\n            expect(results.length).toEqual(1);\r\n            const filenames = results.map(file => file.fileName).sort();\r\n            expect(filenames).toEqual(['/tmp/duckdbcopytest.parquet']);\r\n            const parquet_buffer = await db().copyFileToBuffer('/tmp/duckdbcopytest.parquet');\r\n            expect(parquet_buffer.length).not.toEqual(0);\r\n            const content = await conn.query(`SELECT v::integer FROM parquet_scan('/tmp/duckdbcopytest.parquet')`);\r\n            expect(content.numRows).toEqual(5);\r\n            expect(content.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 3, 4, 5]));\r\n        });\r\n    });\r\n}\r\n", "import * as arrow from 'apache-arrow';\r\n\r\nexport interface Column {\r\n    name: string;\r\n    values: any[];\r\n}\r\n\r\nexport function compareTable(table: arrow.Table, expected: Column[]): void {\r\n    // Check column count\r\n    const colCount = expected.length;\r\n    expect(table.numCols).toEqual(colCount);\r\n    if (colCount == 0) return;\r\n\r\n    // Check columns\r\n    const rowCount = expected[0].values.length;\r\n    for (let i = 0; i < colCount; ++i) {\r\n        expect(expected[i].values.length).toEqual(rowCount);\r\n        expect(table.getChildAt(i)?.length).toEqual(rowCount);\r\n        expect(table.schema.fields[i]?.name).toEqual(expected[i].name);\r\n    }\r\n\r\n    // Compare the actual values\r\n    for (let i = 0; i < colCount; ++i) {\r\n        const col = table.getChildAt(i)!;\r\n        const have = [];\r\n        for (let j = 0; j < rowCount; ++j) {\r\n            have.push(col.get(j));\r\n        }\r\n        expect(Number(have)).toEqual(Number(expected[i].values));\r\n    }\r\n}\r\n", "import * as arrow from 'apache-arrow';\r\nimport * as duckdb from '../src/';\r\nimport { Column, compareTable } from './table_test';\r\n\r\n/// Unfortunately, arrow.Table.from does not build a proper Schema.\r\n/// When it does, we might want to switch back to arrow.Table here instead\r\n/// of arrow Schema + ArrowBatch.\r\ninterface ArrowInsertTest {\r\n    name: string;\r\n    schema: arrow.Schema;\r\n    batches: ArrowBatch[];\r\n    options: duckdb.ArrowInsertOptions;\r\n    query: string;\r\n    expectedColumns: Column[];\r\n}\r\n\r\ninterface ArrowBatch {\r\n    numRows: number;\r\n    columns: arrow.Data[];\r\n}\r\n\r\nconst buildUtf8Array = (values: string[]) => {\r\n    const builder = new arrow.Utf8Builder({\r\n        type: new arrow.Utf8(),\r\n    });\r\n    for (const v of values) {\r\n        builder.append(v);\r\n    }\r\n    builder.finish();\r\n    return builder.flush();\r\n};\r\n\r\nexport function generateXInt32(n: number, cols: number): number[][] {\r\n    const columns = [];\r\n    for (let j = 0; j < cols; ++j) {\r\n        const column = [];\r\n        for (let i = 0; i < n; ++i) {\r\n            column.push(i);\r\n        }\r\n        columns.push(column);\r\n    }\r\n    return columns;\r\n}\r\n\r\nexport function generateArrowXInt32(n: number, cols: number): [arrow.Schema, arrow.RecordBatch[]] {\r\n    const columns = generateXInt32(n, cols);\r\n    const fields = [];\r\n    for (let j = 0; j < cols; ++j) {\r\n        fields.push(new arrow.Field(`v${j}`, new arrow.Int32()));\r\n    }\r\n    const schema = new arrow.Schema(fields);\r\n    const batches = [];\r\n    for (let i = 0; i < n; ) {\r\n        const rows = Math.min(1000, n - i);\r\n        const data = arrow.makeData({\r\n            type: new arrow.Struct(fields),\r\n            children: columns.map(c =>\r\n                arrow.makeData({\r\n                    type: new arrow.Int32(),\r\n                    data: new Int32Array(c.slice(i, i + rows)),\r\n                }),\r\n            ),\r\n        });\r\n        batches.push(new arrow.RecordBatch(schema, data));\r\n        i += rows;\r\n    }\r\n    return [schema, batches];\r\n}\r\n\r\nconst ARROW_INSERT_TESTS: ArrowInsertTest[] = [\r\n    {\r\n        name: 'integers_1',\r\n        schema: new arrow.Schema([\r\n            new arrow.Field('a', new arrow.Int32()),\r\n            new arrow.Field('b', new arrow.Int32()),\r\n            new arrow.Field('c', new arrow.Int32()),\r\n        ]),\r\n        batches: [\r\n            {\r\n                numRows: 3,\r\n                columns: [\r\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\r\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([2, 5, 8]) }),\r\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([3, 6, 9]) }),\r\n                ],\r\n            },\r\n        ],\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: [3, 6, 9] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'combined_1',\r\n        schema: new arrow.Schema([\r\n            new arrow.Field('a', new arrow.Int32()),\r\n            new arrow.Field('b', new arrow.Int16()),\r\n            new arrow.Field('c', new arrow.Utf8()),\r\n        ]),\r\n        batches: [\r\n            {\r\n                numRows: 3,\r\n                columns: [\r\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\r\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([2, 5, 8]) }),\r\n                    buildUtf8Array(['3', '6', '9']),\r\n                ],\r\n            },\r\n        ],\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: ['3', '6', '9'] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'combined_2',\r\n        schema: new arrow.Schema([\r\n            new arrow.Field('a', new arrow.Int32()),\r\n            new arrow.Field('b', new arrow.Int16()),\r\n            new arrow.Field('c', new arrow.Utf8()),\r\n        ]),\r\n        batches: [\r\n            {\r\n                numRows: 3,\r\n                columns: [\r\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\r\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([2, 5, 8]) }),\r\n                    buildUtf8Array(['3', '6', '9']),\r\n                ],\r\n            },\r\n            {\r\n                numRows: 2,\r\n                columns: [\r\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([10, 13]) }),\r\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([11, 14]) }),\r\n                    buildUtf8Array(['12', '15']),\r\n                ],\r\n            },\r\n        ],\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7, 10, 13] },\r\n            { name: 'b', values: [2, 5, 8, 11, 14] },\r\n            { name: 'c', values: ['3', '6', '9', '12', '15'] },\r\n        ],\r\n    },\r\n];\r\n\r\nexport function testArrowInsert(db: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        db().flushFiles();\r\n        conn = db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('Arrow insert from iterable', () => {\r\n        for (const test of ARROW_INSERT_TESTS) {\r\n            it(test.name, () => {\r\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const batches = test.batches.map(b => {\r\n                    const data = arrow.makeData({\r\n                        type: new arrow.Struct(test.schema.fields),\r\n                        children: b.columns,\r\n                    });\r\n                    return new arrow.RecordBatch(test.schema, data);\r\n                });\r\n                const table = new arrow.Table(test.schema, batches);\r\n                conn.insertArrowTable(table, test.options);\r\n                const results = conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport function testArrowInsertAsync(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n        conn = await db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        await conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('Arrow async insert from iterable', () => {\r\n        for (const test of ARROW_INSERT_TESTS) {\r\n            it(test.name, async () => {\r\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const batches = test.batches.map(b => {\r\n                    const data = arrow.makeData({\r\n                        type: new arrow.Struct(test.schema.fields),\r\n                        children: b.columns,\r\n                    });\r\n                    return new arrow.RecordBatch(test.schema, data);\r\n                });\r\n                const table = new arrow.Table(test.schema, batches);\r\n                await conn.insertArrowTable(table, test.options);\r\n                const results = await conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n    describe('Arrow async insert from table', () => {\r\n        it('simple integers', async () => {\r\n            await conn.query(`DROP TABLE IF EXISTS insert_from_table`);\r\n            const table = new arrow.Table({\r\n                a: arrow.makeVector(new Int32Array([1, 4, 7])),\r\n                b: arrow.makeVector(new Int32Array([2, 5, 8])),\r\n                c: arrow.vectorFromArray<arrow.Utf8>(['3', '6', '9']),\r\n            });\r\n            await conn.insertArrowTable(table, {\r\n                name: 'insert_from_vectors',\r\n            });\r\n            const results = await conn.query('select * from insert_from_vectors');\r\n            compareTable(results, [\r\n                { name: 'a', values: [1, 4, 7] },\r\n                { name: 'b', values: [2, 5, 8] },\r\n                { name: 'c', values: ['3', '6', '9'] },\r\n            ]);\r\n        });\r\n    });\r\n}\r\n", "import * as arrow from 'apache-arrow';\r\nimport * as duckdb from '../src/';\r\nimport { DuckDBDataProtocol } from '../src/';\r\nimport { Column, compareTable } from './table_test';\r\n\r\nfunction describeBrowser(description: string, specDefinitions: () => void): void {\r\n    if (typeof window !== 'undefined') {\r\n        describe(description, specDefinitions);\r\n    }\r\n}\r\n\r\nconst encoder = new TextEncoder();\r\n\r\ninterface JSONInsertTest {\r\n    name: string;\r\n    input: string;\r\n    options: duckdb.JSONInsertOptions;\r\n    query: string;\r\n    expectedColumns: Column[];\r\n}\r\n\r\nconst JSON_INSERT_TESTS: JSONInsertTest[] = [\r\n    {\r\n        name: 'rows_integers',\r\n        input: `[\r\n            {\"a\":1, \"b\":2, \"c\":3},\r\n            {\"a\":4, \"b\":5, \"c\":6},\r\n            {\"a\":7, \"b\":8, \"c\":9},\r\n        ]`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: [3, 6, 9] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'cols_integers',\r\n        input: `{\r\n            \"a\": [1, 4, 7],\r\n            \"b\": [2, 5, 8],\r\n            \"c\": [3, 6, 9]\r\n        }`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: [3, 6, 9] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'options_1',\r\n        input: `[\r\n            {\"a\":1, \"b\":2, \"c\":3},\r\n            {\"a\":4, \"b\":5, \"c\":6},\r\n            {\"a\":7, \"b\":8, \"c\":9},\r\n        ]`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n            shape: duckdb.JSONTableShape.ROW_ARRAY,\r\n            columns: {\r\n                a: new arrow.Int16(),\r\n                b: new arrow.Int32(),\r\n                c: new arrow.Utf8(),\r\n            },\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: ['3', '6', '9'] },\r\n        ],\r\n    },\r\n];\r\n\r\nconst TEST_FILE = 'TEST';\r\n\r\nexport function testJSONInsert(db: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        db().flushFiles();\r\n        conn = db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('JSON Insert Sync', () => {\r\n        for (const test of JSON_INSERT_TESTS) {\r\n            it(test.name, () => {\r\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const buffer = encoder.encode(test.input);\r\n                db().registerFileBuffer(TEST_FILE, buffer);\r\n                conn.insertJSONFromPath(TEST_FILE, test.options);\r\n                const results = conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport function testJSONInsertAsync(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n        conn = await db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        await conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('JSON Insert Buffer Async', () => {\r\n        for (const test of JSON_INSERT_TESTS) {\r\n            it(test.name, async () => {\r\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const buffer = encoder.encode(test.input);\r\n                await db().registerFileBuffer(TEST_FILE, buffer);\r\n                await conn.insertJSONFromPath(TEST_FILE, test.options);\r\n                const results = await conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n\r\n    describeBrowser('JSON Insert Blob Async', () => {\r\n        for (const test of JSON_INSERT_TESTS) {\r\n            it(test.name, async () => {\r\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const buffer = encoder.encode(test.input);\r\n                const blob = new Blob([buffer]);\r\n                await db().registerFileHandle(TEST_FILE, blob, DuckDBDataProtocol.BROWSER_FILEREADER, false);\r\n                await conn.insertJSONFromPath(TEST_FILE, test.options);\r\n                const results = await conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n}\r\n", "import * as arrow from 'apache-arrow';\r\nimport * as duckdb from '../src/';\r\nimport { DuckDBDataProtocol } from '../src/';\r\nimport { Column, compareTable } from './table_test';\r\n\r\nfunction describeBrowser(description: string, specDefinitions: () => void): void {\r\n    if (typeof window !== 'undefined') {\r\n        describe(description, specDefinitions);\r\n    }\r\n}\r\n\r\nconst encoder = new TextEncoder();\r\n\r\ninterface CSVInsertTest {\r\n    name: string;\r\n    input: string;\r\n    options: duckdb.CSVInsertOptions;\r\n    query: string;\r\n    expectedColumns: Column[];\r\n}\r\n\r\nconst CSV_INSERT_TESTS: CSVInsertTest[] = [\r\n    {\r\n        name: 'integers_auto_1',\r\n        input: `\"a\",\"b\",\"c\"\r\n1,2,3\r\n4,5,6\r\n7,8,9\r\n`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: [3, 6, 9] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'integers_auto_2',\r\n        input: `a,b,c\r\n1,2,3\r\n4,5,6\r\n7,8,9\r\n`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: [3, 6, 9] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'integers_auto_3',\r\n        input: `a,b,c`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'column0', values: ['a'] },\r\n            { name: 'column1', values: ['b'] },\r\n            { name: 'column2', values: ['c'] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'integers_auto_2',\r\n        input: `a\r\n1\r\n4\r\n7\r\n`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [{ name: 'a', values: [1, 4, 7] }],\r\n    },\r\n    {\r\n        name: 'options_1',\r\n        input: `1,2,3\r\n4,5,6\r\n7,8,9\r\n`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo2',\r\n            header: false,\r\n            detect: false,\r\n            columns: {\r\n                a: new arrow.Int16(),\r\n                b: new arrow.Int32(),\r\n                c: new arrow.Utf8(),\r\n            },\r\n        },\r\n        query: 'SELECT * FROM main.foo2',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            { name: 'c', values: ['3', '6', '9'] },\r\n        ],\r\n    },\r\n    {\r\n        name: 'options_2',\r\n        input: `1|2|01/02/2020\r\n4|5|01/03/2020\r\n7|8|01/04/2020\r\n`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n            detect: false,\r\n            header: false,\r\n            delimiter: '|',\r\n            dateFormat: '%m/%d/%Y',\r\n            columns: {\r\n                a: new arrow.Int16(),\r\n                b: new arrow.Int32(),\r\n                c: new arrow.DateDay(),\r\n            },\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            {\r\n                name: 'c',\r\n                values: [\r\n                    new Date(Date.UTC(2020, 0, 2)),\r\n                    new Date(Date.UTC(2020, 0, 3)),\r\n                    new Date(Date.UTC(2020, 0, 4)),\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: 'options_3',\r\n        input: `1|2|20:32:45 1992-03-02\r\n4|5|20:32:50 1992-03-02\r\n7|8|20:32:55 1992-03-02\r\n`,\r\n        options: {\r\n            schema: 'main',\r\n            name: 'foo',\r\n            detect: false,\r\n            header: false,\r\n            delimiter: '|',\r\n            quote: \"'\",\r\n            timestampFormat: '%H:%M:%S %Y-%m-%d',\r\n            columns: {\r\n                a: new arrow.Int16(),\r\n                b: new arrow.Int32(),\r\n                c: new arrow.TimestampSecond(),\r\n            },\r\n        },\r\n        query: 'SELECT * FROM main.foo',\r\n        expectedColumns: [\r\n            { name: 'a', values: [1, 4, 7] },\r\n            { name: 'b', values: [2, 5, 8] },\r\n            {\r\n                name: 'c',\r\n                values: [\r\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 45)).getTime(),\r\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 50)).getTime(),\r\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 55)).getTime(),\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nconst TEST_FILE = 'TEST';\r\n\r\nexport function testCSVInsert(db: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        db().flushFiles();\r\n        conn = db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('CSV Insert Sync', () => {\r\n        for (const test of CSV_INSERT_TESTS) {\r\n            it(test.name, () => {\r\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const buffer = encoder.encode(test.input);\r\n                db().registerFileBuffer(TEST_FILE, buffer);\r\n                conn.insertCSVFromPath(TEST_FILE, test.options);\r\n                const results = conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport function testCSVInsertAsync(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection;\r\n\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n        conn = await db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        await conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('CSV Insert Buffer Async', () => {\r\n        for (const test of CSV_INSERT_TESTS) {\r\n            it(test.name, async () => {\r\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const buffer = encoder.encode(test.input);\r\n                await db().registerFileBuffer(TEST_FILE, buffer);\r\n                await conn.insertCSVFromPath(TEST_FILE, test.options);\r\n                const results = await conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n\r\n    describeBrowser('CSV Insert Blob Async', () => {\r\n        for (const test of CSV_INSERT_TESTS) {\r\n            it(test.name, async () => {\r\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\r\n                const buffer = encoder.encode(test.input);\r\n                const blob = new Blob([buffer]);\r\n                await db().registerFileHandle(TEST_FILE, blob, DuckDBDataProtocol.BROWSER_FILEREADER, false);\r\n                await conn.insertCSVFromPath(TEST_FILE, test.options);\r\n                const results = await conn.query(test.query);\r\n                compareTable(results, test.expectedColumns);\r\n            });\r\n        }\r\n    });\r\n}\r\n", "import * as duckdb from '../src/';\r\n\r\nexport function testTokenization(db: () => duckdb.DuckDBBindings): void {\r\n    describe('Tokenizer', () => {\r\n        it('SELECT 1', async () => {\r\n            expect(db().tokenize('SELECT 1')).toEqual({\r\n                offsets: [0, 7],\r\n                types: [4, 1],\r\n            });\r\n        });\r\n        it('SELECT * FROM region', async () => {\r\n            expect(db().tokenize('SELECT * FROM region')).toEqual({\r\n                offsets: [0, 7, 9, 14],\r\n                types: [4, 3, 4, 0],\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nexport function testTokenizationAsync(db: () => duckdb.AsyncDuckDB): void {\r\n    describe('Tokenizer', () => {\r\n        it('SELECT 1', async () => {\r\n            expect(await db().tokenize('SELECT 1')).toEqual({\r\n                offsets: [0, 7],\r\n                types: [4, 1],\r\n            });\r\n        });\r\n        it('SELECT * FROM region', async () => {\r\n            expect(await db().tokenize('SELECT * FROM region')).toEqual({\r\n                offsets: [0, 7, 9, 14],\r\n                types: [4, 3, 4, 0],\r\n            });\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../src/';\r\n\r\ninterface TableNameTest {\r\n    name: string;\r\n    input: string;\r\n    tables: string[];\r\n}\r\n\r\nconst TABLENAME_TESTS: TableNameTest[] = [\r\n    {\r\n        name: 'standard',\r\n        input: 'SELECT * FROM my_table',\r\n        tables: ['my_table'],\r\n    },\r\n    {\r\n        name: 'fetch_specific',\r\n        input: 'SELECT col_a FROM my_table',\r\n        tables: ['my_table'],\r\n    },\r\n    {\r\n        name: 'multiple_tables',\r\n        input: 'SELECT * FROM my_table1, my_table2, my_table3',\r\n        tables: ['my_table1', 'my_table2', 'my_table3'],\r\n    },\r\n    {\r\n        name: 'same_table_multiple_times',\r\n        input: 'SELECT col_a FROM my_table, my_table m2, my_table m3',\r\n        tables: ['my_table'],\r\n    },\r\n    {\r\n        name: 'subqueries',\r\n        input: 'SELECT * FROM (SELECT * FROM (SELECT * FROM my_table) bla) bla3',\r\n        tables: ['my_table'],\r\n    },\r\n    {\r\n        name: 'join',\r\n        input: 'SELECT col_a FROM my_table JOIN my_table2 ON (my_table.col_b=my_table2.col_d)',\r\n        tables: ['my_table', 'my_table2'],\r\n    },\r\n    {\r\n        name: 'scalar_subquery',\r\n        input: 'SELECT (SELECT COUNT(*) FROM my_table)',\r\n        tables: ['my_table'],\r\n    },\r\n    {\r\n        name: 'set_operations',\r\n        input: 'SELECT * FROM my_table UNION ALL SELECT * FROM my_table2 INTERSECT SELECT * FROM my_table3',\r\n        tables: ['my_table', 'my_table2', 'my_table3'],\r\n    },\r\n    {\r\n        name: 'window_functions',\r\n        input: 'SELECT row_number() OVER (ORDER BY (SELECT i+j FROM my_table2)) FROM my_table',\r\n        tables: ['my_table', 'my_table2'],\r\n    },\r\n];\r\n\r\nexport function testTableNames(db: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection;\r\n    beforeEach(() => {\r\n        conn = db().connect();\r\n    });\r\n    afterEach(() => {\r\n        conn.close();\r\n    });\r\n    describe('TableNames', () => {\r\n        for (const test of TABLENAME_TESTS) {\r\n            it(test.name, () => {\r\n                const tables = conn.getTableNames(test.input);\r\n                expect(tables).toEqual(test.tables);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport function testTableNamesAsync(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection;\r\n    beforeEach(async () => {\r\n        conn = await db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        await conn.close();\r\n    });\r\n    describe('TableNames Async', () => {\r\n        for (const test of TABLENAME_TESTS) {\r\n            it(test.name, async () => {\r\n                const tables = await conn.getTableNames(test.input);\r\n                expect(tables).toEqual(test.tables);\r\n            });\r\n        }\r\n    });\r\n}\r\n", "import * as duckdb from '../../src';\r\nimport * as arrow from 'apache-arrow';\r\n\r\n// https://github.com/duckdb/duckdb-wasm/issues/332\r\nexport function test332(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection;\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n        conn = await db().connect();\r\n    });\r\n    afterEach(async () => {\r\n        await conn.close();\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('GitHub issues', () => {\r\n        it('332', async () => {\r\n            await db().registerFileText(\r\n                'Products.csv',\r\n                `ProductGroup,Product,Year,Quarter,Revenue,Units,Count,Product Key,Reseller,Product Info,QuarterAsNumber\r\nElectronics,Phone,2018,Q1,103,7,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2018,Q1,102,4,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2019,Q1,98,12,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Computer,2018,Q1,104,3,1,2018-Q1,Samsung,Format=XML; <Properties>\u2026,1\r\nElectronics,Computer,2019,Q1,83,7,1,2019-Q1,Google,Format=XML; <Properties>\u2026,1\r\nMedia,Theater,2018,Q1,17,4,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nMedia,Theater,2019,Q1,20,7,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nMedia,Movies,2018,Q1,25,12,1,2018-Q1,Microsoft,Format=XML; <Properties>\u2026,1\r\nMedia,Movies,2019,Q1,26,13,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2018,Q2,105,5,1,2018-Q2,Samsung,Format=XML; <Properties>\u2026,2\r\nElectronics,Phone,2019,Q2,82,15,1,2019-Q2,LG,Format=XML; <Properties>\u2026,2\r\nElectronics,Computer,2018,Q2,99,4,1,2018-Q2,LG,Format=XML; <Properties>\u2026,2\r\nElectronics,Computer,2019,Q2,84,20,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nMedia,Theater,2018,Q2,17,4,1,2018-Q2,Microsoft,Format=XML; <Properties>\u2026,2\r\nMedia,Theater,2019,Q2,22,5,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nMedia,Movies,2018,Q2,25,12,1,2018-Q2,Samsung,Format=XML; <Properties>\u2026,2\r\nMedia,Movies,2019,Q2,26,14,1,2019-Q2,Google,Format=XML; <Properties>\u2026,2\r\nElectronics,Phone,2000,Q1,103,7,1,2000-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2001,Q1,102,4,1,2001-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2002,Q1,98,12,1,2002-Q1,Microsoft,Format=XML; <Properties>\u2026,1\r\nElectronics,Computer,2003,Q1,104,3,1,2003-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Computer,2004,Q1,83,7,1,2004-Q1,Samsung,Format=XML; <Properties>\u2026,1\r\nMedia,Theater,2005,Q1,17,4,1,2005-Q1,Google,Format=XML; <Properties>\u2026,1\r\nMedia,Theater,2006,Q1,20,7,1,2006-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nMedia,Movies,2007,Q1,25,12,1,2007-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nMedia,Movies,2008,Q1,26,13,1,2008-Q1,Microsoft,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2009,Q2,105,5,1,2009-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nElectronics,Phone,2010,Q2,82,15,1,2010-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nElectronics,Computer,2011,Q2,99,4,1,2011-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nElectronics,Computer,2012,Q2,84,20,1,2012-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nMedia,Theater,2013,Q2,17,4,1,2013-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nMedia,Theater,2014,Q2,22,5,1,2014-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nMedia,Movies,2015,Q2,25,12,1,2015-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nMedia,Movies,2016,Q2,26,14,1,2016-Q2,Samsung,Format=XML; <Properties>\u2026,2\r\nMedia,Movies,2017,Q1,26,13,1,2017-Q1,Google,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2018,Q2,105,5,1,2018-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nElectronics,Phone,2019,Q2,82,15,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\r\nElectronics,Computer,2020,Q2,99,4,1,2020-Q2,Microsoft,Format=XML; <Properties>\u2026,2\r\nElectronics,Phone,2020,Q1,103,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nElectronics,Phone,2020,Q2,102,4,1,2020-Q2,Samsung,Format=XML; <Properties>\u2026,2\r\nElectronics,Phone,2020,Q3,98,12,1,2020-Q3,LG,Format=XML; <Properties>\u2026,3\r\nElectronics,Computer,2020,Q4,104,3,1,2020-Q4,LG,Format=XML; <Properties>\u2026,4\r\nElectronics,Computer,2020,Q1,83,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\r\nMedia,Theater,2020,Q1,17,4,1,2020-Q1,Microsoft,Format=XML; <Properties>\u2026,1\r\nMedia,Theater,2020,Q1,20,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\r\n`,\r\n            );\r\n            await conn.query(\"CREATE TABLE products AS SELECT * FROM 'Products.csv'\");\r\n            const all = await conn.query('SELECT * FROM products');\r\n            expect(all.schema.fields.length).toBe(11);\r\n            expect(all.schema.fields[0].name).toBe('ProductGroup');\r\n            const insensitive = await conn.query<{\r\n                ProductGroup: arrow.Utf8;\r\n            }>('SELECT productgroup FROM products GROUP BY productgroup');\r\n            expect(insensitive.schema.fields.length).toBe(1);\r\n            expect(insensitive.schema.fields[0].name).toBe('ProductGroup');\r\n            expect(insensitive.toArray().length).toEqual(2);\r\n            await conn.query('DROP TABLE products');\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../../src';\r\nimport * as arrow from 'apache-arrow';\r\n\r\n// https://github.com/duckdb/duckdb-wasm/issues/334\r\nexport function test334(adb: () => duckdb.AsyncDuckDB): void {\r\n    describe('GitHub issues', () => {\r\n        describe('334', () => {\r\n            it('CSV insert', async () => {\r\n                await adb().registerFileText(`data.csv`, '1|foo\\n2|bar\\n');\r\n                const conn = await adb().connect();\r\n                await conn.insertCSVFromPath('data.csv', {\r\n                    schema: 'main',\r\n                    name: 'foo',\r\n                    detect: false,\r\n                    header: false,\r\n                    delimiter: '|',\r\n                    columns: {\r\n                        col1: new arrow.Int32(),\r\n                        col2: new arrow.Utf8(),\r\n                    },\r\n                });\r\n                await conn.query('DROP TABLE IF EXISTS foo');\r\n                await conn.close();\r\n                await adb().dropFile('data.csv');\r\n            });\r\n            it('JSON row insert', async () => {\r\n                await adb().registerFileText(\r\n                    'rows.json',\r\n                    `[\r\n                    { \"col1\": 1, \"col2\": \"foo\" },\r\n                    { \"col1\": 2, \"col2\": \"bar\" },\r\n                ]`,\r\n                );\r\n                const conn = await adb().connect();\r\n                await conn.insertJSONFromPath('rows.json', { name: 'rows' });\r\n                await conn.query('DROP TABLE IF EXISTS rows');\r\n                await conn.close();\r\n                await adb().dropFile('rows.json');\r\n            });\r\n            it('JSON column insert', async () => {\r\n                await adb().registerFileText(\r\n                    'columns.json',\r\n                    `{\r\n                    \"col1\": [1, 2],\r\n                    \"col2\": [\"foo\", \"bar\"]\r\n                }`,\r\n                );\r\n                const conn = await adb().connect();\r\n                await conn.insertJSONFromPath('columns.json', { name: 'columns' });\r\n                await conn.query('DROP TABLE IF EXISTS columns');\r\n                await conn.close();\r\n                await adb().dropFile('columns.json');\r\n            });\r\n            it('Query result materialized', async () => {\r\n                const conn = await adb().connect();\r\n                await conn.query<{ v: arrow.Int }>(`\r\n                SELECT * FROM generate_series(1, 100) t(v)\r\n            `);\r\n                await conn.close();\r\n            });\r\n            it('Query result streamed', async () => {\r\n                const conn = await adb().connect();\r\n                for await (const batch of await conn.send<{ v: arrow.Int }>(`\r\n                SELECT * FROM generate_series(1, 100) t(v)\r\n            `)) {\r\n                    expect(batch.numRows).toBeGreaterThan(0);\r\n                }\r\n                await conn.close();\r\n            });\r\n            it('Prepared statement materialized', async () => {\r\n                const conn = await adb().connect();\r\n                const stmt = await conn.prepare(`SELECT v + ? FROM generate_series(0, 10000) as t(v);`);\r\n                await stmt.query(234);\r\n                await stmt.close();\r\n                await conn.close();\r\n            });\r\n            it('Prepared statement streamed', async () => {\r\n                const conn = await adb().connect();\r\n                const stmt = await conn.prepare(`SELECT v + ? FROM generate_series(0, 10000) as t(v);`);\r\n                for await (const batch of await stmt.send(234)) {\r\n                    expect(batch.numRows).toBeGreaterThan(0);\r\n                }\r\n                await stmt.close();\r\n                await conn.close();\r\n            });\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../../src';\r\nimport * as arrow from 'apache-arrow';\r\n\r\n// https://github.com/duckdb/duckdb-wasm/issues/393\r\nexport function test393(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n    });\r\n    afterEach(async () => {\r\n        if (conn) {\r\n            await conn.close();\r\n            conn = null;\r\n        }\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('GitHub issues', () => {\r\n        it('393', async () => {\r\n            await db().open({\r\n                path: ':memory:',\r\n                query: {\r\n                    castTimestampToDate: false,\r\n                },\r\n            });\r\n            conn = await db().connect();\r\n            const resultWithoutCast = await conn.query<{\r\n                ts: arrow.TimestampMillisecond;\r\n            }>(`SELECT TIMESTAMP '1992-03-22 01:02:03' as ts`);\r\n            expect(resultWithoutCast.toArray()[0]?.ts).toEqual(new Date(Date.UTC(1992, 2, 22, 1, 2, 3)).getTime());\r\n\r\n            await db().open({\r\n                path: ':memory:',\r\n                query: {\r\n                    castTimestampToDate: true,\r\n                },\r\n            });\r\n            conn = await db().connect();\r\n            const resultWithCast = await conn.query<{\r\n                ts: arrow.DateMillisecond;\r\n            }>(`SELECT TIMESTAMP '1992-03-22 01:02:03' as ts`);\r\n            expect(resultWithCast.toArray()[0]?.ts).toEqual(new Date(Date.UTC(1992, 2, 22, 1, 2, 3)));\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../../src';\r\nimport * as arrow from 'apache-arrow';\r\n\r\n// https://github.com/duckdb/duckdb-wasm/issues/448\r\nexport function test448(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n    });\r\n    afterEach(async () => {\r\n        if (conn) {\r\n            await conn.close();\r\n            conn = null;\r\n        }\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('GitHub issues', () => {\r\n        it('448', async () => {\r\n            conn = await db().connect();\r\n            await conn.query(`create temp table test448(i integer)`);\r\n            await conn.query(`insert into test448 values (1),(2),(1)`);\r\n            let result = await conn.query(`select * from test448`);\r\n            expect(result.numCols).toBe(1);\r\n            expect(result.numRows).toBe(3);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 1]));\r\n            result = await conn.query<{ i: arrow.Map_<arrow.Int32, arrow.Uint64> }>(`select histogram(i) from test448`);\r\n            expect(result.numCols).toBe(1);\r\n            expect(result.numRows).toBe(1);\r\n            const array = result.getChildAt(0)!.toArray();\r\n            expect(array.length).toEqual(1);\r\n            expect(array[0].toString()).toEqual('{1: 2, 2: 1}');\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../../src';\r\nimport * as arrow from 'apache-arrow';\r\n\r\n// https://github.com/duckdb/duckdb-wasm/issues/470\r\nexport function test470(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n    });\r\n    afterEach(async () => {\r\n        if (conn) {\r\n            await conn.close();\r\n            conn = null;\r\n        }\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('GitHub issues', () => {\r\n        it('470', async () => {\r\n            // Baseline without cast: we expect an error to be thrown because of the duration type that is emitted\r\n            await db().open({\r\n                path: ':memory:',\r\n                query: {\r\n                    castDurationToTime64: false,\r\n                },\r\n            });\r\n            conn = await db().connect();\r\n            const result1 = await conn.query<{\r\n                interval: arrow.TimeMicrosecond;\r\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\r\n            expect(result1.toArray()[0]?.interval?.toString()).toEqual('0,3');\r\n\r\n            // Cast explicitly enabled: Time64 value is returned\r\n            await db().open({\r\n                path: ':memory:',\r\n                query: {\r\n                    castDurationToTime64: true,\r\n                },\r\n            });\r\n            conn = await db().connect();\r\n            const resultWithCast = await conn.query<{\r\n                interval: arrow.TimeMicrosecond;\r\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\r\n            expect(resultWithCast.toArray()[0]?.interval?.toString()).toEqual('0,3');\r\n\r\n            // Cast should be on by default\r\n            await db().open({\r\n                path: ':memory:',\r\n                query: {},\r\n            });\r\n            conn = await db().connect();\r\n            const resultWithDefault = await conn.query<{\r\n                interval: arrow.TimeMicrosecond;\r\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\r\n            expect(resultWithDefault.toArray()[0]?.interval?.toString()).toEqual('0,3');\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../../src';\r\nimport * as arrow from 'apache-arrow';\r\n\r\n// https://github.com/duckdb/duckdb-wasm/issues/477\r\n// Note that when ArrowJS supports negative decimals, castDecimalToDouble should probably be deprecated.\r\nexport function test477(db: () => duckdb.AsyncDuckDB): void {\r\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\r\n    beforeEach(async () => {\r\n        await db().flushFiles();\r\n    });\r\n    afterEach(async () => {\r\n        if (conn) {\r\n            await conn.close();\r\n            conn = null;\r\n        }\r\n        await db().flushFiles();\r\n        await db().dropFiles();\r\n    });\r\n    describe('GitHub issues', () => {\r\n        it('477', async () => {\r\n            // Baseline without cast: we expect the negative decimal values to not work accurately\r\n            await db().open({\r\n                path: ':memory:',\r\n                query: {},\r\n            });\r\n            conn = await db().connect();\r\n            const resultWithoutCast = await conn.query(`SELECT (-1.9)::DECIMAL(2,1) as decimal`);\r\n            expect(resultWithoutCast.schema.fields[0].type.scale).toEqual(1);\r\n            expect(resultWithoutCast.schema.fields[0].type.precision).toEqual(2);\r\n            // If this assertion breaks, arrow JS was likely updated to handle negative values\r\n            expect(resultWithoutCast.toArray()[0]?.decimal == -19).toBe(false);\r\n\r\n            // Using castDecimalToDouble we force decimals to be cast to doubles, note the inevitable imprecision.\r\n            await db().open({\r\n                path: ':memory:',\r\n                query: {\r\n                    castDecimalToDouble: true,\r\n                },\r\n            });\r\n            conn = await db().connect();\r\n            const resultWithCast = await conn.query<{\r\n                decimal: arrow.Float64;\r\n            }>(`SELECT (-1.9)::DECIMAL(2,1) as decimal`);\r\n            expect(resultWithCast.toArray()[0]?.decimal).toEqual(-1.9000000000000001);\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb from '../../src/';\r\nimport { test332 } from './github_332.test';\r\nimport { test334 } from './github_334.test';\r\nimport { test393 } from './github_393.test';\r\nimport { test448 } from './github_448.test';\r\nimport { test470 } from './github_470.test';\r\nimport { test477 } from \"./github_477.test\";\r\n\r\nexport function testRegressionAsync(adb: () => duckdb.AsyncDuckDB): void {\r\n    test332(adb);\r\n    test334(adb);\r\n    test393(adb);\r\n    test448(adb);\r\n    test470(adb);\r\n    test477(adb);\r\n}\r\n", "import * as duckdb from '../src/';\r\nimport { Float64, Int32, Utf8 } from 'apache-arrow';\r\n\r\nexport function testUDF(db: () => duckdb.DuckDBBindings): void {\r\n    let conn: duckdb.DuckDBConnection;\r\n    beforeEach(() => {\r\n        conn = db().connect();\r\n    });\r\n\r\n    afterEach(() => {\r\n        conn.close();\r\n        db().flushFiles();\r\n        db().dropFiles();\r\n    });\r\n\r\n    describe('UDF', () => {\r\n        it('simple', async () => {\r\n            conn.createScalarFunction('jsudf', new Int32(), a => a);\r\n\r\n            const result = conn.query(\r\n                'SELECT max(jsudf(v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([10000]));\r\n        });\r\n\r\n        it('double', async () => {\r\n            conn.createScalarFunction('jsudf2', new Float64(), a => a);\r\n\r\n            const result = conn.query(\r\n                'SELECT max(jsudf2(v::DOUBLE))::DOUBLE as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Float64Array([10000]));\r\n        });\r\n\r\n        it('2 args', async () => {\r\n            conn.createScalarFunction('jsudf3', new Int32(), (a, b) => a + b);\r\n\r\n            const result = conn.query(\r\n                'SELECT max(jsudf3(v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([20000]));\r\n        });\r\n\r\n        it('3 args', async () => {\r\n            conn.createScalarFunction('jsudf3args', new Int32(), (a, b, c) => a + b + c);\r\n\r\n            const result = conn.query(\r\n                'SELECT max(jsudf3args(v::INTEGER, v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([30000]));\r\n        });\r\n\r\n        it('4 args', async () => {\r\n            conn.createScalarFunction('jsudf4args', new Int32(), (a, b, c, d) => a + b + c + d);\r\n\r\n            const result = conn.query(\r\n                'SELECT max(jsudf4args(v::INTEGER, v::INTEGER, v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([40000]));\r\n        });\r\n\r\n        it('noargs', async () => {\r\n            conn.createScalarFunction('jsudf4', new Int32(), () => 42);\r\n            const result = conn.query('SELECT max(jsudf4())::INTEGER as foo FROM generate_series(1, 10000) as t(v)');\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([42]));\r\n        });\r\n        it('withnulls', async () => {\r\n            conn.createScalarFunction('jsudf5', new Int32(), a => (a == null ? -100 : a));\r\n            const result = conn.query(\r\n                'SELECT min(jsudf5((case when v % 2 = 0 then v else null end)::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\r\n        });\r\n\r\n        it('stringparam', async () => {\r\n            function jsudf6(s: string) {\r\n                return s.length;\r\n            }\r\n            conn.createScalarFunction('jsudf6', new Int32(), jsudf6);\r\n            const result = conn.query(\r\n                \"SELECT max(jsudf6('str_' || v))::INTEGER as foo FROM generate_series(1, 10000) as t(v)\",\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([9]));\r\n        });\r\n\r\n        it('stringparamnulls', async () => {\r\n            function jsudf7(s: string) {\r\n                if (s == undefined) {\r\n                    return 0;\r\n                } else {\r\n                    return s.length;\r\n                }\r\n            }\r\n            conn.createScalarFunction('jsudf7', new Int32(), jsudf7);\r\n            const result = conn.query(\r\n                \"SELECT max(jsudf7((case when v % 2 = 0 then 'str_' || v else null end)::VARCHAR))::INTEGER as foo FROM generate_series(1, 10000) as t(v)\",\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([9]));\r\n        });\r\n\r\n        it('nullintreturn', async () => {\r\n            conn.createScalarFunction('jsudf8', new Int32(), a => undefined);\r\n\r\n            const result = conn.query(\r\n                'SELECT max(COALESCE(jsudf8(v::INTEGER), 42))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([42]));\r\n        });\r\n\r\n        it('stringreturn', async () => {\r\n            conn.createScalarFunction('jsudf9', new Utf8(), a => 'Hello ' + a);\r\n\r\n            const result = conn.query(\r\n                'SELECT max(LENGTH(jsudf9(v::INTEGER)))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([11]));\r\n        });\r\n\r\n        it('nullstringreturn', async () => {\r\n            conn.createScalarFunction('jsudf10', new Utf8(), a => (a % 2 == 0 ? 'Hello' : undefined));\r\n\r\n            const result = conn.query(\r\n                'SELECT COUNT(jsudf10(v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([5000]));\r\n        });\r\n\r\n        it('struct', async () => {\r\n            conn.createScalarFunction('jsudf11', new Int32(), a => (a.x == null ? -100 : a.x));\r\n            const result = conn.query(\r\n                `SELECT min(jsudf11({'x': (case when v % 2 = 0 then v else null end)::INTEGER, 'y': 42}))::INTEGER as foo FROM generate_series(1, 10000) as t(v)`,\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\r\n        });\r\n\r\n        it('structnested', async () => {\r\n            conn.createScalarFunction('jsudf12', new Int32(), a => (a.x.y == null ? -100 : a.x.y));\r\n            const result = conn.query(\r\n                `SELECT min(jsudf12({'x': {'y': (case when v % 2 = 0 then v else null end)::INTEGER }, 'z': 42}))::INTEGER as foo FROM generate_series(1, 10000) as t(v)`,\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\r\n        });\r\n\r\n        it('structnestednull', async () => {\r\n            conn.createScalarFunction('jsudf13', new Int32(), a => (a.x?.y == null ? -100 : a.x!.y));\r\n            const result = conn.query(\r\n                `SELECT min(jsudf13({'x': (case when v % 2 = 0 then {'y': v::INTEGER } else null end), 'z': 42}))::INTEGER as foo FROM generate_series(1, 10000) as t(v)`,\r\n            );\r\n\r\n            expect(result.numRows).toEqual(1);\r\n            expect(result.numCols).toEqual(1);\r\n            expect(result.getChildAt(0)?.length).toEqual(1);\r\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\r\n        });\r\n    });\r\n}\r\n", "import * as duckdb_blocking from '../src/targets/duckdb-browser-blocking';\r\nimport * as duckdb from '../src/targets/duckdb';\r\nimport * as check from 'wasm-feature-detect';\r\n\r\n// Configure the worker\r\nconst DUCKDB_BUNDLES: duckdb.DuckDBBundles = {\r\n    mvp: {\r\n        mainModule: new URL('/static/duckdb-mvp.wasm', window.location.href).href,\r\n        mainWorker: new URL('/static/duckdb-browser-mvp.worker.js', window.location.href).href,\r\n    },\r\n    eh: {\r\n        mainModule: new URL('/static/duckdb-eh.wasm', window.location.href).href,\r\n        mainWorker: new URL('/static/duckdb-browser-eh.worker.js', window.location.href).href,\r\n    },\r\n    coi: {\r\n        mainModule: new URL('/static/duckdb-coi.wasm', window.location.href).href,\r\n        mainWorker: new URL('/static/duckdb-browser-coi.worker.js', window.location.href).href,\r\n        pthreadWorker: new URL('/static/duckdb-browser-coi.pthread.worker.js', window.location.href).href,\r\n    },\r\n};\r\nlet DUCKDB_BUNDLE: duckdb.DuckDBBundle | null = null;\r\n\r\ndescribe('wasm check', () => {\r\n    it('worker and wasm urls', async () => {\r\n        if (\r\n            (await duckdb.getPlatformFeatures()).crossOriginIsolated &&\r\n            (await check.exceptions()) &&\r\n            (await check.threads())\r\n        ) {\r\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.coi!.mainModule);\r\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.coi!.mainWorker);\r\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(DUCKDB_BUNDLES.coi!.pthreadWorker);\r\n        }\r\n        if ((await check.exceptions()) && !(await check.threads())) {\r\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.eh!.mainModule);\r\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.eh!.mainWorker);\r\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(null);\r\n        }\r\n        if (!(await check.exceptions())) {\r\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.mvp!.mainModule);\r\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.mvp!.mainWorker);\r\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(null);\r\n        }\r\n    });\r\n});\r\n\r\n// Loading debug symbols, especially for WASM take insanely long so we just disable the test timeout\r\njasmine.DEFAULT_TIMEOUT_INTERVAL = 60000;\r\n\r\n// Resolve a buffer by fetching from disk\r\nconst resolveBuffer = async (url: string) => {\r\n    const req = await fetch(`/data${url}`);\r\n    if (!req.ok) return null;\r\n    return new Uint8Array(await req.arrayBuffer());\r\n};\r\n\r\n// Resolve test data\r\nconst resolveData = async (url: string) => {\r\n    switch (url) {\r\n        case '/uni/all.zip':\r\n            return await resolveBuffer('/uni/all.zip');\r\n        case '/uni/assistenten.parquet':\r\n            return await resolveBuffer('/uni/assistenten.parquet');\r\n        case '/uni/studenten.parquet':\r\n            return await resolveBuffer('/uni/studenten.parquet');\r\n        case '/uni/hoeren.parquet':\r\n            return await resolveBuffer('/uni/hoeren.parquet');\r\n        case '/uni/vorlesungen.parquet':\r\n            return await resolveBuffer('/uni/vorlesungen.parquet');\r\n        case '/tpch/0_01/parquet/lineitem.parquet':\r\n            return await resolveBuffer('/tpch/0_01/parquet/lineitem.parquet');\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\n// Test environment\r\nlet db: duckdb_blocking.DuckDBBindings | null = null;\r\nlet adb: duckdb.AsyncDuckDB | null = null;\r\nlet worker: Worker | null = null;\r\n\r\nbeforeAll(async () => {\r\n    const logger = new duckdb_blocking.VoidLogger();\r\n    db = await duckdb_blocking.createDuckDB(DUCKDB_BUNDLES, logger, duckdb_blocking.BROWSER_RUNTIME);\r\n    await db.instantiate(_ => {});\r\n\r\n    DUCKDB_BUNDLE = await duckdb.selectBundle(DUCKDB_BUNDLES);\r\n    worker = await duckdb.createWorker(DUCKDB_BUNDLE!.mainWorker!);\r\n    adb = new duckdb.AsyncDuckDB(logger, worker);\r\n    await adb.instantiate(DUCKDB_BUNDLE!.mainModule, DUCKDB_BUNDLE!.pthreadWorker);\r\n});\r\n\r\nafterAll(async () => {\r\n    if (worker) worker.terminate();\r\n});\r\n\r\nimport { testAllTypes, testAllTypesAsync } from './all_types.test';\r\nimport { testHTTPFS, testHTTPFSAsync } from './httpfs_test';\r\nimport { testBindings, testAsyncBindings } from './bindings.test';\r\nimport { testBatchStream } from './batch_stream.test';\r\nimport { testAsyncBatchStream } from './batch_stream_async.test';\r\nimport { testFilesystem } from './filesystem.test';\r\nimport { testArrowInsert, testArrowInsertAsync } from './insert_arrow.test';\r\nimport { testJSONInsert, testJSONInsertAsync } from './insert_json.test';\r\nimport { testCSVInsert, testCSVInsertAsync } from './insert_csv.test';\r\nimport { testTokenization, testTokenizationAsync } from './tokenizer.test';\r\nimport { testTableNames, testTableNamesAsync } from './tablenames.test';\r\nimport { testRegressionAsync } from './regression';\r\nimport { testUDF } from './udf.test';\r\n//import { testEXCEL } from './excel.test';\r\n//import { testJSON } from './json.test';\r\n\r\nconst baseURL = window.location.origin;\r\nconst dataURL = `${baseURL}/data`;\r\n\r\ntestHTTPFS(() => db!);\r\ntestHTTPFSAsync(() => adb!, resolveData, dataURL);\r\ntestUDF(() => db!);\r\ntestTableNames(() => db!);\r\ntestTableNamesAsync(() => adb!);\r\ntestRegressionAsync(() => adb!);\r\ntestAllTypes(() => db!);\r\ntestAllTypesAsync(() => adb!);\r\ntestBindings(() => db!, dataURL);\r\ntestAsyncBindings(() => adb!, dataURL, duckdb.DuckDBDataProtocol.HTTP);\r\ntestBatchStream(() => db!);\r\ntestAsyncBatchStream(() => adb!);\r\ntestFilesystem(() => adb!, resolveData, dataURL, duckdb.DuckDBDataProtocol.HTTP);\r\ntestArrowInsert(() => db!);\r\ntestArrowInsertAsync(() => adb!);\r\ntestJSONInsert(() => db!);\r\ntestJSONInsertAsync(() => adb!);\r\ntestCSVInsert(() => db!);\r\ntestCSVInsertAsync(() => adb!);\r\ntestTokenization(() => db!);\r\ntestTokenizationAsync(() => adb!);\r\n//testEXCEL(() => db!);\r\n//testJSON(() => db!);\r\n"],
  "mappings": "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",
  "names": ["exports", "module", "__extends", "__assign", "__rest", "__decorate", "__param", "__metadata", "__awaiter", "__generator", "__exportStar", "__values", "__read", "__spread", "__spreadArrays", "__spreadArray", "__await", "__asyncGenerator", "__asyncDelegator", "__asyncValues", "__makeTemplateObject", "__importStar", "__importDefault", "__classPrivateFieldGet", "__classPrivateFieldSet", "__classPrivateFieldIn", "__createBinding", "root", "v", "is224", "method", "blocks", "exports", "module", "tslib", "it", "source", "pump", "it", "events", "err", "MetadataVersion", "UnionMode", "Precision", "DateUnit", "TimeUnit", "IntervalUnit", "MessageHeader", "Type", "BufferType", "x", "_a", "instance", "instance", "_a", "instance", "getBool", "setBool", "sum", "byteLength", "nullBitmap", "length", "getBool", "instance", "instance", "instance", "_a", "_b", "_d", "_c", "instance", "begin", "end", "newData", "_a", "size", "_a", "_b", "_c", "_d", "Encoding", "Builder", "MetadataVersion", "Endianness", "DictionaryKind", "Binary", "Bool", "DateUnit", "Date", "DateUnit", "Decimal", "TimeUnit", "FixedSizeBinary", "FixedSizeList", "Precision", "Precision", "IntervalUnit", "IntervalUnit", "List", "Map", "Null", "TimeUnit", "TimeUnit", "UnionMode", "UnionMode", "Utf8", "Type", "Type", "MetadataVersion", "Schema", "Field", "Long", "Builder", "ByteBuffer", "Schema", "db", "Long", "_b", "_c", "Int64", "Uint64", "sum", "Field", "Int64", "Field", "Field", "Field", "Field", "Field", "instance", "instance", "instance", "type", "Field", "_a", "Schema", "schema", "Field", "batches", "_c", "_b", "instance", "data", "indices", "oldToNew", "_a", "Schema", "Field", "instance", "_b", "_a", "BodyCompressionMethod", "CompressionType", "method", "Buffer", "RecordBatch", "Buffer", "RecordBatch", "MessageHeader", "MetadataVersion", "MessageHeader", "Long", "Null", "Binary", "Bool", "Utf8", "Decimal", "Date", "List", "FixedSizeBinary", "FixedSizeList", "Map", "instance", "Schema", "RecordBatch", "DictionaryBatch", "Field", "FieldNode", "sum", "Long", "Builder", "ByteBuffer", "Message", "Schema", "RecordBatch", "DictionaryBatch", "FieldNode", "Field", "Type", "Decimal", "Date", "FixedSizeBinary", "FixedSizeList", "Map", "instance", "Buffer", "Message", "_a", "_b", "_c", "self", "FieldNode", "Message", "RecordBatch", "DictionaryBatch", "it", "_a", "reader", "tmp", "decoder", "f64", "blocks", "TEXT_ENCODER", "worker", "TEXT_ENCODER", "e", "method", "xhr", "result", "DuckDB", "require", "err", "asm", "getBinary", "instance", "module", "exports", "getValue", "fd", "tmp", "Module", "out", "family", "type", "proto", "canon", "addr", "port", "ai", "sum", "date", "ret", "response", "DuckDB", "import_meta", "DuckDB", "require", "err", "asm", "getBinary", "instance", "module", "exports", "getValue", "fd", "tmp", "Module", "out", "family", "type", "proto", "canon", "addr", "port", "ai", "sum", "date", "ret", "DuckDB", "DuckDB", "db", "TEXT_ENCODER", "worker", "_p", "Worker", "db", "module", "adb", "resolveData", "db", "baseURL", "adb", "db", "testRows", "db", "decoder", "db", "resolveData", "Schema", "Field", "db", "encoder", "db", "describeBrowser", "encoder", "TEST_FILE", "db", "db", "db", "db", "adb", "db", "db", "db", "db", "adb", "db"]
}
