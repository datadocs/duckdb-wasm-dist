{
  "version": 3,
  "sources": ["../../js-sha256/src/sha256.js", "../src/bindings/connection.ts", "../src/status.ts", "../src/bindings/udf_runtime.ts", "../src/bindings/runtime.ts", "../src/bindings/file_stats.ts", "../src/json_typedef.ts", "../src/bindings/bindings_base.ts", "../src/bindings/config.ts", "../src/bindings/insert_options.ts", "../src/log.ts", "../../wasm-feature-detect/dist/esm/index.js", "../src/version.ts", "../src/platform.ts", "../src/utils/s3_helper.ts", "../src/bindings/runtime_browser.ts", "../src/bindings/duckdb-mvp.js", "../src/bindings/bindings_browser_base.ts", "../src/bindings/bindings_browser_mvp.ts", "../src/bindings/duckdb-eh.js", "../src/bindings/bindings_browser_eh.ts", "../src/targets/duckdb-browser-blocking.ts"],
  "sourcesContent": ["/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "import * as arrow from 'apache-arrow';\nimport { DuckDBBindings } from './bindings_interface';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\n\n/** A thin helper to bind the connection id and talk record batches */\nexport class DuckDBConnection {\n    /** The bindings */\n    protected _bindings: DuckDBBindings;\n    /** The connection handle */\n    protected _conn: number;\n\n    /** Constructor */\n    constructor(bindings: DuckDBBindings, conn: number) {\n        this._bindings = bindings;\n        this._conn = conn;\n    }\n\n    /** Close a connection */\n    public close(): void {\n        this._bindings.disconnect(this._conn);\n    }\n\n    /** Brave souls may use this function to consume the underlying connection id */\n    public useUnsafe<R>(callback: (bindings: DuckDBBindings, conn: number) => R) {\n        return callback(this._bindings, this._conn);\n    }\n\n    /** Run a query */\n    public query<T extends { [key: string]: arrow.DataType } = any>(text: string): arrow.Table<T> {\n        const buffer = this._bindings.runQuery(this._conn, text);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader);\n    }\n\n    /** Send a query */\n    public async send<T extends { [key: string]: arrow.DataType } = any>(\n        text: string,\n    ): Promise<arrow.RecordBatchStreamReader<T>> {\n        let header = this._bindings.startPendingQuery(this._conn, text);\n        while (header == null) {\n            header = await new Promise((resolve, reject) => {\n                try {\n                    resolve(this._bindings.pollPendingQuery(this._conn));\n                } catch (e: any) {\n                    reject(e);\n                }\n            });\n        }\n        const iter = new ResultStreamIterator(this._bindings, this._conn, header);\n        const reader = arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isSync());\n        console.assert(reader.isStream());\n        return reader;\n    }\n\n    /** Cancel a query that was sent earlier */\n    public cancelSent(): boolean {\n        return this._bindings.cancelPendingQuery(this._conn);\n    }\n\n    /** Get table names */\n    public getTableNames(query: string): string[] {\n        return this._bindings.getTableNames(this._conn, query);\n    }\n\n    /** Create a prepared statement */\n    public prepare<T extends { [key: string]: arrow.DataType } = any>(text: string): PreparedStatement {\n        const stmt = this._bindings.createPrepared(this._conn, text);\n        return new PreparedStatement<T>(this._bindings, this._conn, stmt);\n    }\n\n    /** Create a scalar function */\n    public createScalarFunction(name: string, returns: arrow.DataType, func: (...args: any[]) => void): void {\n        this._bindings.createScalarFunction(this._conn, name, returns, func);\n    }\n\n    /** Insert an arrow table */\n    public insertArrowTable(table: arrow.Table, options: ArrowInsertOptions): void {\n\tconst buffer = arrow.tableToIPC(table, 'stream');\n        this.insertArrowFromIPCStream(buffer, options);\n    }\n    /** Insert an arrow table from an ipc stream */\n    public insertArrowFromIPCStream(buffer: Uint8Array, options: ArrowInsertOptions): void {\n        this._bindings.insertArrowFromIPCStream(this._conn, buffer, options);\n    }\n\n    /** Inesrt csv file from path */\n    public insertCSVFromPath(path: string, options: CSVInsertOptions): void {\n        this._bindings.insertCSVFromPath(this._conn, path, options);\n    }\n    /** Insert json file from path */\n    public insertJSONFromPath(path: string, options: JSONInsertOptions): void {\n        this._bindings.insertJSONFromPath(this._conn, path, options);\n    }\n}\n\n/** A result stream iterator */\nexport class ResultStreamIterator implements Iterable<Uint8Array> {\n    /** First chunk? */\n    _first: boolean;\n    /** Reached end of stream? */\n    _depleted: boolean;\n\n    constructor(protected bindings: DuckDBBindings, protected conn: number, protected header: Uint8Array) {\n        this._first = true;\n        this._depleted = false;\n    }\n\n    next(): IteratorResult<Uint8Array> {\n        if (this._first) {\n            this._first = false;\n            return { done: false, value: this.header };\n        }\n        if (this._depleted) {\n            return { done: true, value: null };\n        }\n        const bufferI8 = this.bindings.fetchQueryResults(this.conn);\n        this._depleted = bufferI8.length == 0;\n        return {\n            done: this._depleted,\n            value: bufferI8,\n        };\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n\n/** A thin helper to bind the prepared statement id*/\nexport class PreparedStatement<T extends { [key: string]: arrow.DataType } = any> {\n    /** The bindings */\n    protected readonly bindings: DuckDBBindings;\n    /** The connection id */\n    protected readonly connectionId: number;\n    /** The statement id */\n    protected readonly statementId: number;\n\n    /** Constructor */\n    constructor(bindings: DuckDBBindings, connectionId: number, statementId: number) {\n        this.bindings = bindings;\n        this.connectionId = connectionId;\n        this.statementId = statementId;\n    }\n\n    /** Close a prepared statement */\n    public close() {\n        this.bindings.closePrepared(this.connectionId, this.statementId);\n    }\n\n    /** Run a prepared statement */\n    public query(...params: any[]): arrow.Table<T> {\n        const buffer = this.bindings.runPrepared(this.connectionId, this.statementId, params);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\n    }\n\n    /** Send a prepared statement */\n    public send(...params: any[]): arrow.RecordBatchStreamReader<T> {\n        const header = this.bindings.sendPrepared(this.connectionId, this.statementId, params);\n        const iter = new ResultStreamIterator(this.bindings, this.connectionId, header);\n        const reader = arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isSync());\n        console.assert(reader.isStream());\n        return reader as arrow.RecordBatchStreamReader;\n    }\n}\n", "export enum StatusCode {\n    SUCCESS = 0,\n}\n", "import { DuckDBRuntime } from './runtime';\nimport { DuckDBModule } from './duckdb_module';\n\nconst TEXT_ENCODER = new TextEncoder();\nconst TEXT_DECODER = new TextDecoder('utf-8');\n\nfunction storeError(mod: DuckDBModule, response: number, message: string) {\n    const msgBuffer = TEXT_ENCODER.encode(message);\n    const heapAddr = mod._malloc(msgBuffer.byteLength);\n    const heapArray = mod.HEAPU8.subarray(heapAddr, heapAddr + msgBuffer.byteLength);\n    heapArray.set(msgBuffer);\n    mod.HEAPF64[(response >> 3) + 0] = 1;\n    mod.HEAPF64[(response >> 3) + 1] = heapAddr;\n    mod.HEAPF64[(response >> 3) + 2] = heapArray.byteLength;\n}\n\nfunction getTypeSize(ptype: string) {\n    switch (ptype) {\n        case 'UINT8':\n        case 'INT8':\n            return 1;\n        case 'INT32':\n        case 'FLOAT':\n            return 4;\n        case 'INT64':\n        case 'UINT64':\n        case 'DOUBLE':\n        case 'VARCHAR':\n            return 8;\n        default:\n            return 0;\n    }\n}\n\nfunction ptrToArray(mod: DuckDBModule, ptr: number, ptype: string, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * getTypeSize(ptype));\n    switch (ptype) {\n        case 'UINT8':\n            return new Uint8Array(heap.buffer, heap.byteOffset, n);\n        case 'INT8':\n            return new Int8Array(heap.buffer, heap.byteOffset, n);\n        case 'INT32':\n            return new Int32Array(heap.buffer, heap.byteOffset, n);\n        case 'FLOAT':\n            return new Float32Array(heap.buffer, heap.byteOffset, n);\n        case 'DOUBLE':\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\n        case 'VARCHAR':\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\n        default:\n            return new Array<string | undefined | null>(0); // cough\n    }\n}\n\nfunction ptrToUint8Array(mod: DuckDBModule, ptr: number, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n);\n    return new Uint8Array(heap.buffer, heap.byteOffset, n);\n}\nfunction ptrToFloat64Array(mod: DuckDBModule, ptr: number, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * 8);\n    return new Float64Array(heap.buffer, heap.byteOffset, n);\n}\n\ninterface ArgumentTypeDescription {\n    name?: string;\n    sqlType: string;\n    physicalType: string;\n    validityBuffer?: number;\n    dataBuffer?: number;\n    lengthBuffer?: number;\n    children?: ArgumentTypeDescription[];\n}\n\ninterface ReturnTypeDescription {\n    sqlType: string;\n    physicalType: string;\n}\n\ninterface SchemaDescription {\n    rows: number;\n    args: ArgumentTypeDescription[];\n    ret: ReturnTypeDescription;\n}\n\ntype ArgumentResolver = (row: number) => any | null;\n\n// this is called from webdb.cc/CallScalarUDFFunction, changes here need to be matched there\nexport function callScalarUDF(\n    runtime: DuckDBRuntime,\n    mod: DuckDBModule,\n    response: number,\n    funcId: number,\n    descPtr: number,\n    descSize: number,\n    ptrsPtr: number,\n    ptrsSize: number,\n) {\n    try {\n        const udf = runtime._udfFunctions.get(funcId);\n        if (!udf) {\n            storeError(mod, response, 'Unknown UDF with id: ' + funcId);\n            return;\n        }\n        const rawDesc = TEXT_DECODER.decode(mod.HEAPU8.subarray(descPtr, descPtr + descSize));\n        const desc = JSON.parse(rawDesc) as SchemaDescription;\n        const ptrs = ptrToFloat64Array(mod, ptrsPtr, ptrsSize / 8);\n\n        const buildResolver = (arg: ArgumentTypeDescription): ArgumentResolver => {\n            let validity: Uint8Array | null = null;\n            if (arg.validityBuffer !== undefined) {\n                validity = ptrToUint8Array(mod, ptrs[arg.validityBuffer] as number, desc.rows);\n            }\n            switch (arg.physicalType) {\n                case 'VARCHAR': {\n                    if (arg.dataBuffer === null || arg.dataBuffer === undefined) {\n                        throw new Error('malformed data view, expected data buffer for VARCHAR argument');\n                    }\n                    if (arg.lengthBuffer === null || arg.lengthBuffer === undefined) {\n                        throw new Error('malformed data view, expected data length buffer for VARCHAR argument');\n                    }\n                    const raw = ptrToArray(mod, ptrs[arg.dataBuffer] as number, arg.physicalType, desc.rows);\n                    const strings: (string | null)[] = [];\n                    const stringLengths = ptrToFloat64Array(mod, ptrs[arg.lengthBuffer] as number, desc.rows);\n                    for (let j = 0; j < desc.rows; ++j) {\n                        if (validity != null && !validity[j]) {\n                            strings.push(null);\n                            continue;\n                        }\n                        const subarray = mod.HEAPU8.subarray(\n                            raw[j] as number,\n                            (raw[j] as number) + (stringLengths[j] as number),\n                        );\n                        const str = TEXT_DECODER.decode(subarray);\n                        strings.push(str);\n                    }\n                    return (row: number) => strings[row];\n                }\n                case 'STRUCT': {\n                    const tmp: any = {};\n                    const children: ArgumentResolver[] = [];\n                    for (let j = 0; j < (arg.children?.length || 0); ++j) {\n                        const attr = arg.children![j];\n                        const child = buildResolver(attr);\n                        children.push((row: number) => {\n                            tmp[attr.name!] = child(row);\n                        });\n                    }\n                    if (validity != null) {\n                        return (row: number) => {\n                            if (!validity![row]) {\n                                return null;\n                            }\n                            for (const resolver of children) {\n                                resolver(row);\n                            }\n                            return tmp;\n                        };\n                    } else {\n                        return (row: number) => {\n                            for (const resolver of children) {\n                                resolver(row);\n                            }\n                            return tmp;\n                        };\n                    }\n                }\n                default: {\n                    if (arg.dataBuffer === undefined) {\n                        throw new Error(\n                            'malformed data view, expected data buffer for argument of type: ' + arg.physicalType,\n                        );\n                    }\n                    const data = ptrToArray(mod, ptrs[arg.dataBuffer] as number, arg.physicalType, desc.rows);\n                    if (validity != null) {\n                        return (row: number) => (!validity![row] ? null : data[row]);\n                    } else {\n                        return (row: number) => data[row];\n                    }\n                }\n            }\n        };\n\n        // Translate argument data\n        const argResolvers = [];\n        for (let i = 0; i < desc.args.length; ++i) {\n            argResolvers.push(buildResolver(desc.args[i]));\n        }\n\n        // Prepare result buffers\n        // TODO: we probably do not want to recreate those every time\n        const resultDataLen = desc.rows * getTypeSize(desc.ret.physicalType);\n        const resultDataPtr = mod._malloc(resultDataLen);\n        const resultData = ptrToArray(mod, resultDataPtr, desc.ret.physicalType, desc.rows);\n        const resultValidityPtr = mod._malloc(desc.rows);\n        const resultValidity = ptrToUint8Array(mod, resultValidityPtr, desc.rows);\n        if (resultData.length == 0 || resultValidity.length == 0) {\n            storeError(mod, response, \"Can't create physical arrays for result\");\n            return;\n        }\n        let rawResultData = resultData;\n        if (desc.ret.physicalType == 'VARCHAR') {\n            rawResultData = new Array<string | undefined | null>(desc.rows);\n        }\n\n        // Call the function\n        const args = [];\n        for (let i = 0; i < desc.args.length; ++i) {\n            args.push(null);\n        }\n        for (let i = 0; i < desc.rows; ++i) {\n            for (let j = 0; j < desc.args.length; ++j) {\n                args[j] = argResolvers[j](i);\n            }\n            const res = udf.func(...args);\n            rawResultData[i] = res;\n            resultValidity[i] = res === undefined || res === null ? 0 : 1;\n        }\n\n        // Encode return values\n        let resultLengthsPtr = 0;\n        switch (desc.ret.physicalType) {\n            case 'VARCHAR': {\n                // Allocate result buffers\n                const resultDataUTF8 = new Array<Uint8Array>(0); // cough\n                resultLengthsPtr = mod._malloc(desc.rows * getTypeSize('DOUBLE'));\n                const resultLengths = ptrToFloat64Array(mod, resultLengthsPtr, desc.rows);\n\n                // TODO: We need two loops to figure out the total length but maybe we can avoid the double allocation\n                let totalLength = 0;\n                for (let row = 0; row < desc.rows; ++row) {\n                    const utf8 = TEXT_ENCODER.encode((rawResultData as (string | null | undefined)[])[row] || '');\n                    resultDataUTF8.push(utf8);\n                    resultLengths[row] = utf8.length;\n                    totalLength += utf8.length;\n                }\n\n                // We malloc a buffer for the strings to live in for now\n                const resultStringPtr = mod._malloc(totalLength);\n                const resultStringBuf = mod.HEAPU8.subarray(resultStringPtr, resultStringPtr + totalLength);\n\n                // Now copy all the strings to the new buffer back to back\n                let writerOffset = 0;\n                for (let row = 0; row < desc.rows; ++row) {\n                    resultData[row] = writerOffset;\n                    const resultUTF8 = resultDataUTF8[row];\n                    const writer = resultStringBuf.subarray(writerOffset, writerOffset + resultUTF8.length);\n                    writer.set(resultUTF8);\n                    writerOffset += resultUTF8.length;\n                }\n            }\n        }\n\n        // Need to store three pointers, data, validity and length\n        const retLen = 3 * 8;\n        const retPtr = mod._malloc(retLen);\n        const retBuffer = ptrToFloat64Array(mod, retPtr, 3);\n        retBuffer[0] = resultDataPtr;\n        retBuffer[1] = resultValidityPtr;\n        retBuffer[2] = resultLengthsPtr;\n\n        // Pack response\n        mod.HEAPF64[(response >> 3) + 0] = 0;\n        mod.HEAPF64[(response >> 3) + 1] = retPtr;\n        mod.HEAPF64[(response >> 3) + 2] = 0;\n    } catch (e: any) {\n        storeError(mod, response, e.toString());\n    }\n}\n", "import { DuckDBModule } from './duckdb_module';\nimport { UDFFunction } from './udf_function';\nimport * as udf_rt from './udf_runtime';\n\n/** Wrapper for TextDecoder to support shared array buffers */\nfunction TextDecoderWrapper(): (input?: BufferSource) => string {\n    const decoder = new TextDecoder();\n    return (data: any) => {\n        if (typeof SharedArrayBuffer !== 'undefined' && data.buffer instanceof SharedArrayBuffer) {\n            data = new Uint8Array(data);\n        }\n        return decoder.decode(data);\n    };\n}\n/** Helper to decode text */\nexport const decodeText = TextDecoderWrapper();\n\n/** Copy a buffer */\nexport function failWith(mod: DuckDBModule, msg: string): void {\n    console.error(`FAIL WITH: ${msg}`);\n    mod.ccall('duckdb_web_fail_with', null, ['string'], [msg]);\n}\n\n/** Copy a buffer */\nexport function copyBuffer(mod: DuckDBModule, begin: number, length: number): Uint8Array {\n    const buffer = mod.HEAPU8.subarray(begin, begin + length);\n    const copy = new Uint8Array(new ArrayBuffer(buffer.byteLength));\n    copy.set(buffer);\n    return copy;\n}\n\n/** Decode a string */\nexport function readString(mod: DuckDBModule, begin: number, length: number): string {\n    return decodeText(mod.HEAPU8.subarray(begin, begin + length));\n}\n\n/** The data protocol */\nexport enum DuckDBDataProtocol {\n    BUFFER = 0,\n    NODE_FS = 1,\n    BROWSER_FILEREADER = 2,\n    BROWSER_FSACCESS = 3,\n    HTTP = 4,\n    S3 = 5,\n}\n\n/** File flags for opening files*/\nexport enum FileFlags {\n    //! Open file with read access\n    FILE_FLAGS_READ = 1 << 0,\n    //! Open file with write access\n    FILE_FLAGS_WRITE = 1 << 1,\n    //! Use direct IO when reading/writing to the file\n    FILE_FLAGS_DIRECT_IO = 1 << 2,\n    //! Create file if not exists, can only be used together with WRITE\n    FILE_FLAGS_FILE_CREATE = 1 << 3,\n    //! Always create a new file. If a file exists, the file is truncated. Cannot be used together with CREATE.\n    FILE_FLAGS_FILE_CREATE_NEW = 1 << 4,\n    //! Open file in append mode\n    FILE_FLAGS_APPEND = 1 << 5,\n}\n\n/** Configuration for the AWS S3 Filesystem */\nexport interface S3Config {\n    region?: string;\n    endpoint?: string;\n    accessKeyId?: string;\n    secretAccessKey?: string;\n    sessionToken?: string;\n}\n\n/** An info for a file registered with DuckDB */\nexport interface DuckDBFileInfo {\n    cacheEpoch: number;\n    fileId: number;\n    fileName: string;\n    dataProtocol: DuckDBDataProtocol;\n    dataUrl: string | null;\n    allowFullHttpReads?: boolean;\n    s3Config?: S3Config;\n}\n\n/** Global info for all files registered with DuckDB */\nexport interface DuckDBGlobalFileInfo {\n    cacheEpoch: number;\n    allowFullHttpReads?: boolean;\n    s3Config?: S3Config;\n}\n\n/** Call a function with packed response buffer */\nexport function callSRet(\n    mod: DuckDBModule,\n    funcName: string,\n    argTypes: Array<Emscripten.JSType>,\n    args: Array<any>,\n): [number, number, number] {\n    const stackPointer = mod.stackSave();\n\n    // Allocate the packed response buffer\n    const response = mod.stackAlloc(3 * 8);\n    argTypes.unshift('number');\n    args.unshift(response);\n\n    // Do the call\n    mod.ccall(funcName, null, argTypes, args);\n\n    // Read the response\n    const status = mod.HEAPF64[(response >> 3) + 0];\n    const data = mod.HEAPF64[(response >> 3) + 1];\n    const dataSize = mod.HEAPF64[(response >> 3) + 2];\n\n    // Restore the stack\n    mod.stackRestore(stackPointer);\n    return [status, data, dataSize];\n}\n\n/** Drop response buffers */\nexport function dropResponseBuffers(mod: DuckDBModule): void {\n    mod.ccall('duckdb_web_clear_response', null, [], []);\n}\n\n/** The duckdb runtime */\nexport interface DuckDBRuntime {\n    _files?: Map<string, any>;\n    _udfFunctions: Map<number, UDFFunction>;\n\n    // Test a platform feature\n    testPlatformFeature(mod: DuckDBModule, feature: number): boolean;\n\n    // File APIs with dedicated file identifier\n    getDefaultDataProtocol(mod: DuckDBModule): number;\n    openFile(mod: DuckDBModule, fileId: number, flags: FileFlags): void;\n    syncFile(mod: DuckDBModule, fileId: number): void;\n    closeFile(mod: DuckDBModule, fileId: number): void;\n    getLastFileModificationTime(mod: DuckDBModule, fileId: number): number;\n    truncateFile(mod: DuckDBModule, fileId: number, newSize: number): void;\n    readFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\n    writeFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\n\n    // File APIs with path parameter\n    removeDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    checkDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    createDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    listDirectoryEntries(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    glob(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    moveFile(mod: DuckDBModule, fromPtr: number, fromLen: number, toPtr: number, toLen: number): void;\n    checkFile(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    removeFile(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n\n    // Call a scalar UDF function\n    callScalarUDF(\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void;\n}\n\nexport const DEFAULT_RUNTIME: DuckDBRuntime = {\n    _udfFunctions: new Map(),\n\n    testPlatformFeature: (_mod: DuckDBModule, _feature: number): boolean => false,\n    getDefaultDataProtocol: (_mod: DuckDBModule): number => DuckDBDataProtocol.BUFFER,\n    openFile: (_mod: DuckDBModule, _fileId: number, flags: FileFlags): void => {},\n    syncFile: (_mod: DuckDBModule, _fileId: number): void => {},\n    closeFile: (_mod: DuckDBModule, _fileId: number): void => {},\n    getLastFileModificationTime: (_mod: DuckDBModule, _fileId: number): number => {\n        return 0;\n    },\n    truncateFile: (_mod: DuckDBModule, _fileId: number, _newSize: number): void => {},\n    readFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\n        return 0;\n    },\n    writeFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\n        return 0;\n    },\n\n    removeDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    checkDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    createDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    listDirectoryEntries: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    glob: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    moveFile: (_mod: DuckDBModule, _fromPtr: number, _fromLen: number, _toPtr: number, _toLen: number): void => {},\n    checkFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    callScalarUDF: (\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void => {\n        udf_rt.callScalarUDF(DEFAULT_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\n    },\n};\n", "export interface FileBlockStatistics {\n    /** The file reads cold */\n    file_reads_cold: number;\n    /** The file reads aheads */\n    file_reads_ahead: number;\n    /** The file reads cached */\n    file_reads_cached: number;\n    /** The file writes */\n    file_writes: number;\n    /** The page accesses */\n    page_accesses: number;\n    /** The page loads */\n    page_loads: number;\n}\n\n/** The file block statistics */\nexport class FileStatistics {\n    /** The cold file reads */\n    public totalFileReadsCold: number;\n    /** The file readaheads */\n    public totalFileReadsAhead: number;\n    /** The cached file reads */\n    public totalFileReadsCached: number;\n    /** The file writes */\n    public totalFileWrites: number;\n    /** The page accesses */\n    public totalPageAccesses: number;\n    /** The page loads */\n    public totalPageLoads: number;\n    /** The blocks */\n    public blockSize: number;\n    /** The blocks */\n    public blockStats: Uint8Array;\n\n    constructor(u8array: Uint8Array) {\n        const f64 = new Float64Array(u8array.buffer, u8array.byteOffset, u8array.byteLength / 8);\n        const blocks = new Uint8Array(new ArrayBuffer(u8array.byteLength));\n        blocks.set(u8array.subarray(7 * 8));\n        this.totalFileReadsCold = f64[0];\n        this.totalFileReadsAhead = f64[1];\n        this.totalFileReadsCached = f64[2];\n        this.totalFileWrites = f64[3];\n        this.totalPageAccesses = f64[4];\n        this.totalPageLoads = f64[5];\n        this.blockSize = f64[6];\n        this.blockStats = blocks;\n    }\n\n    /** The block stats */\n    public getBlockStats(index: number, out?: FileBlockStatistics): FileBlockStatistics {\n        out = out || {\n            file_reads_cold: 0,\n            file_reads_ahead: 0,\n            file_reads_cached: 0,\n            file_writes: 0,\n            page_accesses: 0,\n            page_loads: 0,\n        };\n        out.file_writes = this.blockStats[index * 3 + 0] & 0b1111;\n        out.file_reads_cold = this.blockStats[index * 3 + 0] >> 4;\n        out.file_reads_ahead = this.blockStats[index * 3 + 1] & 0b1111;\n        out.file_reads_cached = this.blockStats[index * 3 + 1] >> 4;\n        out.page_accesses = this.blockStats[index * 3 + 1] & 0b1111;\n        out.page_loads = this.blockStats[index * 3 + 1] >> 4;\n        return out;\n    }\n}\n", "import * as arrow from 'apache-arrow';\n\nexport interface SQLType {\n    /// The sql type\n    sqlType: string;\n    /// Is nullable?\n    nullable?: boolean;\n    /// Decimal precision\n    precision?: number;\n    /// Decimal scaling\n    scale?: number;\n    /// Timezone\n    timezone?: string;\n    /// Byte width (FixedSizeBinary)\n    byteWidth?: number;\n    /// Key type\n    keyType?: SQLType;\n    /// Value type\n    valueType?: SQLType;\n    /// Fields\n    fields?: SQLField[];\n}\n\nexport function arrowToSQLType(type: arrow.DataType): SQLType {\n    switch (type.typeId) {\n        case arrow.Type.Binary:\n            return { sqlType: 'binary' };\n        case arrow.Type.Bool:\n            return { sqlType: 'bool' };\n        case arrow.Type.Date:\n            return { sqlType: 'date' };\n        case arrow.Type.DateDay:\n            return { sqlType: 'date32[d]' };\n        case arrow.Type.DateMillisecond:\n            return { sqlType: 'date64[ms]' };\n        case arrow.Type.Decimal: {\n            const dec = type as arrow.Decimal;\n            return { sqlType: 'decimal', precision: dec.precision, scale: dec.scale };\n        }\n        case arrow.Type.Float:\n            return { sqlType: 'float' };\n        case arrow.Type.Float16:\n            return { sqlType: 'float16' };\n        case arrow.Type.Float32:\n            return { sqlType: 'float32' };\n        case arrow.Type.Float64:\n            return { sqlType: 'float64' };\n        case arrow.Type.Int:\n            return { sqlType: 'int32' };\n        case arrow.Type.Int16:\n            return { sqlType: 'int16' };\n        case arrow.Type.Int32:\n            return { sqlType: 'int32' };\n        case arrow.Type.Int64:\n            return { sqlType: 'int64' };\n        case arrow.Type.Uint16:\n            return { sqlType: 'uint16' };\n        case arrow.Type.Uint32:\n            return { sqlType: 'uint32' };\n        case arrow.Type.Uint64:\n            return { sqlType: 'uint64' };\n        case arrow.Type.Uint8:\n            return { sqlType: 'uint8' };\n        case arrow.Type.IntervalDayTime:\n            return { sqlType: 'interval[dt]' };\n        case arrow.Type.IntervalYearMonth:\n            return { sqlType: 'interval[m]' };\n        case arrow.Type.List: {\n            const list = type as arrow.List;\n            return {\n                sqlType: 'list',\n                valueType: arrowToSQLType(list.valueType),\n            };\n        }\n        case arrow.Type.FixedSizeBinary: {\n            const bin = type as arrow.FixedSizeBinary;\n            return { sqlType: 'fixedsizebinary', byteWidth: bin.byteWidth };\n        }\n        case arrow.Type.Null:\n            return { sqlType: 'null' };\n        case arrow.Type.Utf8:\n            return { sqlType: 'utf8' };\n        case arrow.Type.Struct: {\n            const struct_ = type as arrow.Struct;\n            return {\n                sqlType: 'struct',\n                fields: struct_.children.map(c => arrowToSQLField(c.name, c.type)),\n            };\n        }\n        case arrow.Type.Map: {\n            const map_ = type as arrow.Map_;\n            return {\n                sqlType: 'map',\n                keyType: arrowToSQLType(map_.keyType),\n                valueType: arrowToSQLType(map_.valueType),\n            };\n        }\n        case arrow.Type.Time:\n            return { sqlType: 'time[s]' };\n        case arrow.Type.TimeMicrosecond:\n            return { sqlType: 'time[us]' };\n        case arrow.Type.TimeMillisecond:\n            return { sqlType: 'time[ms]' };\n        case arrow.Type.TimeNanosecond:\n            return { sqlType: 'time[ns]' };\n        case arrow.Type.TimeSecond:\n            return { sqlType: 'time[s]' };\n        case arrow.Type.Timestamp: {\n            const ts = type as arrow.Timestamp;\n            return { sqlType: 'timestamp', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampSecond: {\n            const ts = type as arrow.TimestampSecond;\n            return { sqlType: 'timestamp[s]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampMicrosecond: {\n            const ts = type as arrow.TimestampMicrosecond;\n            return { sqlType: 'timestamp[us]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampNanosecond: {\n            const ts = type as arrow.TimestampNanosecond;\n            return { sqlType: 'timestamp[ns]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampMillisecond: {\n            const ts = type as arrow.TimestampMillisecond;\n            return { sqlType: 'timestamp[ms]', timezone: ts.timezone || undefined };\n        }\n    }\n    throw new Error(`unsupported arrow type: ${type.toString()}`);\n}\n\nexport type SQLField = SQLType & { name: string };\n\nexport function arrowToSQLField(name: string, type: arrow.DataType): SQLField {\n    const t = arrowToSQLType(type) as SQLField;\n    t.name = name;\n    return t;\n}\n", "import { DuckDBModule, PThread } from './duckdb_module';\nimport { DuckDBConfig } from './config';\nimport { Logger } from '../log';\nimport { InstantiationProgress } from './progress';\nimport { DuckDBBindings } from './bindings_interface';\nimport { DuckDBConnection } from './connection';\nimport { StatusCode } from '../status';\nimport { dropResponseBuffers, DuckDBRuntime, readString, callSRet, copyBuffer, DuckDBDataProtocol } from './runtime';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\nimport { ScriptTokens } from './tokens';\nimport { FileStatistics } from './file_stats';\nimport { arrowToSQLField, arrowToSQLType } from '../json_typedef';\nimport { WebFile } from './web_file';\nimport { UDFFunction, UDFFunctionDeclaration } from './udf_function';\nimport * as arrow from 'apache-arrow';\n\nconst TEXT_ENCODER = new TextEncoder();\n\ndeclare global {\n    // eslint-disable-next-line no-var\n    var DUCKDB_RUNTIME: any;\n}\n\n/** A DuckDB Feature */\nexport enum DuckDBFeature {\n    WASM_EXCEPTIONS = 1 << 0,\n    WASM_THREADS = 1 << 1,\n    WASM_SIMD = 1 << 2,\n    WASM_BULK_MEMORY = 1 << 3,\n    EMIT_BIGINT = 1 << 4,\n}\n\n/** The proxy for either the browser- order node-based DuckDB API */\nexport abstract class DuckDBBindingsBase implements DuckDBBindings {\n    /** The logger */\n    protected readonly _logger: Logger;\n    /** Backend-dependent native-glue code for DuckDB */\n    protected readonly _runtime: DuckDBRuntime;\n    /** The instance */\n    protected _instance: DuckDBModule | null = null;\n    /** The loading promise */\n    protected _initPromise: Promise<void> | null = null;\n    /** The resolver for the open promise (called by onRuntimeInitialized) */\n    protected _initPromiseResolver: () => void = () => {};\n    /** The next UDF id */\n    protected _nextUDFId: number;\n\n    constructor(logger: Logger, runtime: DuckDBRuntime) {\n        this._logger = logger;\n        this._runtime = runtime;\n        this._nextUDFId = 1;\n    }\n\n    /** Get the logger */\n    public get logger(): Logger {\n        return this._logger;\n    }\n    /** Get the instance */\n    public get mod(): DuckDBModule {\n        return this._instance!;\n    }\n    /** Get the instance */\n    public get pthread(): PThread | null {\n        return this.mod.PThread || null;\n    }\n\n    /** Instantiate the module */\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\n    /** Instantiate the module */\n    protected onInstantiationProgress: ((p: InstantiationProgress) => void)[] = [];\n    /** Instantiate the database */\n    public async instantiate(onProgress: (progress: InstantiationProgress) => void = _ => {}): Promise<this> {\n        // Already opened?\n        if (this._instance != null) {\n            return this;\n        }\n        // Open in progress?\n        if (this._initPromise != null) {\n            this.onInstantiationProgress.push(onProgress);\n            await this._initPromise;\n        }\n        // Create a promise that we can await\n        this._initPromise = new Promise(resolve => {\n            this._initPromiseResolver = resolve;\n        });\n        // Register progress handler\n        this.onInstantiationProgress = [onProgress];\n        // Initialize duckdb\n        this._instance = await this.instantiateImpl({\n            print: console.log.bind(console),\n            printErr: console.log.bind(console),\n            onRuntimeInitialized: this._initPromiseResolver,\n        });\n        // Wait for onRuntimeInitialized\n        await this._initPromise;\n        this._initPromise = null;\n        // Remove own progress callback\n        this.onInstantiationProgress = this.onInstantiationProgress.filter(x => x != onProgress);\n        return this;\n    }\n    /** Open a database with a config */\n    public open(config: DuckDBConfig): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_open', ['string'], [JSON.stringify(config)]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Reset the database */\n    public reset(): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_reset', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Get the version */\n    public getVersion(): string {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_version', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const version = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return version;\n    }\n    /** Get the feature flags */\n    public getFeatureFlags(): number {\n        return this.mod.ccall('duckdb_web_get_feature_flags', 'number', [], []);\n    }\n\n    /** Tokenize a script */\n    public tokenize(text: string): ScriptTokens {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_tokenize', ['string'], [text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return JSON.parse(res) as ScriptTokens;\n    }\n\n    /** Connect to database */\n    public connect(): DuckDBConnection {\n        const conn = this.mod.ccall('duckdb_web_connect', 'number', [], []);\n        return new DuckDBConnection(this, conn);\n    }\n    /** Disconnect from database */\n    public disconnect(conn: number): void {\n        this.mod.ccall('duckdb_web_disconnect', null, ['number'], [conn]);\n        if (this.pthread) {\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\n                worker.postMessage({\n                    cmd: 'dropUDFFunctions',\n                    connectionId: conn,\n                });\n            }\n        }\n    }\n\n    /** Send a query and return the full result */\n    public runQuery(conn: number, text: string): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_run', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /**\n     *  Start a pending query asynchronously.\n     *  This method returns either the arrow ipc schema or null.\n     *  On null, the query has to be executed using `pollPendingQuery` until that returns != null.\n     *  Results can then be fetched using `fetchQueryResults`\n     */\n    public startPendingQuery(conn: number, text: string): Uint8Array | null {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_pending_query_start', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        if (d == 0) {\n            return null;\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Poll a pending query */\n    public pollPendingQuery(conn: number): Uint8Array | null {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_pending_query_poll', ['number'], [conn]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        if (d == 0) {\n            return null;\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Cancel a pending query */\n    public cancelPendingQuery(conn: number): boolean {\n        return this.mod.ccall('duckdb_web_pending_query_cancel', 'boolean', ['number'], [conn]);\n    }\n    /** Fetch query results */\n    public fetchQueryResults(conn: number): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_fetch_results', ['number'], [conn]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Get table names */\n    public getTableNames(conn: number, text: string): string[] {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_tablenames', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return JSON.parse(res) as string[];\n    }\n\n    /** Create a scalar function */\n    public createScalarFunction(\n        conn: number,\n        name: string,\n        returns: arrow.DataType,\n        func: (...args: any[]) => void,\n    ): void {\n        const decl: UDFFunctionDeclaration = {\n            functionId: this._nextUDFId,\n            name: name,\n            returnType: arrowToSQLType(returns),\n        };\n        const def: UDFFunction = {\n            functionId: decl.functionId,\n            connectionId: conn,\n            name: name,\n            returnType: returns,\n            func,\n        };\n        this._nextUDFId += 1;\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_udf_scalar_create',\n            ['number', 'string'],\n            [conn, JSON.stringify(decl)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        globalThis.DUCKDB_RUNTIME._udfFunctions = (globalThis.DUCKDB_RUNTIME._udfFunctions || new Map()).set(\n            def.functionId,\n            def,\n        );\n        if (this.pthread) {\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\n                worker.postMessage({\n                    cmd: 'registerUDFFunction',\n                    udf: def,\n                });\n            }\n        }\n    }\n\n    /** Prepare a statement and return its identifier */\n    public createPrepared(conn: number, text: string): number {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_create', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        return d;\n    }\n\n    /** Close a prepared statement */\n    public closePrepared(conn: number, statement: number): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_close', ['number', 'number'], [conn, statement]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Execute a prepared statement and return the full result */\n    public runPrepared(conn: number, statement: number, params: any[]): Uint8Array {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_prepared_run',\n            ['number', 'number', 'string'],\n            [conn, statement, JSON.stringify(params)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n\n    /** Execute a prepared statement and stream the result */\n    public sendPrepared(conn: number, statement: number, params: any[]): Uint8Array {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_prepared_send',\n            ['number', 'number', 'string'],\n            [conn, statement, JSON.stringify(params)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n\n    /** Insert record batches from an arrow ipc stream */\n    public insertArrowFromIPCStream(conn: number, buffer: Uint8Array, options?: ArrowInsertOptions): void {\n        if (buffer.length == 0) return;\n        // Store buffer\n        const bufferPtr = this.mod._malloc(buffer.length);\n        const bufferOfs = this.mod.HEAPU8.subarray(bufferPtr, bufferPtr + buffer.length);\n        bufferOfs.set(buffer);\n        const optJSON = options ? JSON.stringify(options) : '';\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_arrow_from_ipc_stream',\n            ['number', 'number', 'number', 'string'],\n            [conn, bufferPtr, buffer.length, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n\n    /** Insert csv from path */\n    public insertCSVFromPath(conn: number, path: string, options: CSVInsertOptions): void {\n        // Stringify options\n        if (options.columns !== undefined) {\n            options.columnsFlat = [];\n            for (const k in options.columns) {\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\n            }\n        }\n        const opt = { ...options } as any;\n        opt.columns = opt.columnsFlat;\n        delete opt.columnsFlat;\n        const optJSON = JSON.stringify(opt);\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_csv_from_path',\n            ['number', 'string', 'string'],\n            [conn, path, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Insert json from path */\n    public insertJSONFromPath(conn: number, path: string, options: JSONInsertOptions): void {\n        // Stringify options\n        if (options.columns !== undefined) {\n            options.columnsFlat = [];\n            for (const k in options.columns) {\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\n            }\n        }\n        const opt = { ...options } as any;\n        opt.columns = opt.columnsFlat;\n        delete opt.columnsFlat;\n        const optJSON = JSON.stringify(opt);\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_json_from_path',\n            ['number', 'string', 'string'],\n            [conn, path, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Glob file infos */\n    public globFiles(path: string): WebFile[] {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_glob_file_infos', ['string'], [path]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const infoStr = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        const info = JSON.parse(infoStr) as WebFile[];\n        if (info == null) {\n            return [];\n        }\n        return info;\n    }\n    /** Register a file object URL */\n    public registerFileURL(name: string, url: string, proto: DuckDBDataProtocol, directIO = false): void {\n        if (url === undefined) {\n            url = name;\n        }\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_url',\n            ['string', 'string'],\n            [name, url, proto, directIO],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Register file text */\n    public registerFileText(name: string, text: string): void {\n        const buffer = TEXT_ENCODER.encode(text);\n        this.registerFileBuffer(name, buffer);\n    }\n    /** Register a file buffer */\n    public registerFileBuffer(name: string, buffer: Uint8Array): void {\n        const ptr = this.mod._malloc(buffer.length);\n        const dst = this.mod.HEAPU8.subarray(ptr, ptr + buffer.length);\n        dst.set(buffer);\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_buffer',\n            ['string', 'number', 'number'],\n            [name, ptr, buffer.length],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Register a file object URL */\n    public registerFileHandle<HandleType>(\n        name: string,\n        handle: HandleType,\n        protocol: DuckDBDataProtocol,\n        directIO: boolean,\n    ): void {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_url',\n            ['string', 'string', 'number', 'boolean'],\n            [name, name, protocol, directIO],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        globalThis.DUCKDB_RUNTIME._files = (globalThis.DUCKDB_RUNTIME._files || new Map()).set(name, handle);\n        if (this.pthread) {\n            for (const worker of this.pthread.runningWorkers) {\n                worker.postMessage({\n                    cmd: 'registerFileHandle',\n                    fileName: name,\n                    fileHandle: handle,\n                });\n            }\n            for (const worker of this.pthread.unusedWorkers) {\n                worker.postMessage({\n                    cmd: 'dropFileHandle',\n                    fileName: name,\n                });\n            }\n        }\n    }\n    /** Drop file */\n    public dropFile(name: string): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_file', ['string'], [name]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Drop files */\n    public dropFiles(): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_files', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Flush all files */\n    public flushFiles(): void {\n        this.mod.ccall('duckdb_web_flush_files', null, [], []);\n    }\n    /** Write a file to a path */\n    public copyFileToPath(name: string, path: string): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_path', ['string', 'string'], [name, path]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Write a file to a buffer */\n    public copyFileToBuffer(name: string): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_buffer', ['string'], [name]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const buffer = this.mod.HEAPU8.subarray(d, d + n);\n        const copy = new Uint8Array(buffer.length);\n        copy.set(buffer);\n        dropResponseBuffers(this.mod);\n        return copy;\n    }\n\n    /** Enable tracking of file statistics */\n    public collectFileStatistics(file: string, enable: boolean): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_collect_file_stats', ['string', 'boolean'], [file, enable]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Export file statistics */\n    public exportFileStatistics(file: string): FileStatistics {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_export_file_stats', ['string'], [file]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        return new FileStatistics(this.mod.HEAPU8.subarray(d, d + n));\n    }\n}\n", "export interface DuckDBQueryConfig {\n    /**\n     * The polling interval for queries\n     */\n    queryPollingInterval?: number;\n    /**\n     * Cast BigInt to Double?\n     */\n    castBigIntToDouble?: boolean;\n    /**\n     * Cast Timestamp to Date64?\n     */\n    castTimestampToDate?: boolean;\n    /**\n     * Cast Timestamp to Date64?\n     */\n    castDurationToTime64?: boolean;\n    /**\n     * Cast Decimal to Double?\n     */\n    castDecimalToDouble?: boolean;\n}\n\nexport interface DuckDBFilesystemConfig {\n    /**\n     * Allow falling back to full HTTP reads if the server does not support range requests.\n     */\n    allowFullHTTPReads?: boolean;\n}\n\nexport enum DuckDBAccessMode {\n    UNDEFINED = 0,\n    AUTOMATIC = 1,\n    READ_ONLY = 2,\n    READ_WRITE = 3,\n}\n\nexport interface DuckDBConfig {\n    /**\n     * The database path\n     */\n    path?: string;\n    /**\n     * The access mode\n     */\n    accessMode?: DuckDBAccessMode;\n    /**\n     * The maximum number of threads.\n     * Note that this will only work with cross-origin isolated sites since it requires SharedArrayBuffers.\n     */\n    maximumThreads?: number;\n    /**\n     * The query config\n     */\n    query?: DuckDBQueryConfig;\n    /**\n     * The filesystem config\n     */\n    filesystem?: DuckDBFilesystemConfig;\n}\n", "import * as arrow from 'apache-arrow';\nimport { SQLField } from '../json_typedef';\n\nexport enum JSONTableShape {\n    ROW_ARRAY = 'row-array',\n    COLUMN_OBJECT = 'column-object',\n}\n\nexport interface JSONInsertOptions {\n    name: string;\n    schema?: string;\n    create?: boolean;\n    shape?: JSONTableShape;\n    columns?: {\n        [key: string]: arrow.DataType;\n    };\n    columnsFlat?: SQLField[];\n}\n\nexport interface CSVInsertOptions {\n    name: string;\n    schema?: string;\n    create?: boolean;\n    header?: boolean;\n    delimiter?: string;\n    quote?: string;\n    escape?: string;\n    skip?: number;\n    detect?: boolean;\n    dateFormat?: string;\n    timestampFormat?: string;\n    columns?: {\n        [key: string]: arrow.DataType;\n    };\n    columnsFlat?: SQLField[];\n}\n\nexport interface ArrowInsertOptions {\n    name: string;\n    schema?: string;\n    create?: boolean;\n}\n", "export enum LogLevel {\n    NONE = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARNING = 3,\n    ERROR = 4,\n}\n\nexport enum LogTopic {\n    NONE = 0,\n    CONNECT = 1,\n    DISCONNECT = 2,\n    OPEN = 3,\n    QUERY = 4,\n    INSTANTIATE = 5,\n}\n\nexport enum LogEvent {\n    NONE = 0,\n    OK = 1,\n    ERROR = 2,\n    START = 3,\n    RUN = 4,\n    CAPTURE = 5,\n}\n\nexport enum LogOrigin {\n    NONE = 0,\n    WEB_WORKER = 1,\n    NODE_WORKER = 2,\n    BINDINGS = 3,\n    ASYNC_DUCKDB = 4,\n}\n\nexport type LogEntry<O, T, E, V> = {\n    readonly timestamp: Date;\n    readonly level: LogLevel;\n    readonly origin: O;\n    readonly topic: T;\n    readonly event: E;\n    readonly value: V;\n};\n\nexport type LogEntryVariant =\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.INSTANTIATE, LogEvent.ERROR, string>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.START, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.START, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.ASYNC_DUCKDB, LogTopic.QUERY, LogEvent.RUN, string>;\n\nexport interface Logger {\n    log(entry: LogEntryVariant): void;\n}\n\nexport class VoidLogger implements Logger {\n    public log(_entry: LogEntryVariant): void {}\n}\n\nexport class ConsoleLogger implements Logger {\n    constructor(protected level: LogLevel = LogLevel.INFO) {}\n    public log(entry: LogEntryVariant): void {\n        if (entry.level >= this.level) {\n            console.log(entry);\n        }\n    }\n}\n\nexport function getLogLevelLabel(level: LogLevel): string {\n    switch (level) {\n        case LogLevel.NONE:\n            return 'NONE';\n        case LogLevel.DEBUG:\n            return 'DEBUG';\n        case LogLevel.INFO:\n            return 'INFO';\n        case LogLevel.WARNING:\n            return 'WARNING';\n        case LogLevel.ERROR:\n            return 'ERROR';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogEventLabel(event: LogEvent): string {\n    switch (event) {\n        case LogEvent.NONE:\n            return 'NONE';\n        case LogEvent.OK:\n            return 'OK';\n        case LogEvent.ERROR:\n            return 'ERROR';\n        case LogEvent.START:\n            return 'START';\n        case LogEvent.RUN:\n            return 'RUN';\n        case LogEvent.CAPTURE:\n            return 'CAPTURE';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogTopicLabel(topic: LogTopic): string {\n    switch (topic) {\n        case LogTopic.CONNECT:\n            return 'CONNECT';\n        case LogTopic.DISCONNECT:\n            return 'DISCONNECT';\n        case LogTopic.INSTANTIATE:\n            return 'INSTANTIATE';\n        case LogTopic.OPEN:\n            return 'OPEN';\n        case LogTopic.QUERY:\n            return 'QUERY';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogOriginLabel(origin: LogOrigin): string {\n    switch (origin) {\n        case LogOrigin.NONE:\n            return 'NONE';\n        case LogOrigin.WEB_WORKER:\n            return 'WEB WORKER';\n        case LogOrigin.NODE_WORKER:\n            return 'NODE WORKER';\n        case LogOrigin.BINDINGS:\n            return 'DUCKDB BINDINGS';\n        case LogOrigin.ASYNC_DUCKDB:\n            return 'DUCKDB';\n        default:\n            return '?';\n    }\n}\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,10,2,95,1,125,0,96,0,1,107,0,3,2,1,1,10,12,1,10,0,67,0,0,0,0,251,7,0,11])),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n", "import config from '../package.json';\n\nexport const PACKAGE_NAME = config.name;\nexport const PACKAGE_VERSION = config.version;\n\nconst VERSION_PARTS = config.version.split('.');\nexport const PACKAGE_VERSION_MAJOR = VERSION_PARTS[0];\nexport const PACKAGE_VERSION_MINOR = VERSION_PARTS[1];\nexport const PACKAGE_VERSION_PATCH = VERSION_PARTS[2];\n", "import * as check from 'wasm-feature-detect';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\n// Platform check taken from here:\n// https://github.com/xtermjs/xterm.js/blob/master/src/common/Platform.ts#L21\n\ninterface INavigator {\n    userAgent: string;\n    language: string;\n    platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = () => (typeof navigator === 'undefined' ? true : false);\nconst userAgent = () => (isNode() ? 'node' : navigator.userAgent);\nexport const isFirefox = () => userAgent().includes('Firefox');\nexport const isSafari = () => /^((?!chrome|android).)*safari/i.test(userAgent());\n\nexport interface DuckDBBundles {\n    mvp: {\n        mainModule: string;\n        mainWorker: string;\n    };\n    eh?: {\n        mainModule: string;\n        mainWorker: string;\n    };\n    coi?: {\n        mainModule: string;\n        mainWorker: string;\n        pthreadWorker: string;\n    };\n}\n\nexport function getJsDelivrBundles(): DuckDBBundles {\n    const jsdelivr_dist_url = `https://cdn.jsdelivr.net/npm/${PACKAGE_NAME}@${PACKAGE_VERSION}/dist/`;\n    return {\n        mvp: {\n            mainModule: `${jsdelivr_dist_url}duckdb-mvp.wasm`,\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-mvp.worker.js`,\n        },\n        eh: {\n            mainModule: `${jsdelivr_dist_url}duckdb-eh.wasm`,\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-eh.worker.js`,\n        },\n        // COI is still experimental, let the user opt in explicitly\n    };\n}\n\nexport interface DuckDBBundle {\n    mainModule: string;\n    mainWorker: string | null;\n    pthreadWorker: string | null;\n}\n\nexport interface PlatformFeatures {\n    bigInt64Array: boolean;\n    crossOriginIsolated: boolean;\n    wasmExceptions: boolean;\n    wasmSIMD: boolean;\n    wasmBulkMemory: boolean;\n    wasmThreads: boolean;\n}\n\nlet bigInt64Array: boolean | null = null;\nlet wasmExceptions: boolean | null = null;\nlet wasmThreads: boolean | null = null;\nlet wasmSIMD: boolean | null = null;\nlet wasmBulkMemory: boolean | null = null;\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n    let crossOriginIsolated: boolean;\n}\n\nexport async function getPlatformFeatures(): Promise<PlatformFeatures> {\n    if (bigInt64Array == null) {\n        bigInt64Array = typeof BigInt64Array != 'undefined';\n    }\n    if (wasmExceptions == null) {\n        wasmExceptions = await check.exceptions();\n    }\n    if (wasmThreads == null) {\n        wasmThreads = await check.threads();\n    }\n    if (wasmSIMD == null) {\n        wasmSIMD = await check.simd();\n    }\n    if (wasmBulkMemory == null) {\n        wasmBulkMemory = await check.bulkMemory();\n    }\n    return {\n        bigInt64Array: bigInt64Array!,\n        crossOriginIsolated: isNode() || globalThis.crossOriginIsolated || false,\n        wasmExceptions: wasmExceptions!,\n        wasmSIMD: wasmSIMD!,\n        wasmThreads: wasmThreads!,\n        wasmBulkMemory: wasmBulkMemory!,\n    };\n}\n\nexport async function selectBundle(bundles: DuckDBBundles): Promise<DuckDBBundle> {\n    const platform = await getPlatformFeatures();\n    if (platform.wasmExceptions) {\n        if (platform.wasmSIMD && platform.wasmThreads && platform.crossOriginIsolated && bundles.coi) {\n            return {\n                mainModule: bundles.coi.mainModule,\n                mainWorker: bundles.coi.mainWorker,\n                pthreadWorker: bundles.coi.pthreadWorker,\n            };\n        }\n        if (bundles.eh) {\n            return {\n                mainModule: bundles.eh.mainModule,\n                mainWorker: bundles.eh.mainWorker,\n                pthreadWorker: null,\n            };\n        }\n    }\n    return {\n        mainModule: bundles.mvp.mainModule,\n        mainWorker: bundles.mvp.mainWorker,\n        pthreadWorker: null,\n    };\n}\n", "import {S3Config} from \"../bindings\";\nimport {sha256} from \"js-sha256\";\n\nexport interface S3Params {\n    url: string,\n    query: string,\n    host: string,\n    region: string,\n    service: string,\n    method: string,\n    accessKeyId: string,\n    secretAccessKey: string,\n    sessionToken: string,\n    dateNow: string,\n    datetimeNow: string\n}\n\nexport interface S3PayloadParams {\n    contentHash: string | null,\n    contentType: string | null\n}\n\nconst getHTTPHost = function (config : S3Config | undefined, url : string, bucket : string) : string {\n    if (config?.endpoint?.startsWith(\"http\")) {\n        // Endpoint is a full url, we append the bucket\n        const httpHost = `${config?.endpoint}`;\n        const offset = httpHost.indexOf(\"://\")+3;\n        return httpHost.substring(offset);\n    } else if (config?.endpoint) {\n        // Endpoint is not a full url and the https://{bucket}.{domain} format will be used\n        return `${bucket}.${config?.endpoint}`;\n    } else {\n        // Default aws s3 url\n        return `${bucket}.s3.amazonaws.com`;\n    }\n}\n\nexport function getS3Params (config : S3Config | undefined, url: string, method : string) : S3Params {\n    const parsedS3Url = parseS3Url(url);\n\n    // when using S3 path-style access, the signed URL should also include the bucket name, \n    //  as it is present in the HTTP URL path.\n    // See: https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-bucket-intro.html#path-style-url-ex\n    let path =  parsedS3Url.path;\n    if (isPathStyleAccess(config)) {\n        path = `/${parsedS3Url.bucket}${path}`;\n    }\n    return {\n        url: path,\n        query: \"\",\n        host: getHTTPHost(config, url, parsedS3Url.bucket),\n        region: (config?.region) ?? \"\",\n        service: \"s3\",\n        method: method,\n        accessKeyId: (config?.accessKeyId) ?? \"\",\n        secretAccessKey: (config?.secretAccessKey) ?? \"\",\n        sessionToken: (config?.sessionToken) ?? \"\",\n        dateNow: new Date().toISOString().replace(/-/g,'').split('T')[0],\n        datetimeNow: new Date().toISOString().replace(/-/g,'').replace(/:/g,'').split('.')[0]+ 'Z',\n    };\n}\n\nexport function uriEncode(input : string, encode_slash = false) {\n    // https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\n\n    const hexDigit = \"0123456789ABCDEF\";\n    let result = \"\";\n\n    for (let i = 0; i < input.length; i++) {\n        const ch : string = input[i];\n\n        if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9') || ch == '_' ||\n            ch == '-' || ch == '~' || ch == '.') {\n            result += ch;\n        } else if (ch == '/') {\n            if (encode_slash) {\n                result += \"%2F\";\n            } else {\n                result += ch;\n            }\n        } else {\n            result += \"%\";\n            result += hexDigit[ch.charCodeAt(0) >> 4];\n            result += hexDigit[ch.charCodeAt(0) & 15];\n        }\n    }\n    return result;\n}\n\nexport function createS3Headers(params: S3Params, payloadParams : S3PayloadParams | null = null) : Map<string, string> {\n    // this is the sha256 of the empty string, its useful since we have no payload for GET requests\n    const payloadHash = (payloadParams?.contentHash) ?? \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n\n    const res = new Map<string, string>();\n    // res.set(\"host\", params.host)\n    res.set(\"x-amz-date\", params.datetimeNow);\n    res.set(\"x-amz-content-sha256\", payloadHash);\n\n    if (params.sessionToken) {\n        res.set(\"x-amz-security-token\", params.sessionToken);\n    }\n\n    // construct string to sign\n    let signedHeaders = \"\";\n    if (payloadParams?.contentType) {\n        signedHeaders += \"content-type;\";\n    }\n    signedHeaders += \"host;x-amz-content-sha256;x-amz-date\";\n    if (params.sessionToken) {\n        signedHeaders += \";x-amz-security-token\";\n    }\n\n    let canonicalRequest = params.method + \"\\n\" + uriEncode(params.url) + \"\\n\" + params.query;\n    if (payloadParams?.contentType) {\n        canonicalRequest += \"\\ncontent-type:\" + payloadParams?.contentType;\n    }\n    canonicalRequest += \"\\nhost:\" + params.host +\n        \"\\nx-amz-content-sha256:\" + payloadHash + \"\\nx-amz-date:\" + params.datetimeNow;\n    if (params.sessionToken && params.sessionToken.length > 0) {\n        canonicalRequest += \"\\nx-amz-security-token:\" + params.sessionToken;\n    }\n\n    canonicalRequest += \"\\n\\n\" + signedHeaders + \"\\n\" + payloadHash;\n    const canonicalRequestHashStr = sha256(canonicalRequest);\n\n    const stringToSign = \"AWS4-HMAC-SHA256\\n\" + params.datetimeNow + \"\\n\" + params.dateNow + \"/\" + params.region + \"/\" + params.service +\n        \"/aws4_request\\n\" + canonicalRequestHashStr;\n\n    // ts-ignore's because library can accept array buffer as key, but TS arg is incorrect\n    const signKey = \"AWS4\" + params.secretAccessKey;\n    const kDate = sha256.hmac.arrayBuffer(signKey, params.dateNow);\n\n    // Note, js-sha256 has a bug in the TS interface that only supports strings as keys, while we need a bytearray\n    // as key. PR is open but unmerged: https://github.com/emn178/js-sha256/pull/25\n    // eslint-disable-next-line\n    // @ts-ignore\n    const kRegion = sha256.hmac.arrayBuffer(kDate, params.region);\n    // eslint-disable-next-line\n    // @ts-ignore\n    const kService = sha256.hmac.arrayBuffer(kRegion, params.service,);\n    // eslint-disable-next-line\n    // @ts-ignore\n    const signingKey = sha256.hmac.arrayBuffer(kService, \"aws4_request\");\n    // eslint-disable-next-line\n    // @ts-ignore\n    const signature = sha256.hmac(signingKey, stringToSign);\n\n    res.set(\"Authorization\", \"AWS4-HMAC-SHA256 Credential=\" + params.accessKeyId + \"/\" + params.dateNow + \"/\" + params.region + \"/\" +\n        params.service + \"/aws4_request, SignedHeaders=\" + signedHeaders +\n        \", Signature=\" + signature);\n\n    return res;\n}\n\nconst createS3HeadersFromS3Config = function (config : S3Config | undefined, url : string, method : string, contentType: string | null = null, payload : Uint8Array | null = null) : Map<string, string> {\n    const params = getS3Params(config, url, method);\n    const payloadParams = {\n        contentType: contentType,\n        contentHash: payload ? sha256.hex(payload!) : null\n    } as S3PayloadParams;\n    return createS3Headers(params, payloadParams);\n}\n\nexport function addS3Headers(xhr: XMLHttpRequest, config : S3Config | undefined, url : string, method: string, contentType: string | null = null, payload : Uint8Array | null = null) {\n    if (config?.accessKeyId || config?.sessionToken) {\n        const headers = createS3HeadersFromS3Config(config, url, method, contentType, payload);\n        headers.forEach((value: string, header: string) => {\n            xhr.setRequestHeader(header, value);\n        });\n\n        if (contentType) {\n            xhr.setRequestHeader(\"content-type\", contentType);\n        }\n    }\n}\n\nexport function parseS3Url (url: string) : {bucket : string, path : string} {\n    if (url.indexOf(\"s3://\") != 0) {\n        throw new Error(\"URL needs to start with s3://\");\n    }\n    const slashPos = url.indexOf('/', 5);\n\n    if (slashPos == -1) {\n        throw new Error(\"URL needs to contain a '/' after the host\");\n    }\n\n    const bucket = url.substring(5, slashPos);\n    if (!bucket) {\n        throw new Error(\"URL needs to contain a bucket name\");\n    }\n    const path = url.substring(slashPos);\n    if (!path) {\n        throw new Error(\"URL needs to contain key\");\n    }\n\n    return {bucket: bucket, path: path}\n}\n\nfunction isPathStyleAccess(config : S3Config | undefined) : boolean {\n    if (config?.endpoint?.startsWith(\"http\")) {\n        return true\n    }\n    return false\n}\n\nexport function getHTTPUrl(config : S3Config | undefined, url : string) : string {\n    const parsedUrl = parseS3Url(url);\n    if (isPathStyleAccess(config)) {\n        // Endpoint is a full url, we append the bucket\n        return `${config?.endpoint}/${parsedUrl.bucket}` + parsedUrl.path;\n    }\n    return 'https://' + getHTTPHost(config, url, parsedUrl.bucket) + parsedUrl.path;\n}", "import { StatusCode } from '../status';\nimport { addS3Headers, getHTTPUrl } from '../utils';\n\nimport {\n    callSRet,\n    dropResponseBuffers,\n    DuckDBDataProtocol,\n    DuckDBFileInfo,\n    DuckDBGlobalFileInfo,\n    DuckDBRuntime,\n    failWith,\n    FileFlags,\n    readString,\n} from './runtime';\nimport { DuckDBModule } from './duckdb_module';\nimport * as udf from './udf_runtime';\n\nexport const BROWSER_RUNTIME: DuckDBRuntime & {\n    _fileInfoCache: Map<number, DuckDBFileInfo>;\n    _globalFileInfo: DuckDBGlobalFileInfo | null;\n\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null;\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null;\n} = {\n    _files: new Map<string, any>(),\n    _fileInfoCache: new Map<number, DuckDBFileInfo>(),\n    _udfFunctions: new Map(),\n    _globalFileInfo: null,\n\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null {\n        try {\n            const cached = BROWSER_RUNTIME._fileInfoCache.get(fileId);\n            const [s, d, n] = callSRet(\n                mod,\n                'duckdb_web_fs_get_file_info_by_id',\n                ['number', 'number'],\n                [fileId, cached?.cacheEpoch || 0],\n            );\n            if (s !== StatusCode.SUCCESS) {\n                return null;\n            } else if (n === 0) {\n                // Epoch is up to date\n                return cached!;\n            }\n            const infoStr = readString(mod, d, n);\n            dropResponseBuffers(mod);\n            const info = JSON.parse(infoStr);\n            if (info == null) {\n                return null;\n            }\n            const file = { ...info, blob: null } as DuckDBFileInfo;\n            BROWSER_RUNTIME._fileInfoCache.set(fileId, file);\n            return file;\n        } catch (e: any) {\n            return null;\n        }\n    },\n\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null {\n        try {\n            const [s, d, n] = callSRet(\n                mod,\n                'duckdb_web_get_global_file_info',\n                ['number'],\n                [BROWSER_RUNTIME._globalFileInfo?.cacheEpoch || 0],\n            );\n            if (s !== StatusCode.SUCCESS) {\n                return null;\n            } else if (n === 0) {\n                // Epoch is up to date\n                return BROWSER_RUNTIME._globalFileInfo!;\n            }\n            const infoStr = readString(mod, d, n);\n            dropResponseBuffers(mod);\n            const info = JSON.parse(infoStr);\n            if (info == null) {\n                return null;\n            }\n            BROWSER_RUNTIME._globalFileInfo = { ...info, blob: null } as DuckDBGlobalFileInfo;\n\n            return BROWSER_RUNTIME._globalFileInfo;\n        } catch (e: any) {\n            return null;\n        }\n    },\n\n    testPlatformFeature: (_mod: DuckDBModule, feature: number): boolean => {\n        switch (feature) {\n            case 1:\n                return typeof BigInt64Array !== 'undefined';\n            default:\n                console.warn(`test for unknown feature: ${feature}`);\n                return false;\n        }\n    },\n\n    getDefaultDataProtocol(mod: DuckDBModule): number {\n        return DuckDBDataProtocol.BROWSER_FILEREADER;\n    },\n\n    openFile: (mod: DuckDBModule, fileId: number, flags: FileFlags): number => {\n        try {\n            BROWSER_RUNTIME._fileInfoCache.delete(fileId);\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n            switch (file?.dataProtocol) {\n                case DuckDBDataProtocol.HTTP:\n                case DuckDBDataProtocol.S3: {\n                    if (flags & FileFlags.FILE_FLAGS_READ && flags & FileFlags.FILE_FLAGS_WRITE) {\n                        throw new Error(\n                            `Opening file ${file.fileName} failed: cannot open file with both read and write flags set`,\n                        );\n                    } else if (flags & FileFlags.FILE_FLAGS_APPEND) {\n                        throw new Error(\n                            `Opening file ${file.fileName} failed: appending to HTTP/S3 files is not supported`,\n                        );\n                    } else if (flags & FileFlags.FILE_FLAGS_WRITE) {\n                        // We send a HEAD request to try to determine if we can write to data_url\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\n                        } else {\n                            xhr.open('HEAD', file.dataUrl!, false);\n                        }\n                        xhr.send(null);\n\n                        // Expect 200 for existing files that we will overwrite or 404 for non-existent files can be created\n                        if (xhr.status != 200 && xhr.status != 404) {\n                            throw new Error(\n                                `Opening file ${file.fileName} failed: Unexpected return status from server (${xhr.status})`,\n                            );\n                        } else if (\n                            xhr.status == 404 &&\n                            !(flags & FileFlags.FILE_FLAGS_FILE_CREATE || flags & FileFlags.FILE_FLAGS_FILE_CREATE_NEW)\n                        ) {\n                            throw new Error(\n                                `Opening file ${file.fileName} failed: Cannot write to non-existent file without FILE_FLAGS_FILE_CREATE or FILE_FLAGS_FILE_CREATE_NEW flag.`,\n                            );\n                        }\n                        // Return an empty buffer that can be used to buffer the writes to this s3/http file\n                        const data = mod._malloc(1);\n                        const src = new Uint8Array();\n                        mod.HEAPU8.set(src, data);\n                        const result = mod._malloc(2 * 8);\n                        mod.HEAPF64[(result >> 3) + 0] = 1;\n                        mod.HEAPF64[(result >> 3) + 1] = data;\n                        return result;\n                    } else if (flags != FileFlags.FILE_FLAGS_READ) {\n                        throw new Error(`Opening file ${file.fileName} failed: unsupported file flags: ${flags}`);\n                    }\n\n                    // Supports ranges?\n                    let contentLength = null;\n                    let error: any | null = null;\n                    try {\n                        // Send a dummy HEAD request with range protocol\n                        //          -> good IFF status is 206 and contentLenght is present\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\n                        } else {\n                            xhr.open('HEAD', file.dataUrl!, false);\n                        }\n                        xhr.setRequestHeader('Range', `bytes=0-`);\n                        xhr.send(null);\n\n                        // Supports range requests\n                        contentLength = xhr.getResponseHeader('Content-Length');\n                        if (contentLength !== null && xhr.status == 206) {\n                            const result = mod._malloc(2 * 8);\n                            mod.HEAPF64[(result >> 3) + 0] = +contentLength;\n                            mod.HEAPF64[(result >> 3) + 1] = 0;\n                            return result;\n                        }\n                    } catch (e: any) {\n                        error = e;\n                        console.warn(`HEAD request with range header failed: ${e}`);\n                    }\n\n                    // Try to fallback to full read?\n                    if (file.allowFullHttpReads) {\n                        if ((contentLength !== null) && (+contentLength > 1)) {\n                            // 2. Send a dummy GET range request querying the first byte of the file\n                            //          -> good IFF status is 206 and contentLenght2 is 1\n                            //          -> otherwise, iff 200 and contentLenght2 == contentLenght\n                            //                 we just downloaded the file, save it and move further\n                            const xhr = new XMLHttpRequest();\n                            if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                                xhr.open('GET', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                                addS3Headers(xhr, file.s3Config, file.dataUrl!, 'GET');\n                            } else {\n                                xhr.open('GET', file.dataUrl!, false);\n                            }\n                            xhr.setRequestHeader('Range', `bytes=0-0`);\n                            xhr.send(null);\n                            const contentLength2 = xhr.getResponseHeader('Content-Length');\n\n                            if (xhr.status == 206 && contentLength2 !== null && +contentLength2 == 1) {\n                                const result = mod._malloc(2 * 8);\n                                mod.HEAPF64[(result >> 3) + 0] = +contentLength;\n                                mod.HEAPF64[(result >> 3) + 1] = 0;\n                                return result;\n                            }\n                            if (xhr.status == 200 && contentLength2 !== null && +contentLength2 == +contentLength) {\n                                console.warn(`fall back to full HTTP read for: ${file.dataUrl}`);\n                                const data = mod._malloc(xhr.response.byteLength);\n                                const src = new Uint8Array(xhr.response, 0, xhr.response.byteLength);\n                                mod.HEAPU8.set(src, data);\n                                const result = mod._malloc(2 * 8);\n                                mod.HEAPF64[(result >> 3) + 0] = xhr.response.byteLength;\n                                mod.HEAPF64[(result >> 3) + 1] = data;\n                                return result;\n                            }\n                        }\n                        console.warn(`falling back to full HTTP read for: ${file.dataUrl}`);\n                        // 3. Send non-range request\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('GET', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'GET');\n                        } else {\n                            xhr.open('GET', file.dataUrl!, false);\n                        }\n                        xhr.responseType = 'arraybuffer';\n                        xhr.send(null);\n\n                        // Return buffer\n                        if (xhr.status == 200) {\n                            const data = mod._malloc(xhr.response.byteLength);\n                            const src = new Uint8Array(xhr.response, 0, xhr.response.byteLength);\n                            mod.HEAPU8.set(src, data);\n                            const result = mod._malloc(2 * 8);\n                            mod.HEAPF64[(result >> 3) + 0] = xhr.response.byteLength;\n                            mod.HEAPF64[(result >> 3) + 1] = data;\n                            return result;\n                        }\n                    }\n\n                    // Raise error?\n                    if (error != null) {\n                        throw new Error(`Reading file ${file.fileName} failed with error: ${error}`);\n                    }\n                    return 0;\n                }\n                // File reader File\n                case DuckDBDataProtocol.BROWSER_FILEREADER: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (handle) {\n                        const result = mod._malloc(2 * 8);\n                        mod.HEAPF64[(result >> 3) + 0] = handle.size;\n                        mod.HEAPF64[(result >> 3) + 1] = 0;\n                        return result;\n                    }\n\n                    // Fall back to empty buffered file in the browser\n                    console.warn(`Buffering missing file: ${file.fileName}`);\n                    const result = mod._malloc(2 * 8);\n                    const buffer = mod._malloc(1); // malloc(0) is allowed to return a nullptr\n                    mod.HEAPF64[(result >> 3) + 0] = 1;\n                    mod.HEAPF64[(result >> 3) + 1] = buffer;\n                    return result;\n                }\n            }\n        } catch (e: any) {\n            // TODO (samansmink): this path causes the WASM code to hang\n            console.error(e.toString());\n            failWith(mod, e.toString());\n        }\n        return 0;\n    },\n    glob: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        try {\n            const path = readString(mod, pathPtr, pathLen);\n            // Starts with http?\n            // Try a HTTP HEAD request\n            if (path.startsWith('http') || path.startsWith('s3://')) {\n                // Send a dummy range request querying the first byte of the file\n                const xhr = new XMLHttpRequest();\n                if (path.startsWith('s3://')) {\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\n                } else {\n                    xhr.open('HEAD', path!, false);\n                }\n                xhr.send(null);\n                if (xhr.status != 200 && xhr.status !== 206) {\n                    // Pre-signed resources on S3 in common configurations fail on any HEAD request\n                    // https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-example-presigned-urls.html\n                    // so we need (if enabled) to bump to a ranged GET\n                    if (!BROWSER_RUNTIME.getGlobalFileInfo(mod)?.allowFullHttpReads) {\n                        failWith(mod, `HEAD request failed: ${path}, with full http reads are disabled`);\n                        return;\n                    }\n                    const xhr2 = new XMLHttpRequest();\n                    if (path.startsWith('s3://')) {\n                        const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                        xhr2.open('GET', getHTTPUrl(globalInfo?.s3Config, path), false);\n                        addS3Headers(xhr2, globalInfo?.s3Config, path, 'HEAD');\n                    } else {\n                        xhr2.open('GET', path!, false);\n                    }\n                    xhr2.setRequestHeader('Range', `bytes=0-0`);\n                    xhr2.send(null);\n                    if (xhr2.status != 200 && xhr2.status !== 206) {\n                        failWith(mod, `HEAD and GET requests failed: ${path}`);\n                        return;\n                    }\n                    const contentLength = xhr2.getResponseHeader('Content-Length');\n                    if (contentLength && (+contentLength > 1)) {\n                        console.warn(`Range request for ${path} did not return a partial response: ${xhr2.status} \"${xhr2.statusText}\"`);\n                    }\n                }\n                mod.ccall('duckdb_web_fs_glob_add_path', null, ['string'], [path]);\n            }\n        } catch (e: any) {\n            failWith(mod, e.toString());\n            return 0;\n        }\n    },\n    checkFile: (mod: DuckDBModule, pathPtr: number, pathLen: number): boolean => {\n        try {\n            const path = readString(mod, pathPtr, pathLen);\n            // Starts with http or S3?\n            // Try a HTTP HEAD request\n            if (path.startsWith('http') || path.startsWith('s3://')) {\n                // Send a dummy range request querying the first byte of the file\n                const xhr = new XMLHttpRequest();\n                if (path.startsWith('s3://')) {\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\n                } else {\n                    xhr.open('HEAD', path!, false);\n                }\n                xhr.send(null);\n                return xhr.status == 206 || xhr.status == 200;\n            }\n        } catch (e: any) {\n            return false;\n        }\n        return false;\n    },\n    syncFile: (_mod: DuckDBModule, _fileId: number) => {},\n    closeFile: (mod: DuckDBModule, fileId: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        BROWSER_RUNTIME._fileInfoCache.delete(fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.BUFFER:\n            case DuckDBDataProtocol.HTTP:\n            case DuckDBDataProtocol.S3:\n                break;\n            case DuckDBDataProtocol.NODE_FS:\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\n                // XXX Remove from registry\n                return;\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                }\n                return handle.flush();\n            }\n        }\n    },\n    truncateFile: (mod: DuckDBModule, fileId: number, newSize: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.HTTP:\n                failWith(mod, `Cannot truncate a http file`);\n                return;\n            case DuckDBDataProtocol.S3:\n                failWith(mod, `Cannot truncate an s3 file`);\n                return;\n            case DuckDBDataProtocol.BUFFER:\n            case DuckDBDataProtocol.NODE_FS:\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\n                failWith(mod, `truncateFile not implemented`);\n                return;\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                }\n                return handle.truncate(newSize);\n            }\n        }\n        return 0;\n    },\n    readFile(mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) {\n        if (bytes == 0) {\n            // Be robust to empty reads\n            return 0;\n        }\n        try {\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n            switch (file?.dataProtocol) {\n                // File reading from BLOB or HTTP MUST be done with range requests.\n                // We have to check in OPEN if such file supports range requests and upgrade to BUFFER if not.\n                case DuckDBDataProtocol.HTTP:\n                case DuckDBDataProtocol.S3: {\n                    if (!file.dataUrl) {\n                        throw new Error(`Missing data URL for file ${fileId}`);\n                    }\n                    try {\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('GET', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'GET');\n                        } else {\n                            xhr.open('GET', file.dataUrl!, false);\n                        }\n                        xhr.responseType = 'arraybuffer';\n                        xhr.setRequestHeader('Range', `bytes=${location}-${location + bytes - 1}`);\n                        xhr.send(null);\n                        if (\n                            xhr.status == 206 /* Partial content */ ||\n                            (xhr.status == 200 && bytes == xhr.response.byteLength && location == 0)\n                        ) {\n                            const src = new Uint8Array(xhr.response, 0, Math.min(xhr.response.byteLength, bytes));\n                            mod.HEAPU8.set(src, buf);\n                            return src.byteLength;\n                        } else if (xhr.status == 200) {\n                            // TODO: here we are actually throwing away all non-relevant bytes, but this is still better than failing\n                            //       proper solution would require notifying duckdb-wasm cache, while we are piggybackign on browser cache\n                            console.warn(`Range request for ${file.dataUrl} did not return a partial response: ${xhr.status} \"${xhr.statusText}\"`);\n                            const src = new Uint8Array(xhr.response, location, Math.min(xhr.response.byteLength-location, bytes));\n                            mod.HEAPU8.set(src, buf);\n                            return src.byteLength;\n                        } else {\n                            throw new Error(\n                                `Range request for ${file.dataUrl} did returned non-success status: ${xhr.status} \"${xhr.statusText}\"`,\n                            );\n                        }\n                    } catch (e) {\n                        throw new Error(`Range request for ${file.dataUrl} failed with error: ${e}\"`);\n                    }\n                }\n                case DuckDBDataProtocol.BROWSER_FILEREADER: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (!handle) {\n                        throw new Error(`No HTML5 file registered with name: ${file.fileName}`);\n                    }\n                    const sliced = handle!.slice(location, location + bytes);\n                    const data = new Uint8Array(new FileReaderSync().readAsArrayBuffer(sliced));\n                    mod.HEAPU8.set(data, buf);\n                    return data.byteLength;\n                }\n                case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (!handle) {\n                        throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                    }\n                    const out = mod.HEAPU8.subarray(buf, buf + bytes);\n                    return handle.read(out, { at: location });\n                }\n            }\n            return 0;\n        } catch (e: any) {\n            failWith(mod, e.toString());\n            return 0;\n        }\n    },\n    writeFile: (mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.HTTP:\n                failWith(mod, 'Cannot write to HTTP file');\n                return 0;\n            case DuckDBDataProtocol.S3: {\n                const buffer = mod.HEAPU8.subarray(buf, buf + bytes);\n                const xhr = new XMLHttpRequest();\n                xhr.open('PUT', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\n                addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'PUT', '', buffer);\n                xhr.send(buffer);\n                return bytes;\n            }\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\n                failWith(mod, 'cannot write using the html5 file reader api');\n                return 0;\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                }\n                const input = mod.HEAPU8.subarray(buf, buf + bytes);\n                return handle.write(input, { at: location });\n            }\n        }\n        return 0;\n    },\n    getLastFileModificationTime: (mod: DuckDBModule, fileId: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.BROWSER_FILEREADER: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw Error(`No handle available for file: ${file.fileName}`);\n                }\n                return 0;\n            }\n\n            case DuckDBDataProtocol.HTTP:\n            case DuckDBDataProtocol.S3:\n                return new Date().getTime();\n        }\n        return 0;\n    },\n    checkDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`checkDirectory: ${path}`);\n        return false;\n    },\n    createDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`createDirectory: ${path}`);\n    },\n    removeDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`removeDirectory: ${path}`);\n    },\n    listDirectoryEntries: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`listDirectoryEntries: ${path}`);\n        return false;\n    },\n    moveFile: (mod: DuckDBModule, fromPtr: number, fromLen: number, toPtr: number, toLen: number) => {\n        const from = readString(mod, fromPtr, fromLen);\n        const to = readString(mod, toPtr, toLen);\n        const handle = BROWSER_RUNTIME._files?.get(from);\n        if (handle !== undefined) {\n            BROWSER_RUNTIME._files!.delete(handle);\n            BROWSER_RUNTIME._files!.set(to, handle);\n        }\n        for (const [key, value] of BROWSER_RUNTIME._fileInfoCache?.entries() || []) {\n            if (value.dataUrl == from) {\n                BROWSER_RUNTIME._fileInfoCache.delete(key);\n                break;\n            }\n        }\n        return true;\n    },\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number) => {},\n    callScalarUDF: (\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void => {\n        udf.callScalarUDF(BROWSER_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\n    },\n};\n\nexport default BROWSER_RUNTIME;\n", "\nvar DuckDB = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nasync function(DuckDB = {})  {\n\nvar Module=typeof DuckDB!=\"undefined\"?DuckDB:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import(\"module\");var require=createRequire(import.meta.url);var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=require(\"url\").fileURLToPath(new URL(\"./\",import.meta.url))}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module[\"inspect\"]=()=>\"[Emscripten Module object]\"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"./duckdb-mvp.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"./duckdb-mvp.wasm\",import.meta.url).href}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinary(binaryFile))}}return Promise.resolve().then(()=>getBinary(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>{return WebAssembly.instantiate(binary,imports)}).then(instance=>{return instance}).then(receiver,reason=>{err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}else{return instantiateArrayBuffer(binaryFile,imports,callback)}}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"Ra\"];updateMemoryViews();wasmTable=Module[\"asm\"][\"Ua\"];addOnInit(Module[\"asm\"][\"Sa\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${status})`;this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function _XML_GetBuffer(){err(\"missing function: XML_GetBuffer\");abort(-1)}function _XML_GetErrorCode(){err(\"missing function: XML_GetErrorCode\");abort(-1)}function _XML_Parse(){err(\"missing function: XML_Parse\");abort(-1)}function _XML_ParseBuffer(){err(\"missing function: XML_ParseBuffer\");abort(-1)}function _XML_ParserCreate(){err(\"missing function: XML_ParserCreate\");abort(-1)}function _XML_ParserFree(){err(\"missing function: XML_ParserFree\");abort(-1)}function _XML_ResumeParser(){err(\"missing function: XML_ResumeParser\");abort(-1)}function _XML_SetCharacterDataHandler(){err(\"missing function: XML_SetCharacterDataHandler\");abort(-1)}function _XML_SetElementHandler(){err(\"missing function: XML_SetElementHandler\");abort(-1)}function _XML_SetUserData(){err(\"missing function: XML_SetUserData\");abort(-1)}function _XML_StopParser(){err(\"missing function: XML_StopParser\");abort(-1)}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2]};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast}var dlopenMissingError=\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\";function ___dlsym(handle,symbol,ra){abort(dlopenMissingError)}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){var total=0;var srcReadLow=readfds?HEAP32[readfds>>>2]:0,srcReadHigh=readfds?HEAP32[readfds+4>>>2]:0;var srcWriteLow=writefds?HEAP32[writefds>>>2]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>>2]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>>2]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>>2]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>>2]:0)|(writefds?HEAP32[writefds>>>2]:0)|(exceptfds?HEAP32[exceptfds>>>2]:0);var allHigh=(readfds?HEAP32[readfds+4>>>2]:0)|(writefds?HEAP32[writefds+4>>>2]:0)|(exceptfds?HEAP32[exceptfds+4>>>2]:0);var check=function(fd,low,high,val){return fd<32?low&val:high&val};for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=SYSCALLS.getStreamFromFD(fd);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){flags=stream.stream_ops.poll(stream)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>>2]=dstReadLow;HEAP32[readfds+4>>>2]=dstReadHigh}if(writefds){HEAP32[writefds>>>2]=dstWriteLow;HEAP32[writefds+4>>>2]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>>2]=dstExceptLow;HEAP32[exceptfds+4>>>2]=dstExceptHigh}return total}function SOCKFS(){err(\"missing function: $SOCKFS\");abort(-1)}function FS(){err(\"missing function: $FS\");abort(-1)}function getSocketFromFD(fd){var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket}function inetNtop4(addr){return(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255)}function inetNtop6(ints){var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str}function readSockaddr(sa,salen){var family=HEAP16[sa>>>1];var port=_ntohs(HEAPU16[sa+2>>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>>2];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>>2],HEAP32[sa+12>>>2],HEAP32[sa+16>>>2],HEAP32[sa+20>>>2]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}}function inetPton4(str){var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}function jstoi_q(str){return parseInt(str)}function inetPton6(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]==\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr:function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};function getSocketAddress(addrp,addrlen,allowNull){if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}function ___syscall_bind(fd,addr,addrlen,d1,d2,d3){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.bind(sock,info.addr,info.port);return 0}function ___syscall_connect(fd,addr,addrlen,d1,d2,d3){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}function ___syscall_faccessat(dirfd,path,amode,flags){}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_fstat64(fd,buf){}function ___syscall_ftruncate64(fd,length_low,length_high){}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function ___syscall_getdents64(fd,dirp,count){}function zeroMemory(address,size){HEAPU8.fill(0,address,address+size);return address}function writeSockaddr(sa,family,addr,port,addrlen){switch(family){case 2:addr=inetPton4(addr);zeroMemory(sa,16);if(addrlen){HEAP32[addrlen>>>2]=16}HEAP16[sa>>>1]=family;HEAP32[sa+4>>>2]=addr;HEAP16[sa+2>>>1]=_htons(port);break;case 10:addr=inetPton6(addr);zeroMemory(sa,28);if(addrlen){HEAP32[addrlen>>>2]=28}HEAP32[sa>>>2]=family;HEAP32[sa+8>>>2]=addr[0];HEAP32[sa+12>>>2]=addr[1];HEAP32[sa+16>>>2]=addr[2];HEAP32[sa+20>>>2]=addr[3];HEAP16[sa+2>>>1]=_htons(port);break;default:return 5}return 0}function ___syscall_getpeername(fd,addr,addrlen,d1,d2,d3){var sock=getSocketFromFD(fd);if(!sock.daddr){return-53}var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport,addrlen);return 0}function ___syscall_getsockopt(fd,level,optname,optval,optlen,d1){var sock=getSocketFromFD(fd);if(level===1){if(optname===4){HEAP32[optval>>>2]=sock.error;HEAP32[optlen>>>2]=4;sock.error=null;return 0}}return-50}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_lstat64(path,buf){}function ___syscall_mkdirat(dirfd,path,mode){}function ___syscall_newfstatat(dirfd,path,buf,flags){}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_recvfrom(fd,buf,len,flags,addr,addrlen){var sock=getSocketFromFD(fd);var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port,addrlen)}HEAPU8.set(msg.buffer,buf>>>0);return msg.buffer.byteLength}function ___syscall_renameat(olddirfd,oldpath,newdirfd,newpath){}function ___syscall_rmdir(path){}function ___syscall_sendto(fd,message,length,flags,addr,addr_len){}function ___syscall_socket(domain,type,protocol){}function ___syscall_stat64(path,buf){}function ___syscall_unlinkat(dirfd,path,flags){}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function readI53FromI64(ptr){return HEAPU32[ptr>>>2]+HEAP32[ptr+4>>>2]*4294967296}function isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}var MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335];var MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334];function ydayFromDate(date){var leap=isLeapYear(date.getFullYear());var monthDaysCumulative=leap?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE;var yday=monthDaysCumulative[date.getMonth()]+date.getDate()-1;return yday}function __localtime_js(time,tmPtr){var date=new Date(readI53FromI64(time)*1e3);HEAP32[tmPtr>>>2]=date.getSeconds();HEAP32[tmPtr+4>>>2]=date.getMinutes();HEAP32[tmPtr+8>>>2]=date.getHours();HEAP32[tmPtr+12>>>2]=date.getDate();HEAP32[tmPtr+16>>>2]=date.getMonth();HEAP32[tmPtr+20>>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>>2]=date.getDay();var yday=ydayFromDate(date)|0;HEAP32[tmPtr+28>>>2]=yday;HEAP32[tmPtr+36>>>2]=-(date.getTimezoneOffset()*60);var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>>2]=dst}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}function stringToNewUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8(str,ret,size);return ret}function __tzset_js(timezone,daylight,tzname){var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAPU32[timezone>>>2]=stdTimezoneOffset*60;HEAP32[daylight>>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return match?match[1]:\"GMT\"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=stringToNewUTF8(winterName);var summerNamePtr=stringToNewUTF8(summerName);if(summerOffset<winterOffset){HEAPU32[tzname>>>2]=winterNamePtr;HEAPU32[tzname+4>>>2]=summerNamePtr}else{HEAPU32[tzname>>>2]=summerNamePtr;HEAPU32[tzname+4>>>2]=winterNamePtr}}function _abort(){abort(\"\")}function _dlopen(filename,flags){abort(dlopenMissingError)}function _duckdb_web_fs_directory_create(path,pathLen){return globalThis.DUCKDB_RUNTIME.createDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_list_files(path,pathLen){return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module,path,pathLen)}function _duckdb_web_fs_directory_remove(path,pathLen){return globalThis.DUCKDB_RUNTIME.removeDirectory(Module,path,pathLen)}function _duckdb_web_fs_file_close(fileId){return globalThis.DUCKDB_RUNTIME.closeFile(Module,fileId)}function _duckdb_web_fs_file_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkFile(Module,path,pathLen)}function _duckdb_web_fs_file_get_last_modified_time(fileId){return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module,fileId)}function _duckdb_web_fs_file_move(from,fromLen,to,toLen){return globalThis.DUCKDB_RUNTIME.moveFile(Module,from,fromLen,to,toLen)}function _duckdb_web_fs_file_open(fileId,flags){return globalThis.DUCKDB_RUNTIME.openFile(Module,fileId,flags)}function _duckdb_web_fs_file_read(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.readFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_file_truncate(fileId,newSize){return globalThis.DUCKDB_RUNTIME.truncateFile(Module,fileId,newSize)}function _duckdb_web_fs_file_write(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.writeFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_get_default_data_protocol(Module){return globalThis.DUCKDB_RUNTIME.getDefaultDataProtocol(Module)}function _duckdb_web_fs_glob(path,pathLen){return globalThis.DUCKDB_RUNTIME.glob(Module,path,pathLen)}function _duckdb_web_test_platform_feature(feature){return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module,feature)}function _duckdb_web_udf_scalar_call(funcId,descPtr,descSize,ptrsPtr,ptrsSize,response){return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module,funcId,descPtr,descSize,ptrsPtr,ptrsSize,response)}function _emscripten_date_now(){return Date.now()}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){global.performance=require(\"perf_hooks\").performance}_emscripten_get_now=()=>performance.now();function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}function emscripten_realloc_buffer(size){var b=wasmMemory.buffer;var pages=size-b.byteLength+65535>>>16;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings}function stringToAscii(str,buffer){for(var i=0;i<str.length;++i){HEAP8[buffer++>>>0]=str.charCodeAt(i)}HEAP8[buffer>>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>>2]=bufSize;return 0}function _fd_close(fd){return 52}function _fd_fdstat_get(fd,pbuf){var rightsBase=0;var rightsInheriting=0;var flags=0;{var type=2;if(fd==0){rightsBase=2}else if(fd==1||fd==2){rightsBase=64}flags=1}HEAP8[pbuf>>>0]=type;HEAP16[pbuf+2>>>1]=flags;tempI64=[rightsBase>>>0,(tempDouble=rightsBase,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+8>>>2]=tempI64[0],HEAP32[pbuf+12>>>2]=tempI64[1];tempI64=[rightsInheriting>>>0,(tempDouble=rightsInheriting,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+16>>>2]=tempI64[0],HEAP32[pbuf+20>>>2]=tempI64[1];return 0}function _fd_pread(fd,iov,iovcnt,offset_low,offset_high,pnum){return 52}function _fd_pwrite(fd,iov,iovcnt,offset_low,offset_high,pnum){return 52}function _fd_read(fd,iov,iovcnt,pnum){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}function _fd_sync(fd){return 52}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2];var len=HEAPU32[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j>>>0])}num+=len}HEAPU32[pnum>>>2]=num;return 0}function _getaddrinfo(node,service,hint,out){var addr=0;var port=0;var flags=0;var family=0;var type=0;var proto=0;var ai;function allocaddrinfo(family,type,proto,canon,addr,port){var sa,salen,ai;var errno;salen=family===10?28:16;addr=family===10?inetNtop6(addr):inetNtop4(addr);sa=_malloc(salen);errno=writeSockaddr(sa,family,addr,port);assert(!errno);ai=_malloc(32);HEAP32[ai+4>>>2]=family;HEAP32[ai+8>>>2]=type;HEAP32[ai+12>>>2]=proto;HEAPU32[ai+24>>>2]=canon;HEAPU32[ai+20>>>2]=sa;if(family===10){HEAP32[ai+16>>>2]=28}else{HEAP32[ai+16>>>2]=16}HEAP32[ai+28>>>2]=0;return ai}if(hint){flags=HEAP32[hint>>>2];family=HEAP32[hint+4>>>2];type=HEAP32[hint+8>>>2];proto=HEAP32[hint+12>>>2]}if(type&&!proto){proto=type===2?17:6}if(!type&&proto){type=proto===17?2:1}if(proto===0){proto=6}if(type===0){type=1}if(!node&&!service){return-2}if(flags&~(1|2|4|1024|8|16|32)){return-1}if(hint!==0&&HEAP32[hint>>>2]&2&&!node){return-1}if(flags&32){return-2}if(type!==0&&type!==1&&type!==2){return-7}if(family!==0&&family!==2&&family!==10){return-6}if(service){service=UTF8ToString(service);port=parseInt(service,10);if(isNaN(port)){if(flags&1024){return-2}return-8}}if(!node){if(family===0){family=2}if((flags&1)===0){if(family===2){addr=_htonl(2130706433)}else{addr=[0,0,0,1]}}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2]=ai;return 0}node=UTF8ToString(node);addr=inetPton4(node);if(addr!==null){if(family===0||family===2){family=2}else if(family===10&&flags&8){addr=[0,0,_htonl(65535),addr];family=10}else{return-2}}else{addr=inetPton6(node);if(addr!==null){if(family===0||family===10){family=10}else{return-2}}}if(addr!=null){ai=allocaddrinfo(family,type,proto,node,addr,port);HEAPU32[out>>>2]=ai;return 0}if(flags&4){return-2}node=DNS.lookup_name(node);addr=inetPton4(node);if(family===0){family=2}else if(family===10){addr=[0,0,_htonl(65535),addr]}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2]=ai;return 0}function initRandomFill(){if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){return view=>crypto.getRandomValues(view)}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");var randomFillSync=crypto_module[\"randomFillSync\"];if(randomFillSync){return view=>crypto_module[\"randomFillSync\"](view)}var randomBytes=crypto_module[\"randomBytes\"];return view=>(view.set(randomBytes(view.byteLength)),view)}catch(e){}}abort(\"initRandomDevice\")}function randomFill(view){return(randomFill=initRandomFill())(view)}function _getentropy(buffer,size){randomFill(HEAPU8.subarray(buffer>>>0,buffer+size>>>0));return 0}function _getnameinfo(sa,salen,node,nodelen,serv,servlen,flags){var info=readSockaddr(sa,salen);if(info.errno){return-6}var port=info.port;var addr=info.addr;var overflowed=false;if(node&&nodelen){var lookup;if(flags&1||!(lookup=DNS.lookup_addr(addr))){if(flags&8){return-2}}else{addr=lookup}var numBytesWrittenExclNull=stringToUTF8(addr,node,nodelen);if(numBytesWrittenExclNull+1>=nodelen){overflowed=true}}if(serv&&servlen){port=\"\"+port;var numBytesWrittenExclNull=stringToUTF8(port,serv,servlen);if(numBytesWrittenExclNull+1>=servlen){overflowed=true}}if(overflowed){return-12}return 0}function arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer>>>0)}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>>2];var date={tm_sec:HEAP32[tm>>>2],tm_min:HEAP32[tm+4>>>2],tm_hour:HEAP32[tm+8>>>2],tm_mday:HEAP32[tm+12>>>2],tm_mon:HEAP32[tm+16>>>2],tm_year:HEAP32[tm+20>>>2],tm_wday:HEAP32[tm+24>>>2],tm_yday:HEAP32[tm+28>>>2],tm_isdst:HEAP32[tm+32>>>2],tm_gmtoff:HEAP32[tm+36>>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm)}function _ucnv_close_64(){err(\"missing function: ucnv_close_64\");abort(-1)}function _ucnv_convertEx_64(){err(\"missing function: ucnv_convertEx_64\");abort(-1)}function _ucnv_open_64(){err(\"missing function: ucnv_open_64\");abort(-1)}function _ucnv_toAlgorithmic_64(){err(\"missing function: ucnv_toAlgorithmic_64\");abort(-1)}function _ucsdet_close_64(){err(\"missing function: ucsdet_close_64\");abort(-1)}function _ucsdet_detect_64(){err(\"missing function: ucsdet_detect_64\");abort(-1)}function _ucsdet_getConfidence_64(){err(\"missing function: ucsdet_getConfidence_64\");abort(-1)}function _ucsdet_getName_64(){err(\"missing function: ucsdet_getName_64\");abort(-1)}function _ucsdet_open_64(){err(\"missing function: ucsdet_open_64\");abort(-1)}function _ucsdet_setText_64(){err(\"missing function: ucsdet_setText_64\");abort(-1)}function _unzClose(){err(\"missing function: unzClose\");abort(-1)}function _unzCloseCurrentFile(){err(\"missing function: unzCloseCurrentFile\");abort(-1)}function _unzGetCurrentFileInfo(){err(\"missing function: unzGetCurrentFileInfo\");abort(-1)}function _unzGetCurrentFileInfo64(){err(\"missing function: unzGetCurrentFileInfo64\");abort(-1)}function _unzGetGlobalInfo(){err(\"missing function: unzGetGlobalInfo\");abort(-1)}function _unzGoToFirstFile(){err(\"missing function: unzGoToFirstFile\");abort(-1)}function _unzGoToNextFile(){err(\"missing function: unzGoToNextFile\");abort(-1)}function _unzLocateFile(){err(\"missing function: unzLocateFile\");abort(-1)}function _unzOpen(){err(\"missing function: unzOpen\");abort(-1)}function _unzOpen2(){err(\"missing function: unzOpen2\");abort(-1)}function _unzOpenCurrentFile(){err(\"missing function: unzOpenCurrentFile\");abort(-1)}function _unzReadCurrentFile(){err(\"missing function: unzReadCurrentFile\");abort(-1)}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function stringToUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var wasmImports={\"g\":_XML_GetBuffer,\"V\":_XML_GetErrorCode,\"da\":_XML_Parse,\"m\":_XML_ParseBuffer,\"o\":_XML_ParserCreate,\"d\":_XML_ParserFree,\"B\":_XML_ResumeParser,\"f\":_XML_SetCharacterDataHandler,\"b\":_XML_SetElementHandler,\"n\":_XML_SetUserData,\"h\":_XML_StopParser,\"a\":___cxa_throw,\"La\":___dlsym,\"Fa\":___syscall__newselect,\"Ja\":___syscall_bind,\"Ia\":___syscall_connect,\"Ba\":___syscall_faccessat,\"e\":___syscall_fcntl64,\"Aa\":___syscall_fstat64,\"O\":___syscall_ftruncate64,\"va\":___syscall_getdents64,\"Da\":___syscall_getpeername,\"Ea\":___syscall_getsockopt,\"K\":___syscall_ioctl,\"xa\":___syscall_lstat64,\"wa\":___syscall_mkdirat,\"ya\":___syscall_newfstatat,\"L\":___syscall_openat,\"Ga\":___syscall_recvfrom,\"ta\":___syscall_renameat,\"F\":___syscall_rmdir,\"Ha\":___syscall_sendto,\"H\":___syscall_socket,\"za\":___syscall_stat64,\"G\":___syscall_unlinkat,\"Na\":__emscripten_get_now_is_monotonic,\"fa\":__localtime_js,\"ga\":__tzset_js,\"i\":_abort,\"Ma\":_dlopen,\"ma\":_duckdb_web_fs_directory_create,\"na\":_duckdb_web_fs_directory_exists,\"ka\":_duckdb_web_fs_directory_list_files,\"la\":_duckdb_web_fs_directory_remove,\"D\":_duckdb_web_fs_file_close,\"ia\":_duckdb_web_fs_file_exists,\"N\":_duckdb_web_fs_file_get_last_modified_time,\"ja\":_duckdb_web_fs_file_move,\"pa\":_duckdb_web_fs_file_open,\"p\":_duckdb_web_fs_file_read,\"oa\":_duckdb_web_fs_file_truncate,\"E\":_duckdb_web_fs_file_write,\"qa\":_duckdb_web_fs_get_default_data_protocol,\"ha\":_duckdb_web_fs_glob,\"C\":_duckdb_web_test_platform_feature,\"ra\":_duckdb_web_udf_scalar_call,\"M\":_emscripten_date_now,\"Oa\":_emscripten_get_heap_max,\"q\":_emscripten_get_now,\"Ka\":_emscripten_memcpy_big,\"Qa\":_emscripten_resize_heap,\"T\":_environ_get,\"W\":_environ_sizes_get,\"k\":_fd_close,\"ea\":_fd_fdstat_get,\"Q\":_fd_pread,\"P\":_fd_pwrite,\"J\":_fd_read,\"R\":_fd_seek,\"ua\":_fd_sync,\"w\":_fd_write,\"I\":_getaddrinfo,\"sa\":_getentropy,\"Ca\":_getnameinfo,\"Pa\":_strftime_l,\"c\":_ucnv_close_64,\"X\":_ucnv_convertEx_64,\"v\":_ucnv_open_64,\"Z\":_ucnv_toAlgorithmic_64,\"Y\":_ucsdet_close_64,\"aa\":_ucsdet_detect_64,\"$\":_ucsdet_getConfidence_64,\"_\":_ucsdet_getName_64,\"ca\":_ucsdet_open_64,\"ba\":_ucsdet_setText_64,\"j\":_unzClose,\"u\":_unzCloseCurrentFile,\"z\":_unzGetCurrentFileInfo,\"r\":_unzGetCurrentFileInfo64,\"U\":_unzGetGlobalInfo,\"A\":_unzGoToFirstFile,\"y\":_unzGoToNextFile,\"t\":_unzLocateFile,\"x\":_unzOpen,\"S\":_unzOpen2,\"s\":_unzOpenCurrentFile,\"l\":_unzReadCurrentFile};var asm=createWasm();var ___wasm_call_ctors=function(){return(___wasm_call_ctors=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _main=Module[\"_main\"]=function(){return(_main=Module[\"_main\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=function(){return(_duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=function(){return(_duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var _duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=function(){return(_duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var _duckdb_web_reset=Module[\"_duckdb_web_reset\"]=function(){return(_duckdb_web_reset=Module[\"_duckdb_web_reset\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var _duckdb_web_connect=Module[\"_duckdb_web_connect\"]=function(){return(_duckdb_web_connect=Module[\"_duckdb_web_connect\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=function(){return(_duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=function(){return(_duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};var _duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=function(){return(_duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=Module[\"asm\"][\"ab\"]).apply(null,arguments)};var _duckdb_web_open=Module[\"_duckdb_web_open\"]=function(){return(_duckdb_web_open=Module[\"_duckdb_web_open\"]=Module[\"asm\"][\"bb\"]).apply(null,arguments)};var _duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=function(){return(_duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=Module[\"asm\"][\"cb\"]).apply(null,arguments)};var _duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=function(){return(_duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=Module[\"asm\"][\"db\"]).apply(null,arguments)};var _duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=function(){return(_duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=Module[\"asm\"][\"eb\"]).apply(null,arguments)};var _duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=function(){return(_duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=Module[\"asm\"][\"fb\"]).apply(null,arguments)};var _duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=function(){return(_duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=Module[\"asm\"][\"gb\"]).apply(null,arguments)};var _duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=function(){return(_duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=Module[\"asm\"][\"hb\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=function(){return(_duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=Module[\"asm\"][\"ib\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=function(){return(_duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=Module[\"asm\"][\"jb\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=function(){return(_duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=Module[\"asm\"][\"kb\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=function(){return(_duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=Module[\"asm\"][\"lb\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=function(){return(_duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=Module[\"asm\"][\"mb\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=function(){return(_duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=Module[\"asm\"][\"nb\"]).apply(null,arguments)};var _duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=function(){return(_duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=Module[\"asm\"][\"ob\"]).apply(null,arguments)};var _duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=function(){return(_duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=Module[\"asm\"][\"pb\"]).apply(null,arguments)};var _duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=function(){return(_duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=Module[\"asm\"][\"qb\"]).apply(null,arguments)};var _duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=function(){return(_duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=Module[\"asm\"][\"rb\"]).apply(null,arguments)};var _duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=function(){return(_duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=Module[\"asm\"][\"sb\"]).apply(null,arguments)};var _duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=function(){return(_duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=Module[\"asm\"][\"tb\"]).apply(null,arguments)};var _duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=function(){return(_duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=Module[\"asm\"][\"ub\"]).apply(null,arguments)};var _duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=function(){return(_duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=Module[\"asm\"][\"vb\"]).apply(null,arguments)};var _duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=function(){return(_duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=Module[\"asm\"][\"wb\"]).apply(null,arguments)};var _duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=function(){return(_duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=Module[\"asm\"][\"xb\"]).apply(null,arguments)};var _duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=function(){return(_duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=Module[\"asm\"][\"yb\"]).apply(null,arguments)};var _duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=function(){return(_duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=Module[\"asm\"][\"zb\"]).apply(null,arguments)};var _duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=function(){return(_duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=Module[\"asm\"][\"Ab\"]).apply(null,arguments)};var _duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=function(){return(_duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=Module[\"asm\"][\"Bb\"]).apply(null,arguments)};var _duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=function(){return(_duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=Module[\"asm\"][\"Cb\"]).apply(null,arguments)};var _duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=function(){return(_duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=Module[\"asm\"][\"Db\"]).apply(null,arguments)};var _duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=function(){return(_duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=Module[\"asm\"][\"Eb\"]).apply(null,arguments)};var ___errno_location=function(){return(___errno_location=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _htonl=function(){return(_htonl=Module[\"asm\"][\"Fb\"]).apply(null,arguments)};var _htons=function(){return(_htons=Module[\"asm\"][\"Gb\"]).apply(null,arguments)};var _ntohs=function(){return(_ntohs=Module[\"asm\"][\"Hb\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Ib\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Jb\"]).apply(null,arguments)};var stackSave=function(){return(stackSave=Module[\"asm\"][\"Kb\"]).apply(null,arguments)};var stackRestore=function(){return(stackRestore=Module[\"asm\"][\"Lb\"]).apply(null,arguments)};var stackAlloc=function(){return(stackAlloc=Module[\"asm\"][\"Mb\"]).apply(null,arguments)};var ___cxa_is_pointer_type=function(){return(___cxa_is_pointer_type=Module[\"asm\"][\"Nb\"]).apply(null,arguments)};Module[\"stackAlloc\"]=stackAlloc;Module[\"stackSave\"]=stackSave;Module[\"stackRestore\"]=stackRestore;Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(){var entryFunction=_main;var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return DuckDB.ready\n}\n\n);\n})();\nexport default DuckDB;", "import { DuckDBModule } from './duckdb_module';\nimport { DuckDBBindingsBase } from './bindings_base';\nimport { DuckDBRuntime } from './runtime';\nimport { LogLevel, LogTopic, LogOrigin, LogEvent } from '../log';\nimport { Logger } from '../log';\nimport { InstantiationProgress } from '.';\n\n/** DuckDB bindings for the browser */\nexport abstract class DuckDBBrowserBindings extends DuckDBBindingsBase {\n    /** The path of the wasm module */\n    protected readonly mainModuleURL: string;\n    /** The path of the pthread worker script */\n    protected readonly pthreadWorkerURL: string | null;\n\n    /** Constructor */\n    public constructor(logger: Logger, runtime: DuckDBRuntime, mainModuleURL: string, pthreadWorkerURL: string | null) {\n        super(logger, runtime);\n        this.mainModuleURL = mainModuleURL;\n        this.pthreadWorkerURL = pthreadWorkerURL;\n    }\n\n    /** Locate a file */\n    protected locateFile(path: string, prefix: string): string {\n        if (path.endsWith('.wasm')) {\n            return this.mainModuleURL;\n        }\n        if (path.endsWith('.worker.js')) {\n            if (!this.pthreadWorkerURL) {\n                throw new Error('Missing DuckDB worker URL!');\n            }\n            return this.pthreadWorkerURL!;\n        }\n        throw new Error(`WASM instantiation requested unexpected file: prefix=${prefix} path=${path}`);\n    }\n\n    /** Instantiate the wasm module */\n    protected instantiateWasm(\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        imports: any,\n        success: (instance: WebAssembly.Instance, module: WebAssembly.Module) => void,\n    ): Emscripten.WebAssemblyExports {\n        // We rely on the following here:\n        //\n        // ...when a Request object is created using the Request.Request constructor,\n        // the value of the mode property for that Request is set to cors.\n        // [ref: MDN]\n        //\n        // Cloudflare throws when mode: 'cors' is set\n        //\n        globalThis.DUCKDB_RUNTIME = this._runtime;\n        const handlers = this.onInstantiationProgress;\n\n        // Does the browser support streaming instantiation?\n        if (WebAssembly.instantiateStreaming) {\n            // Does the browser support transform streams?\n            if (typeof TransformStream === 'function') {\n                const fetchWithProgress = async () => {\n                    // Try to determine file size\n                    const request = new Request(this.mainModuleURL);\n                    const response = await fetch(request);\n                    const contentLengthHdr = response.headers.get('content-length');\n                    const contentLength = contentLengthHdr ? parseInt(contentLengthHdr, 10) || 0 : 0;\n\n                    // Transform the stream\n                    const start = new Date();\n                    const progress: InstantiationProgress = {\n                        startedAt: start,\n                        updatedAt: start,\n                        bytesTotal: contentLength || 0,\n                        bytesLoaded: 0,\n                    };\n                    const tracker = {\n                        transform(chunk: any, ctrl: TransformStreamDefaultController) {\n                            progress.bytesLoaded += chunk.byteLength;\n                            const now = new Date();\n                            if (now.getTime() - progress.updatedAt.getTime() < 20) {\n                                progress.updatedAt = now;\n                                ctrl.enqueue(chunk);\n                                return;\n                            }\n                            for (const p of handlers) {\n                                p(progress);\n                            }\n                            ctrl.enqueue(chunk);\n                        },\n                    };\n                    const ts = new TransformStream(tracker);\n                    return new Response(response.body?.pipeThrough(ts), response);\n                };\n                // Instantiate streaming\n                const response = fetchWithProgress();\n                WebAssembly.instantiateStreaming(response, imports).then(output => {\n                    success(output.instance, output.module);\n                });\n            } else {\n                console.warn('instantiating without progress handler since transform streams are unavailable');\n                const request = new Request(this.mainModuleURL);\n                WebAssembly.instantiateStreaming(fetch(request), imports).then(output => {\n                    success(output.instance, output.module);\n                });\n            }\n        } else if (typeof XMLHttpRequest == 'function') {\n            // Otherwise we fall back to XHRs\n            const xhr = new XMLHttpRequest();\n            const url = this.mainModuleURL;\n            const start = new Date();\n            const progress: InstantiationProgress = {\n                startedAt: start,\n                updatedAt: start,\n                bytesTotal: 0,\n                bytesLoaded: 0,\n            };\n            xhr.open('GET', url);\n            xhr.responseType = 'arraybuffer';\n            xhr.onerror = error => {\n                this.logger.log({\n                    timestamp: new Date(),\n                    level: LogLevel.ERROR,\n                    origin: LogOrigin.BINDINGS,\n                    topic: LogTopic.INSTANTIATE,\n                    event: LogEvent.ERROR,\n                    value: 'Failed to load WASM: ' + error,\n                });\n                throw new Error(error.toString());\n            };\n            xhr.onprogress = e => {\n                progress.bytesTotal = e.total;\n                progress.bytesLoaded = e.loaded;\n                const now = new Date();\n                if (now.getTime() - progress.updatedAt.getTime() < 20) {\n                    progress.updatedAt = now;\n                    return;\n                }\n                for (const p of handlers) {\n                    p(progress);\n                }\n            };\n            xhr.onload = () => {\n                WebAssembly.instantiate(xhr.response, imports)\n                    .then(output => {\n                        success(output.instance, output.module);\n                    })\n                    .catch(error => {\n                        this.logger.log({\n                            timestamp: new Date(),\n                            level: LogLevel.ERROR,\n                            origin: LogOrigin.BINDINGS,\n                            topic: LogTopic.INSTANTIATE,\n                            event: LogEvent.ERROR,\n                            value: 'Failed to instantiate WASM: ' + error,\n                        });\n                        throw new Error(error);\n                    });\n            };\n            xhr.send();\n        } else {\n            console.warn('instantiating with manual fetch since streaming instantiation and xhrs are unavailable');\n            const run = async () => {\n                const request = new Request(this.mainModuleURL);\n                const response = await fetch(request);\n                const buffer = await response.arrayBuffer();\n                WebAssembly.instantiate(buffer, imports).then(output => {\n                    success(output.instance, output.module);\n                });\n            };\n            run();\n        }\n        return [];\n    }\n\n    /// Instantiation must be done by the browser variants\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\n}\n", "import DuckDBWasm from './duckdb-mvp.js';\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\nimport { DuckDBModule } from './duckdb_module';\nimport { DuckDBRuntime } from './runtime';\nimport { Logger } from '../log';\n\n/** DuckDB bindings for the browser */\nexport class DuckDB extends DuckDBBrowserBindings {\n    /** Constructor */\n    public constructor(\n        logger: Logger,\n        runtime: DuckDBRuntime,\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n    ) {\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\n    }\n\n    /** Instantiate the bindings */\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\n        return DuckDBWasm({\n            ...moduleOverrides,\n            instantiateWasm: this.instantiateWasm.bind(this),\n            locateFile: this.locateFile.bind(this),\n        });\n    }\n}\n", "\nvar DuckDB = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nasync function(DuckDB = {})  {\n\nvar Module=typeof DuckDB!=\"undefined\"?DuckDB:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import(\"module\");var require=createRequire(import.meta.url);var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=require(\"url\").fileURLToPath(new URL(\"./\",import.meta.url))}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module[\"inspect\"]=()=>\"[Emscripten Module object]\"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";if(runtimeInitialized){___trap()}var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"./duckdb-eh.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"./duckdb-eh.wasm\",import.meta.url).href}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinary(binaryFile))}}return Promise.resolve().then(()=>getBinary(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>{return WebAssembly.instantiate(binary,imports)}).then(instance=>{return instance}).then(receiver,reason=>{err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}else{return instantiateArrayBuffer(binaryFile,imports,callback)}}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"Qa\"];updateMemoryViews();wasmTable=Module[\"asm\"][\"Ta\"];addOnInit(Module[\"asm\"][\"Ra\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${status})`;this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function _XML_GetBuffer(){err(\"missing function: XML_GetBuffer\");abort(-1)}function _XML_GetErrorCode(){err(\"missing function: XML_GetErrorCode\");abort(-1)}function _XML_Parse(){err(\"missing function: XML_Parse\");abort(-1)}function _XML_ParseBuffer(){err(\"missing function: XML_ParseBuffer\");abort(-1)}function _XML_ParserCreate(){err(\"missing function: XML_ParserCreate\");abort(-1)}function _XML_ParserFree(){err(\"missing function: XML_ParserFree\");abort(-1)}function _XML_ResumeParser(){err(\"missing function: XML_ResumeParser\");abort(-1)}function _XML_SetCharacterDataHandler(){err(\"missing function: XML_SetCharacterDataHandler\");abort(-1)}function _XML_SetElementHandler(){err(\"missing function: XML_SetElementHandler\");abort(-1)}function _XML_SetUserData(){err(\"missing function: XML_SetUserData\");abort(-1)}function _XML_StopParser(){err(\"missing function: XML_StopParser\");abort(-1)}var dlopenMissingError=\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\";function ___dlsym(handle,symbol,ra){abort(dlopenMissingError)}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){var total=0;var srcReadLow=readfds?HEAP32[readfds>>>2]:0,srcReadHigh=readfds?HEAP32[readfds+4>>>2]:0;var srcWriteLow=writefds?HEAP32[writefds>>>2]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>>2]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>>2]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>>2]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>>2]:0)|(writefds?HEAP32[writefds>>>2]:0)|(exceptfds?HEAP32[exceptfds>>>2]:0);var allHigh=(readfds?HEAP32[readfds+4>>>2]:0)|(writefds?HEAP32[writefds+4>>>2]:0)|(exceptfds?HEAP32[exceptfds+4>>>2]:0);var check=function(fd,low,high,val){return fd<32?low&val:high&val};for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=SYSCALLS.getStreamFromFD(fd);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){flags=stream.stream_ops.poll(stream)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>>2]=dstReadLow;HEAP32[readfds+4>>>2]=dstReadHigh}if(writefds){HEAP32[writefds>>>2]=dstWriteLow;HEAP32[writefds+4>>>2]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>>2]=dstExceptLow;HEAP32[exceptfds+4>>>2]=dstExceptHigh}return total}function SOCKFS(){err(\"missing function: $SOCKFS\");abort(-1)}function FS(){err(\"missing function: $FS\");abort(-1)}function getSocketFromFD(fd){var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket}function inetNtop4(addr){return(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255)}function inetNtop6(ints){var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str}function readSockaddr(sa,salen){var family=HEAP16[sa>>>1];var port=_ntohs(HEAPU16[sa+2>>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>>2];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>>2],HEAP32[sa+12>>>2],HEAP32[sa+16>>>2],HEAP32[sa+20>>>2]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}}function inetPton4(str){var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}function jstoi_q(str){return parseInt(str)}function inetPton6(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]==\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr:function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};function getSocketAddress(addrp,addrlen,allowNull){if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}function ___syscall_bind(fd,addr,addrlen,d1,d2,d3){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.bind(sock,info.addr,info.port);return 0}function ___syscall_connect(fd,addr,addrlen,d1,d2,d3){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}function ___syscall_faccessat(dirfd,path,amode,flags){}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_fstat64(fd,buf){}function ___syscall_ftruncate64(fd,length_low,length_high){}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function ___syscall_getdents64(fd,dirp,count){}function zeroMemory(address,size){HEAPU8.fill(0,address,address+size);return address}function writeSockaddr(sa,family,addr,port,addrlen){switch(family){case 2:addr=inetPton4(addr);zeroMemory(sa,16);if(addrlen){HEAP32[addrlen>>>2]=16}HEAP16[sa>>>1]=family;HEAP32[sa+4>>>2]=addr;HEAP16[sa+2>>>1]=_htons(port);break;case 10:addr=inetPton6(addr);zeroMemory(sa,28);if(addrlen){HEAP32[addrlen>>>2]=28}HEAP32[sa>>>2]=family;HEAP32[sa+8>>>2]=addr[0];HEAP32[sa+12>>>2]=addr[1];HEAP32[sa+16>>>2]=addr[2];HEAP32[sa+20>>>2]=addr[3];HEAP16[sa+2>>>1]=_htons(port);break;default:return 5}return 0}function ___syscall_getpeername(fd,addr,addrlen,d1,d2,d3){var sock=getSocketFromFD(fd);if(!sock.daddr){return-53}var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport,addrlen);return 0}function ___syscall_getsockopt(fd,level,optname,optval,optlen,d1){var sock=getSocketFromFD(fd);if(level===1){if(optname===4){HEAP32[optval>>>2]=sock.error;HEAP32[optlen>>>2]=4;sock.error=null;return 0}}return-50}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_lstat64(path,buf){}function ___syscall_mkdirat(dirfd,path,mode){}function ___syscall_newfstatat(dirfd,path,buf,flags){}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_recvfrom(fd,buf,len,flags,addr,addrlen){var sock=getSocketFromFD(fd);var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port,addrlen)}HEAPU8.set(msg.buffer,buf>>>0);return msg.buffer.byteLength}function ___syscall_renameat(olddirfd,oldpath,newdirfd,newpath){}function ___syscall_rmdir(path){}function ___syscall_sendto(fd,message,length,flags,addr,addr_len){}function ___syscall_socket(domain,type,protocol){}function ___syscall_stat64(path,buf){}function ___syscall_unlinkat(dirfd,path,flags){}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function readI53FromI64(ptr){return HEAPU32[ptr>>>2]+HEAP32[ptr+4>>>2]*4294967296}function isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}var MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335];var MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334];function ydayFromDate(date){var leap=isLeapYear(date.getFullYear());var monthDaysCumulative=leap?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE;var yday=monthDaysCumulative[date.getMonth()]+date.getDate()-1;return yday}function __localtime_js(time,tmPtr){var date=new Date(readI53FromI64(time)*1e3);HEAP32[tmPtr>>>2]=date.getSeconds();HEAP32[tmPtr+4>>>2]=date.getMinutes();HEAP32[tmPtr+8>>>2]=date.getHours();HEAP32[tmPtr+12>>>2]=date.getDate();HEAP32[tmPtr+16>>>2]=date.getMonth();HEAP32[tmPtr+20>>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>>2]=date.getDay();var yday=ydayFromDate(date)|0;HEAP32[tmPtr+28>>>2]=yday;HEAP32[tmPtr+36>>>2]=-(date.getTimezoneOffset()*60);var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>>2]=dst}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}function stringToNewUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8(str,ret,size);return ret}function __tzset_js(timezone,daylight,tzname){var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAPU32[timezone>>>2]=stdTimezoneOffset*60;HEAP32[daylight>>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return match?match[1]:\"GMT\"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=stringToNewUTF8(winterName);var summerNamePtr=stringToNewUTF8(summerName);if(summerOffset<winterOffset){HEAPU32[tzname>>>2]=winterNamePtr;HEAPU32[tzname+4>>>2]=summerNamePtr}else{HEAPU32[tzname>>>2]=summerNamePtr;HEAPU32[tzname+4>>>2]=winterNamePtr}}function _abort(){abort(\"\")}function _dlopen(filename,flags){abort(dlopenMissingError)}function _duckdb_web_fs_directory_create(path,pathLen){return globalThis.DUCKDB_RUNTIME.createDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_list_files(path,pathLen){return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module,path,pathLen)}function _duckdb_web_fs_directory_remove(path,pathLen){return globalThis.DUCKDB_RUNTIME.removeDirectory(Module,path,pathLen)}function _duckdb_web_fs_file_close(fileId){return globalThis.DUCKDB_RUNTIME.closeFile(Module,fileId)}function _duckdb_web_fs_file_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkFile(Module,path,pathLen)}function _duckdb_web_fs_file_get_last_modified_time(fileId){return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module,fileId)}function _duckdb_web_fs_file_move(from,fromLen,to,toLen){return globalThis.DUCKDB_RUNTIME.moveFile(Module,from,fromLen,to,toLen)}function _duckdb_web_fs_file_open(fileId,flags){return globalThis.DUCKDB_RUNTIME.openFile(Module,fileId,flags)}function _duckdb_web_fs_file_read(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.readFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_file_truncate(fileId,newSize){return globalThis.DUCKDB_RUNTIME.truncateFile(Module,fileId,newSize)}function _duckdb_web_fs_file_write(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.writeFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_get_default_data_protocol(Module){return globalThis.DUCKDB_RUNTIME.getDefaultDataProtocol(Module)}function _duckdb_web_fs_glob(path,pathLen){return globalThis.DUCKDB_RUNTIME.glob(Module,path,pathLen)}function _duckdb_web_test_platform_feature(feature){return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module,feature)}function _duckdb_web_udf_scalar_call(funcId,descPtr,descSize,ptrsPtr,ptrsSize,response){return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module,funcId,descPtr,descSize,ptrsPtr,ptrsSize,response)}function _emscripten_date_now(){return Date.now()}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){global.performance=require(\"perf_hooks\").performance}_emscripten_get_now=()=>performance.now();function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}function emscripten_realloc_buffer(size){var b=wasmMemory.buffer;var pages=size-b.byteLength+65535>>>16;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings}function stringToAscii(str,buffer){for(var i=0;i<str.length;++i){HEAP8[buffer++>>>0]=str.charCodeAt(i)}HEAP8[buffer>>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>>2]=bufSize;return 0}function _fd_close(fd){return 52}function _fd_fdstat_get(fd,pbuf){var rightsBase=0;var rightsInheriting=0;var flags=0;{var type=2;if(fd==0){rightsBase=2}else if(fd==1||fd==2){rightsBase=64}flags=1}HEAP8[pbuf>>>0]=type;HEAP16[pbuf+2>>>1]=flags;tempI64=[rightsBase>>>0,(tempDouble=rightsBase,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+8>>>2]=tempI64[0],HEAP32[pbuf+12>>>2]=tempI64[1];tempI64=[rightsInheriting>>>0,(tempDouble=rightsInheriting,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+16>>>2]=tempI64[0],HEAP32[pbuf+20>>>2]=tempI64[1];return 0}function _fd_pread(fd,iov,iovcnt,offset_low,offset_high,pnum){return 52}function _fd_pwrite(fd,iov,iovcnt,offset_low,offset_high,pnum){return 52}function _fd_read(fd,iov,iovcnt,pnum){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}function _fd_sync(fd){return 52}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2];var len=HEAPU32[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j>>>0])}num+=len}HEAPU32[pnum>>>2]=num;return 0}function _getaddrinfo(node,service,hint,out){var addr=0;var port=0;var flags=0;var family=0;var type=0;var proto=0;var ai;function allocaddrinfo(family,type,proto,canon,addr,port){var sa,salen,ai;var errno;salen=family===10?28:16;addr=family===10?inetNtop6(addr):inetNtop4(addr);sa=_malloc(salen);errno=writeSockaddr(sa,family,addr,port);assert(!errno);ai=_malloc(32);HEAP32[ai+4>>>2]=family;HEAP32[ai+8>>>2]=type;HEAP32[ai+12>>>2]=proto;HEAPU32[ai+24>>>2]=canon;HEAPU32[ai+20>>>2]=sa;if(family===10){HEAP32[ai+16>>>2]=28}else{HEAP32[ai+16>>>2]=16}HEAP32[ai+28>>>2]=0;return ai}if(hint){flags=HEAP32[hint>>>2];family=HEAP32[hint+4>>>2];type=HEAP32[hint+8>>>2];proto=HEAP32[hint+12>>>2]}if(type&&!proto){proto=type===2?17:6}if(!type&&proto){type=proto===17?2:1}if(proto===0){proto=6}if(type===0){type=1}if(!node&&!service){return-2}if(flags&~(1|2|4|1024|8|16|32)){return-1}if(hint!==0&&HEAP32[hint>>>2]&2&&!node){return-1}if(flags&32){return-2}if(type!==0&&type!==1&&type!==2){return-7}if(family!==0&&family!==2&&family!==10){return-6}if(service){service=UTF8ToString(service);port=parseInt(service,10);if(isNaN(port)){if(flags&1024){return-2}return-8}}if(!node){if(family===0){family=2}if((flags&1)===0){if(family===2){addr=_htonl(2130706433)}else{addr=[0,0,0,1]}}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2]=ai;return 0}node=UTF8ToString(node);addr=inetPton4(node);if(addr!==null){if(family===0||family===2){family=2}else if(family===10&&flags&8){addr=[0,0,_htonl(65535),addr];family=10}else{return-2}}else{addr=inetPton6(node);if(addr!==null){if(family===0||family===10){family=10}else{return-2}}}if(addr!=null){ai=allocaddrinfo(family,type,proto,node,addr,port);HEAPU32[out>>>2]=ai;return 0}if(flags&4){return-2}node=DNS.lookup_name(node);addr=inetPton4(node);if(family===0){family=2}else if(family===10){addr=[0,0,_htonl(65535),addr]}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2]=ai;return 0}function initRandomFill(){if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){return view=>crypto.getRandomValues(view)}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");var randomFillSync=crypto_module[\"randomFillSync\"];if(randomFillSync){return view=>crypto_module[\"randomFillSync\"](view)}var randomBytes=crypto_module[\"randomBytes\"];return view=>(view.set(randomBytes(view.byteLength)),view)}catch(e){}}abort(\"initRandomDevice\")}function randomFill(view){return(randomFill=initRandomFill())(view)}function _getentropy(buffer,size){randomFill(HEAPU8.subarray(buffer>>>0,buffer+size>>>0));return 0}function _getnameinfo(sa,salen,node,nodelen,serv,servlen,flags){var info=readSockaddr(sa,salen);if(info.errno){return-6}var port=info.port;var addr=info.addr;var overflowed=false;if(node&&nodelen){var lookup;if(flags&1||!(lookup=DNS.lookup_addr(addr))){if(flags&8){return-2}}else{addr=lookup}var numBytesWrittenExclNull=stringToUTF8(addr,node,nodelen);if(numBytesWrittenExclNull+1>=nodelen){overflowed=true}}if(serv&&servlen){port=\"\"+port;var numBytesWrittenExclNull=stringToUTF8(port,serv,servlen);if(numBytesWrittenExclNull+1>=servlen){overflowed=true}}if(overflowed){return-12}return 0}function arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer>>>0)}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>>2];var date={tm_sec:HEAP32[tm>>>2],tm_min:HEAP32[tm+4>>>2],tm_hour:HEAP32[tm+8>>>2],tm_mday:HEAP32[tm+12>>>2],tm_mon:HEAP32[tm+16>>>2],tm_year:HEAP32[tm+20>>>2],tm_wday:HEAP32[tm+24>>>2],tm_yday:HEAP32[tm+28>>>2],tm_isdst:HEAP32[tm+32>>>2],tm_gmtoff:HEAP32[tm+36>>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm)}function _ucnv_close_64(){err(\"missing function: ucnv_close_64\");abort(-1)}function _ucnv_convertEx_64(){err(\"missing function: ucnv_convertEx_64\");abort(-1)}function _ucnv_open_64(){err(\"missing function: ucnv_open_64\");abort(-1)}function _ucnv_toAlgorithmic_64(){err(\"missing function: ucnv_toAlgorithmic_64\");abort(-1)}function _ucsdet_close_64(){err(\"missing function: ucsdet_close_64\");abort(-1)}function _ucsdet_detect_64(){err(\"missing function: ucsdet_detect_64\");abort(-1)}function _ucsdet_getConfidence_64(){err(\"missing function: ucsdet_getConfidence_64\");abort(-1)}function _ucsdet_getName_64(){err(\"missing function: ucsdet_getName_64\");abort(-1)}function _ucsdet_open_64(){err(\"missing function: ucsdet_open_64\");abort(-1)}function _ucsdet_setText_64(){err(\"missing function: ucsdet_setText_64\");abort(-1)}function _unzClose(){err(\"missing function: unzClose\");abort(-1)}function _unzCloseCurrentFile(){err(\"missing function: unzCloseCurrentFile\");abort(-1)}function _unzGetCurrentFileInfo(){err(\"missing function: unzGetCurrentFileInfo\");abort(-1)}function _unzGetCurrentFileInfo64(){err(\"missing function: unzGetCurrentFileInfo64\");abort(-1)}function _unzGetGlobalInfo(){err(\"missing function: unzGetGlobalInfo\");abort(-1)}function _unzGoToFirstFile(){err(\"missing function: unzGoToFirstFile\");abort(-1)}function _unzGoToNextFile(){err(\"missing function: unzGoToNextFile\");abort(-1)}function _unzLocateFile(){err(\"missing function: unzLocateFile\");abort(-1)}function _unzOpen(){err(\"missing function: unzOpen\");abort(-1)}function _unzOpen2(){err(\"missing function: unzOpen2\");abort(-1)}function _unzOpenCurrentFile(){err(\"missing function: unzOpenCurrentFile\");abort(-1)}function _unzReadCurrentFile(){err(\"missing function: unzReadCurrentFile\");abort(-1)}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function stringToUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var wasmImports={\"f\":_XML_GetBuffer,\"V\":_XML_GetErrorCode,\"W\":_XML_Parse,\"l\":_XML_ParseBuffer,\"n\":_XML_ParserCreate,\"b\":_XML_ParserFree,\"B\":_XML_ResumeParser,\"d\":_XML_SetCharacterDataHandler,\"a\":_XML_SetElementHandler,\"m\":_XML_SetUserData,\"h\":_XML_StopParser,\"La\":___dlsym,\"Ga\":___syscall__newselect,\"Ka\":___syscall_bind,\"Ja\":___syscall_connect,\"Ca\":___syscall_faccessat,\"c\":___syscall_fcntl64,\"Ba\":___syscall_fstat64,\"O\":___syscall_ftruncate64,\"wa\":___syscall_getdents64,\"Ea\":___syscall_getpeername,\"Fa\":___syscall_getsockopt,\"L\":___syscall_ioctl,\"ya\":___syscall_lstat64,\"xa\":___syscall_mkdirat,\"za\":___syscall_newfstatat,\"M\":___syscall_openat,\"Ha\":___syscall_recvfrom,\"ua\":___syscall_renameat,\"G\":___syscall_rmdir,\"Ia\":___syscall_sendto,\"I\":___syscall_socket,\"Aa\":___syscall_stat64,\"H\":___syscall_unlinkat,\"S\":__emscripten_get_now_is_monotonic,\"ea\":__localtime_js,\"fa\":__tzset_js,\"i\":_abort,\"Ma\":_dlopen,\"ma\":_duckdb_web_fs_directory_create,\"na\":_duckdb_web_fs_directory_exists,\"ja\":_duckdb_web_fs_directory_list_files,\"ka\":_duckdb_web_fs_directory_remove,\"E\":_duckdb_web_fs_file_close,\"ha\":_duckdb_web_fs_file_exists,\"N\":_duckdb_web_fs_file_get_last_modified_time,\"ia\":_duckdb_web_fs_file_move,\"pa\":_duckdb_web_fs_file_open,\"o\":_duckdb_web_fs_file_read,\"oa\":_duckdb_web_fs_file_truncate,\"F\":_duckdb_web_fs_file_write,\"qa\":_duckdb_web_fs_get_default_data_protocol,\"ga\":_duckdb_web_fs_glob,\"D\":_duckdb_web_test_platform_feature,\"ra\":_duckdb_web_udf_scalar_call,\"A\":_emscripten_date_now,\"X\":_emscripten_get_heap_max,\"p\":_emscripten_get_now,\"Oa\":_emscripten_memcpy_big,\"Pa\":_emscripten_resize_heap,\"la\":_environ_get,\"ta\":_environ_sizes_get,\"j\":_fd_close,\"Na\":_fd_fdstat_get,\"Q\":_fd_pread,\"P\":_fd_pwrite,\"K\":_fd_read,\"R\":_fd_seek,\"va\":_fd_sync,\"v\":_fd_write,\"J\":_getaddrinfo,\"sa\":_getentropy,\"Da\":_getnameinfo,\"ba\":_strftime_l,\"e\":_ucnv_close_64,\"Y\":_ucnv_convertEx_64,\"u\":_ucnv_open_64,\"Z\":_ucnv_toAlgorithmic_64,\"C\":_ucsdet_close_64,\"aa\":_ucsdet_detect_64,\"$\":_ucsdet_getConfidence_64,\"_\":_ucsdet_getName_64,\"da\":_ucsdet_open_64,\"ca\":_ucsdet_setText_64,\"g\":_unzClose,\"t\":_unzCloseCurrentFile,\"y\":_unzGetCurrentFileInfo,\"q\":_unzGetCurrentFileInfo64,\"U\":_unzGetGlobalInfo,\"z\":_unzGoToFirstFile,\"x\":_unzGoToNextFile,\"s\":_unzLocateFile,\"w\":_unzOpen,\"T\":_unzOpen2,\"r\":_unzOpenCurrentFile,\"k\":_unzReadCurrentFile};var asm=createWasm();var ___wasm_call_ctors=function(){return(___wasm_call_ctors=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var _main=Module[\"_main\"]=function(){return(_main=Module[\"_main\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=function(){return(_duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var _duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=function(){return(_duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=function(){return(_duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var _duckdb_web_reset=Module[\"_duckdb_web_reset\"]=function(){return(_duckdb_web_reset=Module[\"_duckdb_web_reset\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var _duckdb_web_connect=Module[\"_duckdb_web_connect\"]=function(){return(_duckdb_web_connect=Module[\"_duckdb_web_connect\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var _duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=function(){return(_duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=function(){return(_duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=function(){return(_duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};var _duckdb_web_open=Module[\"_duckdb_web_open\"]=function(){return(_duckdb_web_open=Module[\"_duckdb_web_open\"]=Module[\"asm\"][\"ab\"]).apply(null,arguments)};var _duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=function(){return(_duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=Module[\"asm\"][\"bb\"]).apply(null,arguments)};var _duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=function(){return(_duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=Module[\"asm\"][\"cb\"]).apply(null,arguments)};var _duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=function(){return(_duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=Module[\"asm\"][\"db\"]).apply(null,arguments)};var _duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=function(){return(_duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=Module[\"asm\"][\"eb\"]).apply(null,arguments)};var _duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=function(){return(_duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=Module[\"asm\"][\"fb\"]).apply(null,arguments)};var _duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=function(){return(_duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=Module[\"asm\"][\"gb\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=function(){return(_duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=Module[\"asm\"][\"hb\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=function(){return(_duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=Module[\"asm\"][\"ib\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=function(){return(_duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=Module[\"asm\"][\"jb\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=function(){return(_duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=Module[\"asm\"][\"kb\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=function(){return(_duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=Module[\"asm\"][\"lb\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=function(){return(_duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=Module[\"asm\"][\"mb\"]).apply(null,arguments)};var _duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=function(){return(_duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=Module[\"asm\"][\"nb\"]).apply(null,arguments)};var _duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=function(){return(_duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=Module[\"asm\"][\"ob\"]).apply(null,arguments)};var _duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=function(){return(_duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=Module[\"asm\"][\"pb\"]).apply(null,arguments)};var _duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=function(){return(_duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=Module[\"asm\"][\"qb\"]).apply(null,arguments)};var _duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=function(){return(_duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=Module[\"asm\"][\"rb\"]).apply(null,arguments)};var _duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=function(){return(_duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=Module[\"asm\"][\"sb\"]).apply(null,arguments)};var _duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=function(){return(_duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=Module[\"asm\"][\"tb\"]).apply(null,arguments)};var _duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=function(){return(_duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=Module[\"asm\"][\"ub\"]).apply(null,arguments)};var _duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=function(){return(_duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=Module[\"asm\"][\"vb\"]).apply(null,arguments)};var _duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=function(){return(_duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=Module[\"asm\"][\"wb\"]).apply(null,arguments)};var _duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=function(){return(_duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=Module[\"asm\"][\"xb\"]).apply(null,arguments)};var _duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=function(){return(_duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=Module[\"asm\"][\"yb\"]).apply(null,arguments)};var _duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=function(){return(_duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=Module[\"asm\"][\"zb\"]).apply(null,arguments)};var _duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=function(){return(_duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=Module[\"asm\"][\"Ab\"]).apply(null,arguments)};var _duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=function(){return(_duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=Module[\"asm\"][\"Bb\"]).apply(null,arguments)};var _duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=function(){return(_duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=Module[\"asm\"][\"Cb\"]).apply(null,arguments)};var _duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=function(){return(_duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=Module[\"asm\"][\"Db\"]).apply(null,arguments)};var ___errno_location=function(){return(___errno_location=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _htonl=function(){return(_htonl=Module[\"asm\"][\"Eb\"]).apply(null,arguments)};var _htons=function(){return(_htons=Module[\"asm\"][\"Fb\"]).apply(null,arguments)};var _ntohs=function(){return(_ntohs=Module[\"asm\"][\"Gb\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Hb\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Ib\"]).apply(null,arguments)};var ___trap=function(){return(___trap=Module[\"asm\"][\"Jb\"]).apply(null,arguments)};var stackSave=function(){return(stackSave=Module[\"asm\"][\"Kb\"]).apply(null,arguments)};var stackRestore=function(){return(stackRestore=Module[\"asm\"][\"Lb\"]).apply(null,arguments)};var stackAlloc=function(){return(stackAlloc=Module[\"asm\"][\"Mb\"]).apply(null,arguments)};Module[\"stackAlloc\"]=stackAlloc;Module[\"stackSave\"]=stackSave;Module[\"stackRestore\"]=stackRestore;Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(){var entryFunction=_main;var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return DuckDB.ready\n}\n\n);\n})();\nexport default DuckDB;", "import DuckDBWasm from './duckdb-eh.js';\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\nimport { DuckDBModule } from './duckdb_module';\nimport { DuckDBRuntime } from './runtime';\nimport { Logger } from '../log';\n\n/** DuckDB bindings for the browser */\nexport class DuckDB extends DuckDBBrowserBindings {\n    /** Constructor */\n    public constructor(\n        logger: Logger,\n        runtime: DuckDBRuntime,\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n    ) {\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\n    }\n\n    /** Instantiate the bindings */\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\n        return DuckDBWasm({\n            ...moduleOverrides,\n            instantiateWasm: this.instantiateWasm.bind(this),\n            locateFile: this.locateFile.bind(this),\n        });\n    }\n}\n\nexport default DuckDB;\n", "export * from '../bindings';\nexport * from '../log';\nexport * from '../platform';\nexport * from '../status';\nexport * from '../version';\nexport { DuckDBDataProtocol } from '../bindings/runtime';\nexport { DEFAULT_RUNTIME } from '../bindings/runtime';\nexport { BROWSER_RUNTIME } from '../bindings/runtime_browser';\n\nimport { Logger } from '../log';\nimport { DuckDBRuntime, DuckDBBindings } from '../bindings';\nimport { DuckDBBundles, getPlatformFeatures } from '../platform';\nimport { DuckDB as DuckDBMVP } from '../bindings/bindings_browser_mvp';\nimport { DuckDB as DuckDBNext } from '../bindings/bindings_browser_eh';\n\nexport async function createDuckDB(\n    bundles: DuckDBBundles,\n    logger: Logger,\n    runtime: DuckDBRuntime,\n): Promise<DuckDBBindings> {\n    const platform = await getPlatformFeatures();\n    if (platform.wasmExceptions) {\n        if (bundles.eh) {\n            return new DuckDBNext(logger, runtime, bundles.eh!.mainModule);\n        }\n    }\n    return new DuckDBMVP(logger, runtime, bundles.mvp.mainModule);\n}\n"],
  "mappings": "wxBAAA,IAAAA,GAAAC,GAAA,oBASC,UAAY,CACX,aAEA,IAAI,MAAQ,wBACR,OAAS,OAAO,QAAW,SAC3B,KAAO,OAAS,OAAS,CAAC,EAC1B,KAAK,sBACP,OAAS,IAEX,IAAI,WAAa,CAAC,QAAU,OAAO,MAAS,SACxC,QAAU,CAAC,KAAK,sBAAwB,OAAO,SAAY,UAAY,QAAQ,UAAY,QAAQ,SAAS,KAC5G,QACF,KAAO,OACE,aACT,KAAO,MAET,IAAI,UAAY,CAAC,KAAK,wBAA0B,OAAO,QAAW,UAAY,OAAO,QACjF,IAAM,OAAO,QAAW,YAAc,OAAO,IAC7C,aAAe,CAAC,KAAK,2BAA6B,OAAO,YAAgB,IACzE,UAAY,mBAAmB,MAAM,EAAE,EACvC,MAAQ,CAAC,YAAa,QAAS,MAAO,GAAG,EACzC,MAAQ,CAAC,GAAI,GAAI,EAAG,CAAC,EACrB,EAAI,CACN,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACtF,EACI,aAAe,CAAC,MAAO,QAAS,SAAU,aAAa,EAEvD,OAAS,CAAC,GAEV,KAAK,sBAAwB,CAAC,MAAM,WACtC,MAAM,QAAU,SAAUC,EAAK,CAC7B,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,IAAM,gBACjD,GAGE,eAAiB,KAAK,mCAAqC,CAAC,YAAY,UAC1E,YAAY,OAAS,SAAUA,EAAK,CAClC,OAAO,OAAOA,GAAQ,UAAYA,EAAI,QAAUA,EAAI,OAAO,cAAgB,WAC7E,GAGF,IAAI,mBAAqB,SAAUC,EAAYC,EAAO,CACpD,OAAO,SAAUC,EAAS,CACxB,OAAO,IAAI,OAAOD,EAAO,EAAI,EAAE,OAAOC,CAAO,EAAEF,GAAY,CAC7D,CACF,EAEI,aAAe,SAAUC,EAAO,CAClC,IAAIE,EAAS,mBAAmB,MAAOF,CAAK,EACxC,UACFE,EAAS,SAASA,EAAQF,CAAK,GAEjCE,EAAO,OAAS,UAAY,CAC1B,OAAO,IAAI,OAAOF,CAAK,CACzB,EACAE,EAAO,OAAS,SAAUD,EAAS,CACjC,OAAOC,EAAO,OAAO,EAAE,OAAOD,CAAO,CACvC,EACA,QAASE,EAAI,EAAGA,EAAI,aAAa,OAAQ,EAAEA,EAAG,CAC5C,IAAIC,EAAO,aAAaD,GACxBD,EAAOE,GAAQ,mBAAmBA,EAAMJ,CAAK,CAC/C,CACA,OAAOE,CACT,EAEI,SAAW,SAAU,OAAQ,MAAO,CACtC,IAAI,OAAS,KAAK,mBAAmB,EACjC,OAAS,KAAK,0BAA0B,EACxC,UAAY,MAAQ,SAAW,SAC/B,WAAa,SAAUD,EAAS,CAClC,GAAI,OAAOA,GAAY,SACrB,OAAO,OAAO,WAAW,SAAS,EAAE,OAAOA,EAAS,MAAM,EAAE,OAAO,KAAK,EAExE,GAAIA,GAAY,KACd,MAAM,IAAI,MAAM,KAAK,EAKzB,OAJaA,EAAQ,cAAgB,cACjCA,EAAU,IAAI,WAAWA,CAAO,GAGhC,MAAM,QAAQA,CAAO,GAAK,YAAY,OAAOA,CAAO,GACtDA,EAAQ,cAAgB,OACjB,OAAO,WAAW,SAAS,EAAE,OAAO,IAAI,OAAOA,CAAO,CAAC,EAAE,OAAO,KAAK,EAErE,OAAOA,CAAO,CAEzB,EACA,OAAO,UACT,EAEI,uBAAyB,SAAUF,EAAYC,EAAO,CACxD,OAAO,SAAUK,EAAKJ,EAAS,CAC7B,OAAO,IAAI,WAAWI,EAAKL,EAAO,EAAI,EAAE,OAAOC,CAAO,EAAEF,GAAY,CACtE,CACF,EAEI,iBAAmB,SAAUC,EAAO,CACtC,IAAIE,EAAS,uBAAuB,MAAOF,CAAK,EAChDE,EAAO,OAAS,SAAUG,EAAK,CAC7B,OAAO,IAAI,WAAWA,EAAKL,CAAK,CAClC,EACAE,EAAO,OAAS,SAAUG,EAAKJ,EAAS,CACtC,OAAOC,EAAO,OAAOG,CAAG,EAAE,OAAOJ,CAAO,CAC1C,EACA,QAASE,EAAI,EAAGA,EAAI,aAAa,OAAQ,EAAEA,EAAG,CAC5C,IAAIC,EAAO,aAAaD,GACxBD,EAAOE,GAAQ,uBAAuBA,EAAMJ,CAAK,CACnD,CACA,OAAOE,CACT,EAEA,SAAS,OAAOF,EAAOM,EAAc,CAC/BA,GACF,OAAO,GAAK,OAAO,IAAM,OAAO,GAAK,OAAO,GAAK,OAAO,GACtD,OAAO,GAAK,OAAO,GAAK,OAAO,GAAK,OAAO,GAC3C,OAAO,GAAK,OAAO,GAAK,OAAO,IAAM,OAAO,IAC5C,OAAO,IAAM,OAAO,IAAM,OAAO,IAAM,OAAO,IAAM,EACtD,KAAK,OAAS,QAEd,KAAK,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAG9DN,GACF,KAAK,GAAK,WACV,KAAK,GAAK,UACV,KAAK,GAAK,UACV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,aAEV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,WACV,KAAK,GAAK,UACV,KAAK,GAAK,YAGZ,KAAK,MAAQ,KAAK,MAAQ,KAAK,MAAQ,KAAK,OAAS,EACrD,KAAK,UAAY,KAAK,OAAS,GAC/B,KAAK,MAAQ,GACb,KAAK,MAAQA,CACf,CAEA,OAAO,UAAU,OAAS,SAAUC,EAAS,CAC3C,GAAI,MAAK,UAGT,KAAIM,EAAWH,EAAO,OAAOH,EAC7B,GAAIG,IAAS,SAAU,CACrB,GAAIA,IAAS,SAAU,CACrB,GAAIH,IAAY,KACd,MAAM,IAAI,MAAM,KAAK,EAChB,GAAI,cAAgBA,EAAQ,cAAgB,YACjDA,EAAU,IAAI,WAAWA,CAAO,UACvB,CAAC,MAAM,QAAQA,CAAO,IAC3B,CAAC,cAAgB,CAAC,YAAY,OAAOA,CAAO,GAC9C,MAAM,IAAI,MAAM,KAAK,CAG3B,KACE,OAAM,IAAI,MAAM,KAAK,EAEvBM,EAAY,EACd,CAGA,QAFIC,EAAMC,EAAQ,EAAGN,EAAGO,EAAST,EAAQ,OAAQU,EAAS,KAAK,OAExDF,EAAQC,GAAQ,CAUrB,GATI,KAAK,SACP,KAAK,OAAS,GACdC,EAAO,GAAK,KAAK,MACjBA,EAAO,IAAMA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC1CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC3CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAAMA,EAAO,IAC5CA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAM,GAGpDJ,EACF,IAAKJ,EAAI,KAAK,MAAOM,EAAQC,GAAUP,EAAI,GAAI,EAAEM,EAC/CE,EAAOR,GAAK,IAAMF,EAAQQ,IAAU,MAAMN,IAAM,OAGlD,KAAKA,EAAI,KAAK,MAAOM,EAAQC,GAAUP,EAAI,GAAI,EAAEM,EAC/CD,EAAOP,EAAQ,WAAWQ,CAAK,EAC3BD,EAAO,IACTG,EAAOR,GAAK,IAAMK,GAAQ,MAAML,IAAM,GAC7BK,EAAO,MAChBG,EAAOR,GAAK,KAAO,IAAQK,GAAQ,IAAO,MAAML,IAAM,GACtDQ,EAAOR,GAAK,KAAO,IAAQK,EAAO,KAAU,MAAML,IAAM,IAC/CK,EAAO,OAAUA,GAAQ,OAClCG,EAAOR,GAAK,KAAO,IAAQK,GAAQ,KAAQ,MAAML,IAAM,GACvDQ,EAAOR,GAAK,KAAO,IAASK,GAAQ,EAAK,KAAU,MAAML,IAAM,GAC/DQ,EAAOR,GAAK,KAAO,IAAQK,EAAO,KAAU,MAAML,IAAM,KAExDK,EAAO,QAAaA,EAAO,OAAU,GAAOP,EAAQ,WAAW,EAAEQ,CAAK,EAAI,MAC1EE,EAAOR,GAAK,KAAO,IAAQK,GAAQ,KAAQ,MAAML,IAAM,GACvDQ,EAAOR,GAAK,KAAO,IAASK,GAAQ,GAAM,KAAU,MAAML,IAAM,GAChEQ,EAAOR,GAAK,KAAO,IAASK,GAAQ,EAAK,KAAU,MAAML,IAAM,GAC/DQ,EAAOR,GAAK,KAAO,IAAQK,EAAO,KAAU,MAAML,IAAM,IAK9D,KAAK,cAAgBA,EACrB,KAAK,OAASA,EAAI,KAAK,MACnBA,GAAK,IACP,KAAK,MAAQQ,EAAO,IACpB,KAAK,MAAQR,EAAI,GACjB,KAAK,KAAK,EACV,KAAK,OAAS,IAEd,KAAK,MAAQA,CAEjB,CACA,OAAI,KAAK,MAAQ,aACf,KAAK,QAAU,KAAK,MAAQ,YAAc,EAC1C,KAAK,MAAQ,KAAK,MAAQ,YAErB,KACT,EAEA,OAAO,UAAU,SAAW,UAAY,CACtC,GAAI,MAAK,UAGT,MAAK,UAAY,GACjB,IAAIQ,EAAS,KAAK,OAAQR,EAAI,KAAK,cACnCQ,EAAO,IAAM,KAAK,MAClBA,EAAOR,GAAK,IAAM,MAAMA,EAAI,GAC5B,KAAK,MAAQQ,EAAO,IAChBR,GAAK,KACF,KAAK,QACR,KAAK,KAAK,EAEZQ,EAAO,GAAK,KAAK,MACjBA,EAAO,IAAMA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC1CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC3CA,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAAMA,EAAO,IAC5CA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAM,GAExDA,EAAO,IAAM,KAAK,QAAU,EAAI,KAAK,QAAU,GAC/CA,EAAO,IAAM,KAAK,OAAS,EAC3B,KAAK,KAAK,EACZ,EAEA,OAAO,UAAU,KAAO,UAAY,CAClC,IAAIC,EAAI,KAAK,GAAIC,EAAI,KAAK,GAAIC,EAAI,KAAK,GAAIC,EAAI,KAAK,GAAIC,EAAI,KAAK,GAAIC,EAAI,KAAK,GAAIC,EAAI,KAAK,GACzFC,EAAI,KAAK,GAAIR,EAAS,KAAK,OAAQS,EAAGC,EAAIC,EAAIC,EAAKC,EAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAE7E,IAAKV,EAAI,GAAIA,EAAI,GAAI,EAAEA,EAErBI,EAAKb,EAAOS,EAAI,IAChBC,GAAOG,IAAO,EAAMA,GAAM,KAASA,IAAO,GAAOA,GAAM,IAAQA,IAAO,EACtEA,EAAKb,EAAOS,EAAI,GAChBE,GAAOE,IAAO,GAAOA,GAAM,KAASA,IAAO,GAAOA,GAAM,IAAQA,IAAO,GACvEb,EAAOS,GAAKT,EAAOS,EAAI,IAAMC,EAAKV,EAAOS,EAAI,GAAKE,GAAM,EAI1D,IADAQ,GAAKjB,EAAIC,EACJM,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACnB,KAAK,OACH,KAAK,OACPO,GAAK,OACLH,EAAKb,EAAO,GAAK,WACjBQ,EAAIK,EAAK,WAAa,EACtBT,EAAIS,EAAK,UAAY,IAErBG,GAAK,UACLH,EAAKb,EAAO,GAAK,UACjBQ,EAAIK,EAAK,YAAc,EACvBT,EAAIS,EAAK,WAAa,GAExB,KAAK,MAAQ,KAEbH,GAAOT,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,IAC9EU,GAAON,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,GAC9EW,GAAKf,EAAIC,EACTU,EAAMI,GAAMf,EAAIE,EAAKgB,GACrBJ,GAAMV,EAAIC,EAAM,CAACD,EAAIE,EACrBM,EAAKL,EAAIG,EAAKI,GAAK,EAAEN,GAAKT,EAAOS,GACjCK,GAAKJ,EAAKE,EACVJ,EAAIJ,EAAIS,GAAM,EACdT,EAAIS,EAAKC,IAAM,GAEjBJ,GAAON,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,IAC9EO,GAAOH,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,GAC9ES,GAAKb,EAAIH,EACTW,EAAMK,GAAMb,EAAIF,EAAKc,GACrBD,GAAMP,EAAIH,EAAM,CAACG,EAAIF,EACrBO,EAAKN,EAAII,EAAKI,GAAK,EAAEN,EAAI,GAAKT,EAAOS,EAAI,GACzCK,GAAKJ,EAAKE,EACVL,EAAIJ,EAAIU,GAAM,EACdV,EAAIU,EAAKC,IAAM,EACfJ,GAAOP,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,IAC9EQ,GAAOJ,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,GAC9EW,GAAKf,EAAIC,EACTQ,EAAMM,GAAMf,EAAIF,EAAKgB,GACrBF,GAAMR,EAAIC,EAAM,CAACD,EAAIF,EACrBQ,EAAKP,EAAIK,EAAKI,GAAK,EAAEN,EAAI,GAAKT,EAAOS,EAAI,GACzCK,GAAKJ,EAAKE,EACVN,EAAIJ,EAAIW,GAAM,EACdX,EAAIW,EAAKC,IAAM,EACfJ,GAAOR,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,IAC9ES,GAAOL,IAAM,EAAMA,GAAK,KAASA,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,GAC9Ea,GAAKjB,EAAIC,EACTS,EAAMO,GAAMjB,EAAIE,EAAKc,GACrBH,GAAMT,EAAIC,EAAM,CAACD,EAAIE,EACrBK,EAAKR,EAAIM,EAAKI,GAAK,EAAEN,EAAI,GAAKT,EAAOS,EAAI,GACzCK,GAAKJ,EAAKE,EACVP,EAAIJ,EAAIY,GAAM,EACdZ,EAAIY,EAAKC,IAAM,EAGjB,KAAK,GAAK,KAAK,GAAKb,GAAK,EACzB,KAAK,GAAK,KAAK,GAAKC,GAAK,EACzB,KAAK,GAAK,KAAK,GAAKC,GAAK,EACzB,KAAK,GAAK,KAAK,GAAKC,GAAK,EACzB,KAAK,GAAK,KAAK,GAAKC,GAAK,EACzB,KAAK,GAAK,KAAK,GAAKC,GAAK,EACzB,KAAK,GAAK,KAAK,GAAKC,GAAK,EACzB,KAAK,GAAK,KAAK,GAAKC,GAAK,CAC3B,EAEA,OAAO,UAAU,IAAM,UAAY,CACjC,KAAK,SAAS,EAEd,IAAIY,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAClFC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAEtBC,EAAM,UAAWR,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IAC9D,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,IAC7C,UAAWC,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,IAC7C,UAAWC,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,IAC7C,UAAWC,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,IAC7C,UAAWC,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,IAC7C,UAAWC,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,IAC7C,UAAWC,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,IAC/C,OAAK,KAAK,QACRE,GAAO,UAAWD,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IAC3D,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,GAAM,IACtD,UAAWA,GAAM,GAAM,IAAQ,UAAWA,GAAM,EAAK,IACrD,UAAWA,GAAM,EAAK,IAAQ,UAAUA,EAAK,KAE1CC,CACT,EAEA,OAAO,UAAU,SAAW,OAAO,UAAU,IAE7C,OAAO,UAAU,OAAS,UAAY,CACpC,KAAK,SAAS,EAEd,IAAIR,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAClFC,EAAK,KAAK,GAAIC,EAAK,KAAK,GAEtBE,EAAM,CACPT,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,IAC5DC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,IAC5DC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,IAC5DC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,IAC5DC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,IAC5DC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,IAC5DC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,GAC/D,EACA,OAAK,KAAK,OACRG,EAAI,KAAMF,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAMA,EAAK,GAAI,EAErEE,CACT,EAEA,OAAO,UAAU,MAAQ,OAAO,UAAU,OAE1C,OAAO,UAAU,YAAc,UAAY,CACzC,KAAK,SAAS,EAEd,IAAIC,EAAS,IAAI,YAAY,KAAK,MAAQ,GAAK,EAAE,EAC7CC,EAAW,IAAI,SAASD,CAAM,EAClC,OAAAC,EAAS,UAAU,EAAG,KAAK,EAAE,EAC7BA,EAAS,UAAU,EAAG,KAAK,EAAE,EAC7BA,EAAS,UAAU,EAAG,KAAK,EAAE,EAC7BA,EAAS,UAAU,GAAI,KAAK,EAAE,EAC9BA,EAAS,UAAU,GAAI,KAAK,EAAE,EAC9BA,EAAS,UAAU,GAAI,KAAK,EAAE,EAC9BA,EAAS,UAAU,GAAI,KAAK,EAAE,EACzB,KAAK,OACRA,EAAS,UAAU,GAAI,KAAK,EAAE,EAEzBD,CACT,EAEA,SAAS,WAAWpC,EAAKL,EAAOM,EAAc,CAC5C,IAAIH,EAAGC,EAAO,OAAOC,EACrB,GAAID,IAAS,SAAU,CACrB,IAAIuC,EAAQ,CAAC,EAAGjC,EAASL,EAAI,OAAQI,EAAQ,EAAGD,EAChD,IAAKL,EAAI,EAAGA,EAAIO,EAAQ,EAAEP,EACxBK,EAAOH,EAAI,WAAWF,CAAC,EACnBK,EAAO,IACTmC,EAAMlC,KAAWD,EACRA,EAAO,MAChBmC,EAAMlC,KAAY,IAAQD,GAAQ,EAClCmC,EAAMlC,KAAY,IAAQD,EAAO,IACxBA,EAAO,OAAUA,GAAQ,OAClCmC,EAAMlC,KAAY,IAAQD,GAAQ,GAClCmC,EAAMlC,KAAY,IAASD,GAAQ,EAAK,GACxCmC,EAAMlC,KAAY,IAAQD,EAAO,KAEjCA,EAAO,QAAaA,EAAO,OAAU,GAAOH,EAAI,WAAW,EAAEF,CAAC,EAAI,MAClEwC,EAAMlC,KAAY,IAAQD,GAAQ,GAClCmC,EAAMlC,KAAY,IAASD,GAAQ,GAAM,GACzCmC,EAAMlC,KAAY,IAASD,GAAQ,EAAK,GACxCmC,EAAMlC,KAAY,IAAQD,EAAO,IAGrCH,EAAMsC,CACR,SACMvC,IAAS,SAAU,CACrB,GAAIC,IAAQ,KACV,MAAM,IAAI,MAAM,KAAK,EAChB,GAAI,cAAgBA,EAAI,cAAgB,YAC7CA,EAAM,IAAI,WAAWA,CAAG,UACf,CAAC,MAAM,QAAQA,CAAG,IACvB,CAAC,cAAgB,CAAC,YAAY,OAAOA,CAAG,GAC1C,MAAM,IAAI,MAAM,KAAK,CAG3B,KACE,OAAM,IAAI,MAAM,KAAK,EAIrBA,EAAI,OAAS,KACfA,EAAO,IAAI,OAAOL,EAAO,EAAI,EAAG,OAAOK,CAAG,EAAE,MAAM,GAGpD,IAAIuC,EAAU,CAAC,EAAGC,EAAU,CAAC,EAC7B,IAAK1C,EAAI,EAAGA,EAAI,GAAI,EAAEA,EAAG,CACvB,IAAIU,EAAIR,EAAIF,IAAM,EAClByC,EAAQzC,GAAK,GAAOU,EACpBgC,EAAQ1C,GAAK,GAAOU,CACtB,CAEA,OAAO,KAAK,KAAMb,EAAOM,CAAY,EAErC,KAAK,OAAOuC,CAAO,EACnB,KAAK,QAAUD,EACf,KAAK,MAAQ,GACb,KAAK,aAAetC,CACtB,CACA,WAAW,UAAY,IAAI,OAE3B,WAAW,UAAU,SAAW,UAAY,CAE1C,GADA,OAAO,UAAU,SAAS,KAAK,IAAI,EAC/B,KAAK,MAAO,CACd,KAAK,MAAQ,GACb,IAAIwC,EAAY,KAAK,MAAM,EAC3B,OAAO,KAAK,KAAM,KAAK,MAAO,KAAK,YAAY,EAC/C,KAAK,OAAO,KAAK,OAAO,EACxB,KAAK,OAAOA,CAAS,EACrB,OAAO,UAAU,SAAS,KAAK,IAAI,CACrC,CACF,EAEA,IAAI,QAAU,aAAa,EAC3B,QAAQ,OAAS,QACjB,QAAQ,OAAS,aAAa,EAAI,EAClC,QAAQ,OAAO,KAAO,iBAAiB,EACvC,QAAQ,OAAO,KAAO,iBAAiB,EAAI,EAEvC,UACF,OAAO,QAAU,SAEjB,KAAK,OAAS,QAAQ,OACtB,KAAK,OAAS,QAAQ,OAClB,KACF,OAAO,UAAY,CACjB,OAAO,OACT,CAAC,EAGP,GAAG,ICrgBH,UAAYC,OAAW,eAKhB,IAAMC,GAAN,KAAuB,CAO1B,YAAYC,EAA0BC,EAAc,CAChD,KAAK,UAAYD,EACjB,KAAK,MAAQC,CACjB,CAGO,OAAc,CACjB,KAAK,UAAU,WAAW,KAAK,KAAK,CACxC,CAGO,UAAaC,EAAyD,CACzE,OAAOA,EAAS,KAAK,UAAW,KAAK,KAAK,CAC9C,CAGO,MAAyDC,EAA8B,CAC1F,IAAMC,EAAS,KAAK,UAAU,SAAS,KAAK,MAAOD,CAAI,EACjDE,EAAe,qBAAkB,KAAQD,CAAM,EACrD,eAAQ,OAAOC,EAAO,OAAO,CAAC,EAC9B,QAAQ,OAAOA,EAAO,OAAO,CAAC,EACvB,IAAU,SAAMA,CAAM,CACjC,CAGA,MAAa,KACTF,EACyC,CACzC,IAAIG,EAAS,KAAK,UAAU,kBAAkB,KAAK,MAAOH,CAAI,EAC9D,KAAOG,GAAU,MACbA,EAAS,MAAM,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC5C,GAAI,CACAD,EAAQ,KAAK,UAAU,iBAAiB,KAAK,KAAK,CAAC,CACvD,OAASE,EAAP,CACED,EAAOC,CAAC,CACZ,CACJ,CAAC,EAEL,IAAMC,EAAO,IAAIC,GAAqB,KAAK,UAAW,KAAK,MAAOL,CAAM,EAClED,EAAe,qBAAkB,KAAQK,CAAI,EACnD,eAAQ,OAAOL,EAAO,OAAO,CAAC,EAC9B,QAAQ,OAAOA,EAAO,SAAS,CAAC,EACzBA,CACX,CAGO,YAAsB,CACzB,OAAO,KAAK,UAAU,mBAAmB,KAAK,KAAK,CACvD,CAGO,cAAcO,EAAyB,CAC1C,OAAO,KAAK,UAAU,cAAc,KAAK,MAAOA,CAAK,CACzD,CAGO,QAA2DT,EAAiC,CAC/F,IAAMU,EAAO,KAAK,UAAU,eAAe,KAAK,MAAOV,CAAI,EAC3D,OAAO,IAAIW,GAAqB,KAAK,UAAW,KAAK,MAAOD,CAAI,CACpE,CAGO,qBAAqBE,EAAcC,EAAyBC,EAAsC,CACrG,KAAK,UAAU,qBAAqB,KAAK,MAAOF,EAAMC,EAASC,CAAI,CACvE,CAGO,iBAAiBC,EAAoBC,EAAmC,CAClF,IAAMf,EAAe,cAAWc,EAAO,QAAQ,EACxC,KAAK,yBAAyBd,EAAQe,CAAO,CACjD,CAEO,yBAAyBf,EAAoBe,EAAmC,CACnF,KAAK,UAAU,yBAAyB,KAAK,MAAOf,EAAQe,CAAO,CACvE,CAGO,kBAAkBC,EAAcD,EAAiC,CACpE,KAAK,UAAU,kBAAkB,KAAK,MAAOC,EAAMD,CAAO,CAC9D,CAEO,mBAAmBC,EAAcD,EAAkC,CACtE,KAAK,UAAU,mBAAmB,KAAK,MAAOC,EAAMD,CAAO,CAC/D,CACJ,EAGaR,GAAN,KAA2D,CAM9D,YAAsBX,EAAoCC,EAAwBK,EAAoB,CAAhF,cAAAN,EAAoC,UAAAC,EAAwB,YAAAK,EAC9E,KAAK,OAAS,GACd,KAAK,UAAY,EACrB,CAEA,MAAmC,CAC/B,GAAI,KAAK,OACL,YAAK,OAAS,GACP,CAAE,KAAM,GAAO,MAAO,KAAK,MAAO,EAE7C,GAAI,KAAK,UACL,MAAO,CAAE,KAAM,GAAM,MAAO,IAAK,EAErC,IAAMe,EAAW,KAAK,SAAS,kBAAkB,KAAK,IAAI,EAC1D,YAAK,UAAYA,EAAS,QAAU,EAC7B,CACH,KAAM,KAAK,UACX,MAAOA,CACX,CACJ,CAEA,CAAC,OAAO,WAAY,CAChB,OAAO,IACX,CACJ,EAGaP,GAAN,KAA2E,CAS9E,YAAYd,EAA0BsB,EAAsBC,EAAqB,CAC7E,KAAK,SAAWvB,EAChB,KAAK,aAAesB,EACpB,KAAK,YAAcC,CACvB,CAGO,OAAQ,CACX,KAAK,SAAS,cAAc,KAAK,aAAc,KAAK,WAAW,CACnE,CAGO,SAASC,EAA+B,CAC3C,IAAMpB,EAAS,KAAK,SAAS,YAAY,KAAK,aAAc,KAAK,YAAaoB,CAAM,EAC9EnB,EAAe,qBAAkB,KAAQD,CAAM,EACrD,eAAQ,OAAOC,EAAO,OAAO,CAAC,EAC9B,QAAQ,OAAOA,EAAO,OAAO,CAAC,EACvB,IAAU,SAAMA,CAAqC,CAChE,CAGO,QAAQmB,EAAiD,CAC5D,IAAMlB,EAAS,KAAK,SAAS,aAAa,KAAK,aAAc,KAAK,YAAakB,CAAM,EAC/Ed,EAAO,IAAIC,GAAqB,KAAK,SAAU,KAAK,aAAcL,CAAM,EACxED,EAAe,qBAAkB,KAAQK,CAAI,EACnD,eAAQ,OAAOL,EAAO,OAAO,CAAC,EAC9B,QAAQ,OAAOA,EAAO,SAAS,CAAC,EACzBA,CACX,CACJ,EC1KO,IAAKoB,QACRA,IAAA,QAAU,GAAV,UADQA,QAAA,ICGZ,IAAMC,GAAe,IAAI,YACnBC,GAAe,IAAI,YAAY,OAAO,EAE5C,SAASC,GAAWC,EAAmBC,EAAkBC,EAAiB,CACtE,IAAMC,EAAYN,GAAa,OAAOK,CAAO,EACvCE,EAAWJ,EAAI,QAAQG,EAAU,UAAU,EAC3CE,EAAYL,EAAI,OAAO,SAASI,EAAUA,EAAWD,EAAU,UAAU,EAC/EE,EAAU,IAAIF,CAAS,EACvBH,EAAI,SAASC,GAAY,GAAK,GAAK,EACnCD,EAAI,SAASC,GAAY,GAAK,GAAKG,EACnCJ,EAAI,SAASC,GAAY,GAAK,GAAKI,EAAU,UACjD,CAEA,SAASC,GAAYC,EAAe,CAChC,OAAQA,EAAO,CACX,IAAK,QACL,IAAK,OACD,MAAO,GACX,IAAK,QACL,IAAK,QACD,MAAO,GACX,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,UACD,MAAO,GACX,QACI,MAAO,EACf,CACJ,CAEA,SAASC,GAAWR,EAAmBS,EAAaF,EAAeG,EAAW,CAC1E,IAAMC,EAAOX,EAAI,OAAO,SAASS,EAAKA,EAAMC,EAAIJ,GAAYC,CAAK,CAAC,EAClE,OAAQA,EAAO,CACX,IAAK,QACD,OAAO,IAAI,WAAWI,EAAK,OAAQA,EAAK,WAAYD,CAAC,EACzD,IAAK,OACD,OAAO,IAAI,UAAUC,EAAK,OAAQA,EAAK,WAAYD,CAAC,EACxD,IAAK,QACD,OAAO,IAAI,WAAWC,EAAK,OAAQA,EAAK,WAAYD,CAAC,EACzD,IAAK,QACD,OAAO,IAAI,aAAaC,EAAK,OAAQA,EAAK,WAAYD,CAAC,EAC3D,IAAK,SACD,OAAO,IAAI,aAAaC,EAAK,OAAQA,EAAK,WAAYD,CAAC,EAC3D,IAAK,UACD,OAAO,IAAI,aAAaC,EAAK,OAAQA,EAAK,WAAYD,CAAC,EAC3D,QACI,OAAO,IAAI,MAAiC,CAAC,CACrD,CACJ,CAEA,SAASE,GAAgBZ,EAAmBS,EAAaC,EAAW,CAChE,IAAMC,EAAOX,EAAI,OAAO,SAASS,EAAKA,EAAMC,CAAC,EAC7C,OAAO,IAAI,WAAWC,EAAK,OAAQA,EAAK,WAAYD,CAAC,CACzD,CACA,SAASG,GAAkBb,EAAmBS,EAAaC,EAAW,CAClE,IAAMC,EAAOX,EAAI,OAAO,SAASS,EAAKA,EAAMC,EAAI,CAAC,EACjD,OAAO,IAAI,aAAaC,EAAK,OAAQA,EAAK,WAAYD,CAAC,CAC3D,CA0BO,SAASI,GACZC,EACAf,EACAC,EACAe,EACAC,EACAC,EACAC,EACAC,EACF,CACE,GAAI,CACA,IAAMC,EAAMN,EAAQ,cAAc,IAAIC,CAAM,EAC5C,GAAI,CAACK,EAAK,CACNtB,GAAWC,EAAKC,EAAU,wBAA0Be,CAAM,EAC1D,MACJ,CACA,IAAMM,EAAUxB,GAAa,OAAOE,EAAI,OAAO,SAASiB,EAASA,EAAUC,CAAQ,CAAC,EAC9EK,EAAO,KAAK,MAAMD,CAAO,EACzBE,EAAOX,GAAkBb,EAAKmB,EAASC,EAAW,CAAC,EAEnDK,EAAiBC,GAAmD,CA3GlF,IAAAC,GA4GY,IAAIC,GAA8B,KAIlC,OAHIF,EAAI,iBAAmB,SACvBE,GAAWhB,GAAgBZ,EAAKwB,EAAKE,EAAI,gBAA2BH,EAAK,IAAI,GAEzEG,EAAI,aAAc,CACtB,IAAK,UAAW,CACZ,GAAIA,EAAI,aAAe,MAAQA,EAAI,aAAe,OAC9C,MAAM,IAAI,MAAM,gEAAgE,EAEpF,GAAIA,EAAI,eAAiB,MAAQA,EAAI,eAAiB,OAClD,MAAM,IAAI,MAAM,uEAAuE,EAE3F,IAAMG,GAAMrB,GAAWR,EAAKwB,EAAKE,EAAI,YAAuBA,EAAI,aAAcH,EAAK,IAAI,EACjFO,EAA6B,CAAC,EAC9BC,EAAgBlB,GAAkBb,EAAKwB,EAAKE,EAAI,cAAyBH,EAAK,IAAI,EACxF,QAASS,EAAI,EAAGA,EAAIT,EAAK,KAAM,EAAES,EAAG,CAChC,GAAIJ,IAAY,MAAQ,CAACA,GAASI,GAAI,CAClCF,EAAQ,KAAK,IAAI,EACjB,QACJ,CACA,IAAMG,GAAWjC,EAAI,OAAO,SACxB6B,GAAIG,GACHH,GAAIG,GAAiBD,EAAcC,EACxC,EACME,EAAMpC,GAAa,OAAOmC,EAAQ,EACxCH,EAAQ,KAAKI,CAAG,CACpB,CACA,OAAQC,GAAgBL,EAAQK,EACpC,CACA,IAAK,SAAU,CACX,IAAMC,GAAW,CAAC,EACZC,EAA+B,CAAC,EACtC,QAASL,EAAI,EAAGA,KAAKL,GAAAD,EAAI,WAAJ,YAAAC,GAAc,SAAU,GAAI,EAAEK,EAAG,CAClD,IAAMM,EAAOZ,EAAI,SAAUM,GACrBO,GAAQd,EAAca,CAAI,EAChCD,EAAS,KAAMF,GAAgB,CAC3BC,GAAIE,EAAK,MAASC,GAAMJ,CAAG,CAC/B,CAAC,CACL,CACA,OAAIP,IAAY,KACJO,GAAgB,CACpB,GAAI,CAACP,GAAUO,GACX,OAAO,KAEX,QAAWK,KAAYH,EACnBG,EAASL,CAAG,EAEhB,OAAOC,EACX,EAEQD,GAAgB,CACpB,QAAWK,KAAYH,EACnBG,EAASL,CAAG,EAEhB,OAAOC,EACX,CAER,CACA,QAAS,CACL,GAAIV,EAAI,aAAe,OACnB,MAAM,IAAI,MACN,mEAAqEA,EAAI,YAC7E,EAEJ,IAAMe,GAAOjC,GAAWR,EAAKwB,EAAKE,EAAI,YAAuBA,EAAI,aAAcH,EAAK,IAAI,EACxF,OAAIK,IAAY,KACJO,GAAkBP,GAAUO,GAAcM,GAAKN,GAAZ,KAEnCA,GAAgBM,GAAKN,EAErC,CACJ,CACJ,EAGMO,EAAe,CAAC,EACtB,QAASC,EAAI,EAAGA,EAAIpB,EAAK,KAAK,OAAQ,EAAEoB,EACpCD,EAAa,KAAKjB,EAAcF,EAAK,KAAKoB,EAAE,CAAC,EAKjD,IAAMC,GAAgBrB,EAAK,KAAOjB,GAAYiB,EAAK,IAAI,YAAY,EAC7DsB,GAAgB7C,EAAI,QAAQ4C,EAAa,EACzCE,GAAatC,GAAWR,EAAK6C,GAAetB,EAAK,IAAI,aAAcA,EAAK,IAAI,EAC5EwB,GAAoB/C,EAAI,QAAQuB,EAAK,IAAI,EACzCyB,GAAiBpC,GAAgBZ,EAAK+C,GAAmBxB,EAAK,IAAI,EACxE,GAAIuB,GAAW,QAAU,GAAKE,GAAe,QAAU,EAAG,CACtDjD,GAAWC,EAAKC,EAAU,yCAAyC,EACnE,MACJ,CACA,IAAIgD,GAAgBH,GAChBvB,EAAK,IAAI,cAAgB,YACzB0B,GAAgB,IAAI,MAAiC1B,EAAK,IAAI,GAIlE,IAAM2B,GAAO,CAAC,EACd,QAASP,EAAI,EAAGA,EAAIpB,EAAK,KAAK,OAAQ,EAAEoB,EACpCO,GAAK,KAAK,IAAI,EAElB,QAASP,EAAI,EAAGA,EAAIpB,EAAK,KAAM,EAAEoB,EAAG,CAChC,QAASX,GAAI,EAAGA,GAAIT,EAAK,KAAK,OAAQ,EAAES,GACpCkB,GAAKlB,IAAKU,EAAaV,IAAGW,CAAC,EAE/B,IAAMQ,GAAM9B,EAAI,KAAK,GAAG6B,EAAI,EAC5BD,GAAcN,GAAKQ,GACnBH,GAAeL,GAA0BQ,IAAQ,KAAO,EAAI,CAChE,CAGA,IAAIC,GAAmB,EACvB,OAAQ7B,EAAK,IAAI,aAAc,CAC3B,IAAK,UAAW,CAEZ,IAAM8B,EAAiB,IAAI,MAAkB,CAAC,EAC9CD,GAAmBpD,EAAI,QAAQuB,EAAK,KAAOjB,GAAY,QAAQ,CAAC,EAChE,IAAMgD,GAAgBzC,GAAkBb,EAAKoD,GAAkB7B,EAAK,IAAI,EAGpEgC,GAAc,EAClB,QAASpB,EAAM,EAAGA,EAAMZ,EAAK,KAAM,EAAEY,EAAK,CACtC,IAAMqB,GAAO3D,GAAa,OAAQoD,GAAgDd,IAAQ,EAAE,EAC5FkB,EAAe,KAAKG,EAAI,EACxBF,GAAcnB,GAAOqB,GAAK,OAC1BD,IAAeC,GAAK,MACxB,CAGA,IAAMC,GAAkBzD,EAAI,QAAQuD,EAAW,EACzCG,EAAkB1D,EAAI,OAAO,SAASyD,GAAiBA,GAAkBF,EAAW,EAGtFI,EAAe,EACnB,QAASxB,EAAM,EAAGA,EAAMZ,EAAK,KAAM,EAAEY,EAAK,CACtCW,GAAWX,GAAOwB,EAClB,IAAMC,GAAaP,EAAelB,GACnBuB,EAAgB,SAASC,EAAcA,EAAeC,GAAW,MAAM,EAC/E,IAAIA,EAAU,EACrBD,GAAgBC,GAAW,MAC/B,CACJ,CACJ,CAGA,IAAMC,EAAS,EAAI,EACbC,GAAS9D,EAAI,QAAQ6D,CAAM,EAC3BE,GAAYlD,GAAkBb,EAAK8D,GAAQ,CAAC,EAClDC,GAAU,GAAKlB,GACfkB,GAAU,GAAKhB,GACfgB,GAAU,GAAKX,GAGfpD,EAAI,SAASC,GAAY,GAAK,GAAK,EACnCD,EAAI,SAASC,GAAY,GAAK,GAAK6D,GACnC9D,EAAI,SAASC,GAAY,GAAK,GAAK,CACvC,OAAS+D,EAAP,CACEjE,GAAWC,EAAKC,EAAU+D,EAAE,SAAS,CAAC,CAC1C,CACJ,CCtQA,SAASC,IAAuD,CAC5D,IAAMC,EAAU,IAAI,YACpB,OAAQC,IACA,OAAO,kBAAsB,KAAeA,EAAK,kBAAkB,oBACnEA,EAAO,IAAI,WAAWA,CAAI,GAEvBD,EAAQ,OAAOC,CAAI,EAElC,CAEO,IAAMC,GAAaH,GAAmB,EAGtC,SAASI,GAASC,EAAmBC,EAAmB,CAC3D,QAAQ,MAAM,cAAcA,GAAK,EACjCD,EAAI,MAAM,uBAAwB,KAAM,CAAC,QAAQ,EAAG,CAACC,CAAG,CAAC,CAC7D,CAGO,SAASC,GAAWF,EAAmBG,EAAeC,EAA4B,CACrF,IAAMC,EAASL,EAAI,OAAO,SAASG,EAAOA,EAAQC,CAAM,EAClDE,EAAO,IAAI,WAAW,IAAI,YAAYD,EAAO,UAAU,CAAC,EAC9D,OAAAC,EAAK,IAAID,CAAM,EACRC,CACX,CAGO,SAASC,EAAWP,EAAmBG,EAAeC,EAAwB,CACjF,OAAON,GAAWE,EAAI,OAAO,SAASG,EAAOA,EAAQC,CAAM,CAAC,CAChE,CAGO,IAAKI,QACRA,IAAA,OAAS,GAAT,SACAA,IAAA,QAAU,GAAV,UACAA,IAAA,mBAAqB,GAArB,qBACAA,IAAA,iBAAmB,GAAnB,mBACAA,IAAA,KAAO,GAAP,OACAA,IAAA,GAAK,GAAL,KANQA,QAAA,IAUAC,QAERA,IAAA,gBAAkB,GAAlB,kBAEAA,IAAA,iBAAmB,GAAnB,mBAEAA,IAAA,qBAAuB,GAAvB,uBAEAA,IAAA,uBAAyB,GAAzB,yBAEAA,IAAA,2BAA6B,IAA7B,6BAEAA,IAAA,kBAAoB,IAApB,oBAZQA,QAAA,IA2CL,SAASC,EACZV,EACAW,EACAC,EACAC,EACwB,CACxB,IAAMC,EAAed,EAAI,UAAU,EAG7Be,EAAWf,EAAI,WAAW,EAAI,CAAC,EACrCY,EAAS,QAAQ,QAAQ,EACzBC,EAAK,QAAQE,CAAQ,EAGrBf,EAAI,MAAMW,EAAU,KAAMC,EAAUC,CAAI,EAGxC,IAAMG,EAAShB,EAAI,SAASe,GAAY,GAAK,GACvClB,EAAOG,EAAI,SAASe,GAAY,GAAK,GACrCE,EAAWjB,EAAI,SAASe,GAAY,GAAK,GAG/C,OAAAf,EAAI,aAAac,CAAY,EACtB,CAACE,EAAQnB,EAAMoB,CAAQ,CAClC,CAGO,SAASC,EAAoBlB,EAAyB,CACzDA,EAAI,MAAM,4BAA6B,KAAM,CAAC,EAAG,CAAC,CAAC,CACvD,CA0CO,IAAMmB,GAAiC,CAC1C,cAAe,IAAI,IAEnB,oBAAqB,CAACC,EAAoBC,IAA8B,GACxE,uBAAyBD,GAA+B,EACxD,SAAU,CAACA,EAAoBE,EAAiBC,IAA2B,CAAC,EAC5E,SAAU,CAACH,EAAoBE,IAA0B,CAAC,EAC1D,UAAW,CAACF,EAAoBE,IAA0B,CAAC,EAC3D,4BAA6B,CAACF,EAAoBE,IACvC,EAEX,aAAc,CAACF,EAAoBE,EAAiBE,IAA2B,CAAC,EAChF,SAAU,CAACJ,EAAoBE,EAAiBG,EAAiBC,EAAgBC,IACtE,EAEX,UAAW,CAACP,EAAoBE,EAAiBG,EAAiBC,EAAgBC,IACvE,EAGX,gBAAiB,CAACP,EAAoBQ,EAAkBC,IAA2B,CAAC,EACpF,eAAgB,CAACT,EAAoBQ,EAAkBC,IAC5C,GAEX,gBAAiB,CAACT,EAAoBQ,EAAkBC,IAA2B,CAAC,EACpF,qBAAsB,CAACT,EAAoBQ,EAAkBC,IAClD,GAEX,KAAM,CAACT,EAAoBQ,EAAkBC,IAA2B,CAAC,EACzE,SAAU,CAACT,EAAoBU,EAAkBC,EAAkBC,EAAgBC,IAAyB,CAAC,EAC7G,UAAW,CAACb,EAAoBQ,EAAkBC,IACvC,GAEX,WAAY,CAACT,EAAoBQ,EAAkBC,IAA2B,CAAC,EAC/E,cAAe,CACX7B,EACAe,EACAmB,EACAC,EACAC,EACAC,EACAC,IACO,CACAC,GAAcpB,GAAiBnB,EAAKe,EAAUmB,EAAQC,EAASC,EAAUC,EAASC,CAAQ,CACrG,CACJ,EC7LO,IAAME,GAAN,KAAqB,CAkBxB,YAAYC,EAAqB,CAC7B,IAAMC,EAAM,IAAI,aAAaD,EAAQ,OAAQA,EAAQ,WAAYA,EAAQ,WAAa,CAAC,EACjFE,EAAS,IAAI,WAAW,IAAI,YAAYF,EAAQ,UAAU,CAAC,EACjEE,EAAO,IAAIF,EAAQ,SAAS,EAAI,CAAC,CAAC,EAClC,KAAK,mBAAqBC,EAAI,GAC9B,KAAK,oBAAsBA,EAAI,GAC/B,KAAK,qBAAuBA,EAAI,GAChC,KAAK,gBAAkBA,EAAI,GAC3B,KAAK,kBAAoBA,EAAI,GAC7B,KAAK,eAAiBA,EAAI,GAC1B,KAAK,UAAYA,EAAI,GACrB,KAAK,WAAaC,CACtB,CAGO,cAAcC,EAAeC,EAAgD,CAChF,OAAAA,EAAMA,GAAO,CACT,gBAAiB,EACjB,iBAAkB,EAClB,kBAAmB,EACnB,YAAa,EACb,cAAe,EACf,WAAY,CAChB,EACAA,EAAI,YAAc,KAAK,WAAWD,EAAQ,EAAI,GAAK,GACnDC,EAAI,gBAAkB,KAAK,WAAWD,EAAQ,EAAI,IAAM,EACxDC,EAAI,iBAAmB,KAAK,WAAWD,EAAQ,EAAI,GAAK,GACxDC,EAAI,kBAAoB,KAAK,WAAWD,EAAQ,EAAI,IAAM,EAC1DC,EAAI,cAAgB,KAAK,WAAWD,EAAQ,EAAI,GAAK,GACrDC,EAAI,WAAa,KAAK,WAAWD,EAAQ,EAAI,IAAM,EAC5CC,CACX,CACJ,EClEA,UAAYC,MAAW,eAuBhB,SAASC,GAAeC,EAA+B,CAC1D,OAAQA,EAAK,OAAQ,CACjB,KAAW,OAAK,OACZ,MAAO,CAAE,QAAS,QAAS,EAC/B,KAAW,OAAK,KACZ,MAAO,CAAE,QAAS,MAAO,EAC7B,KAAW,OAAK,KACZ,MAAO,CAAE,QAAS,MAAO,EAC7B,KAAW,OAAK,QACZ,MAAO,CAAE,QAAS,WAAY,EAClC,KAAW,OAAK,gBACZ,MAAO,CAAE,QAAS,YAAa,EACnC,KAAW,OAAK,QAAS,CACrB,IAAMC,EAAMD,EACZ,MAAO,CAAE,QAAS,UAAW,UAAWC,EAAI,UAAW,MAAOA,EAAI,KAAM,CAC5E,CACA,KAAW,OAAK,MACZ,MAAO,CAAE,QAAS,OAAQ,EAC9B,KAAW,OAAK,QACZ,MAAO,CAAE,QAAS,SAAU,EAChC,KAAW,OAAK,QACZ,MAAO,CAAE,QAAS,SAAU,EAChC,KAAW,OAAK,QACZ,MAAO,CAAE,QAAS,SAAU,EAChC,KAAW,OAAK,IACZ,MAAO,CAAE,QAAS,OAAQ,EAC9B,KAAW,OAAK,MACZ,MAAO,CAAE,QAAS,OAAQ,EAC9B,KAAW,OAAK,MACZ,MAAO,CAAE,QAAS,OAAQ,EAC9B,KAAW,OAAK,MACZ,MAAO,CAAE,QAAS,OAAQ,EAC9B,KAAW,OAAK,OACZ,MAAO,CAAE,QAAS,QAAS,EAC/B,KAAW,OAAK,OACZ,MAAO,CAAE,QAAS,QAAS,EAC/B,KAAW,OAAK,OACZ,MAAO,CAAE,QAAS,QAAS,EAC/B,KAAW,OAAK,MACZ,MAAO,CAAE,QAAS,OAAQ,EAC9B,KAAW,OAAK,gBACZ,MAAO,CAAE,QAAS,cAAe,EACrC,KAAW,OAAK,kBACZ,MAAO,CAAE,QAAS,aAAc,EACpC,KAAW,OAAK,KAEZ,MAAO,CACH,QAAS,OACT,UAAWF,GAHFC,EAGsB,SAAS,CAC5C,EAEJ,KAAW,OAAK,gBAEZ,MAAO,CAAE,QAAS,kBAAmB,UADzBA,EACwC,SAAU,EAElE,KAAW,OAAK,KACZ,MAAO,CAAE,QAAS,MAAO,EAC7B,KAAW,OAAK,KACZ,MAAO,CAAE,QAAS,MAAO,EAC7B,KAAW,OAAK,OAEZ,MAAO,CACH,QAAS,SACT,OAHYA,EAGI,SAAS,IAAIE,GAAKC,GAAgBD,EAAE,KAAMA,EAAE,IAAI,CAAC,CACrE,EAEJ,KAAW,OAAK,IAAK,CACjB,IAAME,EAAOJ,EACb,MAAO,CACH,QAAS,MACT,QAASD,GAAeK,EAAK,OAAO,EACpC,UAAWL,GAAeK,EAAK,SAAS,CAC5C,CACJ,CACA,KAAW,OAAK,KACZ,MAAO,CAAE,QAAS,SAAU,EAChC,KAAW,OAAK,gBACZ,MAAO,CAAE,QAAS,UAAW,EACjC,KAAW,OAAK,gBACZ,MAAO,CAAE,QAAS,UAAW,EACjC,KAAW,OAAK,eACZ,MAAO,CAAE,QAAS,UAAW,EACjC,KAAW,OAAK,WACZ,MAAO,CAAE,QAAS,SAAU,EAChC,KAAW,OAAK,UAEZ,MAAO,CAAE,QAAS,YAAa,SADpBJ,EACiC,UAAY,MAAU,EAEtE,KAAW,OAAK,gBAEZ,MAAO,CAAE,QAAS,eAAgB,SADvBA,EACoC,UAAY,MAAU,EAEzE,KAAW,OAAK,qBAEZ,MAAO,CAAE,QAAS,gBAAiB,SADxBA,EACqC,UAAY,MAAU,EAE1E,KAAW,OAAK,oBAEZ,MAAO,CAAE,QAAS,gBAAiB,SADxBA,EACqC,UAAY,MAAU,EAE1E,KAAW,OAAK,qBAEZ,MAAO,CAAE,QAAS,gBAAiB,SADxBA,EACqC,UAAY,MAAU,CAE9E,CACA,MAAM,IAAI,MAAM,2BAA2BA,EAAK,SAAS,GAAG,CAChE,CAIO,SAASG,GAAgBE,EAAcL,EAAgC,CAC1E,IAAMM,EAAIP,GAAeC,CAAI,EAC7B,OAAAM,EAAE,KAAOD,EACFC,CACX,CCzHA,IAAMC,GAAe,IAAI,YAQbC,QACRA,IAAA,gBAAkB,GAAlB,kBACAA,IAAA,aAAe,GAAf,eACAA,IAAA,UAAY,GAAZ,YACAA,IAAA,iBAAmB,GAAnB,mBACAA,IAAA,YAAc,IAAd,cALQA,QAAA,IASUC,GAAf,KAA4D,CAc/D,YAAYC,EAAgBC,EAAwB,CARpD,KAAU,UAAiC,KAE3C,KAAU,aAAqC,KAE/C,KAAU,qBAAmC,IAAM,CAAC,EA0BpD,KAAU,wBAAkE,CAAC,EArBzE,KAAK,QAAUD,EACf,KAAK,SAAWC,EAChB,KAAK,WAAa,CACtB,CAGA,IAAW,QAAiB,CACxB,OAAO,KAAK,OAChB,CAEA,IAAW,KAAoB,CAC3B,OAAO,KAAK,SAChB,CAEA,IAAW,SAA0B,CACjC,OAAO,KAAK,IAAI,SAAW,IAC/B,CAOA,MAAa,YAAYC,EAAwDC,GAAK,CAAC,EAAkB,CAErG,OAAI,KAAK,WAAa,KACX,MAGP,KAAK,cAAgB,OACrB,KAAK,wBAAwB,KAAKD,CAAU,EAC5C,MAAM,KAAK,cAGf,KAAK,aAAe,IAAI,QAAQE,GAAW,CACvC,KAAK,qBAAuBA,CAChC,CAAC,EAED,KAAK,wBAA0B,CAACF,CAAU,EAE1C,KAAK,UAAY,MAAM,KAAK,gBAAgB,CACxC,MAAO,QAAQ,IAAI,KAAK,OAAO,EAC/B,SAAU,QAAQ,IAAI,KAAK,OAAO,EAClC,qBAAsB,KAAK,oBAC/B,CAAC,EAED,MAAM,KAAK,aACX,KAAK,aAAe,KAEpB,KAAK,wBAA0B,KAAK,wBAAwB,OAAOG,GAAKA,GAAKH,CAAU,EAChF,KACX,CAEO,KAAKI,EAA4B,CACpC,GAAM,CAACC,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,kBAAmB,CAAC,QAAQ,EAAG,CAAC,KAAK,UAAUJ,CAAM,CAAC,CAAC,EAC5F,GAAIC,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAGO,OAAc,CACjB,GAAM,CAACL,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,mBAAoB,CAAC,EAAG,CAAC,CAAC,EAC/D,GAAIH,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAGO,YAAqB,CACxB,GAAM,CAACL,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,yBAA0B,CAAC,EAAG,CAAC,CAAC,EACrE,GAAIH,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMI,EAAUF,EAAW,KAAK,IAAKH,EAAGC,CAAC,EACzC,OAAAG,EAAoB,KAAK,GAAG,EACrBC,CACX,CAEO,iBAA0B,CAC7B,OAAO,KAAK,IAAI,MAAM,+BAAgC,SAAU,CAAC,EAAG,CAAC,CAAC,CAC1E,CAGO,SAASC,EAA4B,CACxC,GAAM,CAACP,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,sBAAuB,CAAC,QAAQ,EAAG,CAACI,CAAI,CAAC,EAC9E,GAAIP,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMM,EAAMJ,EAAW,KAAK,IAAKH,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrB,KAAK,MAAMG,CAAG,CACzB,CAGO,SAA4B,CAC/B,IAAMC,EAAO,KAAK,IAAI,MAAM,qBAAsB,SAAU,CAAC,EAAG,CAAC,CAAC,EAClE,OAAO,IAAIC,GAAiB,KAAMD,CAAI,CAC1C,CAEO,WAAWA,EAAoB,CAElC,GADA,KAAK,IAAI,MAAM,wBAAyB,KAAM,CAAC,QAAQ,EAAG,CAACA,CAAI,CAAC,EAC5D,KAAK,QACL,QAAWE,IAAU,CAAC,GAAG,KAAK,QAAQ,eAAgB,GAAG,KAAK,QAAQ,aAAa,EAC/EA,EAAO,YAAY,CACf,IAAK,mBACL,aAAcF,CAClB,CAAC,CAGb,CAGO,SAASA,EAAcF,EAA0B,CACpD,GAAM,CAACP,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,uBAAwB,CAAC,SAAU,QAAQ,EAAG,CAACM,EAAMF,CAAI,CAAC,EAC/F,GAAIP,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMM,EAAMI,GAAW,KAAK,IAAKX,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrBG,CACX,CAOO,kBAAkBC,EAAcF,EAAiC,CACpE,GAAM,CAACP,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,iCAAkC,CAAC,SAAU,QAAQ,EAAG,CAACM,EAAMF,CAAI,CAAC,EACzG,GAAIP,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,GAAID,GAAK,EACL,OAAO,KAEX,IAAMO,EAAMI,GAAW,KAAK,IAAKX,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrBG,CACX,CAEO,iBAAiBC,EAAiC,CACrD,GAAM,CAACT,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,gCAAiC,CAAC,QAAQ,EAAG,CAACM,CAAI,CAAC,EACxF,GAAIT,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,GAAID,GAAK,EACL,OAAO,KAEX,IAAMO,EAAMI,GAAW,KAAK,IAAKX,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrBG,CACX,CAEO,mBAAmBC,EAAuB,CAC7C,OAAO,KAAK,IAAI,MAAM,kCAAmC,UAAW,CAAC,QAAQ,EAAG,CAACA,CAAI,CAAC,CAC1F,CAEO,kBAAkBA,EAA0B,CAC/C,GAAM,CAACT,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,iCAAkC,CAAC,QAAQ,EAAG,CAACM,CAAI,CAAC,EACzF,GAAIT,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMM,EAAMI,GAAW,KAAK,IAAKX,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrBG,CACX,CAEO,cAAcC,EAAcF,EAAwB,CACvD,GAAM,CAACP,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,4BAA6B,CAAC,SAAU,QAAQ,EAAG,CAACM,EAAMF,CAAI,CAAC,EACpG,GAAIP,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMM,EAAMJ,EAAW,KAAK,IAAKH,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrB,KAAK,MAAMG,CAAG,CACzB,CAGO,qBACHC,EACAI,EACAC,EACAC,EACI,CACJ,IAAMC,EAA+B,CACjC,WAAY,KAAK,WACjB,KAAMH,EACN,WAAYI,GAAeH,CAAO,CACtC,EACMI,EAAmB,CACrB,WAAYF,EAAK,WACjB,aAAcP,EACd,KAAMI,EACN,WAAYC,EACZ,KAAAC,CACJ,EACA,KAAK,YAAc,EACnB,GAAM,CAACf,EAAGC,EAAGC,CAAC,EAAIC,EACd,KAAK,IACL,+BACA,CAAC,SAAU,QAAQ,EACnB,CAACM,EAAM,KAAK,UAAUO,CAAI,CAAC,CAC/B,EACA,GAAIhB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAO9C,GALAG,EAAoB,KAAK,GAAG,EAC5B,WAAW,eAAe,eAAiB,WAAW,eAAe,eAAiB,IAAI,KAAO,IAC7Fa,EAAI,WACJA,CACJ,EACI,KAAK,QACL,QAAWP,IAAU,CAAC,GAAG,KAAK,QAAQ,eAAgB,GAAG,KAAK,QAAQ,aAAa,EAC/EA,EAAO,YAAY,CACf,IAAK,sBACL,IAAKO,CACT,CAAC,CAGb,CAGO,eAAeT,EAAcF,EAAsB,CACtD,GAAM,CAACP,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,6BAA8B,CAAC,SAAU,QAAQ,EAAG,CAACM,EAAMF,CAAI,CAAC,EACrG,GAAIP,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,OAAAG,EAAoB,KAAK,GAAG,EACrBJ,CACX,CAGO,cAAcQ,EAAcU,EAAyB,CACxD,GAAM,CAACnB,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,4BAA6B,CAAC,SAAU,QAAQ,EAAG,CAACM,EAAMU,CAAS,CAAC,EACzG,GAAInB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAGO,YAAYI,EAAcU,EAAmBC,EAA2B,CAC3E,GAAM,CAACpB,EAAGC,EAAGC,CAAC,EAAIC,EACd,KAAK,IACL,0BACA,CAAC,SAAU,SAAU,QAAQ,EAC7B,CAACM,EAAMU,EAAW,KAAK,UAAUC,CAAM,CAAC,CAC5C,EACA,GAAIpB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMM,EAAMI,GAAW,KAAK,IAAKX,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrBG,CACX,CAGO,aAAaC,EAAcU,EAAmBC,EAA2B,CAC5E,GAAM,CAACpB,EAAGC,EAAGC,CAAC,EAAIC,EACd,KAAK,IACL,2BACA,CAAC,SAAU,SAAU,QAAQ,EAC7B,CAACM,EAAMU,EAAW,KAAK,UAAUC,CAAM,CAAC,CAC5C,EACA,GAAIpB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMM,EAAMI,GAAW,KAAK,IAAKX,EAAGC,CAAC,EACrC,OAAAG,EAAoB,KAAK,GAAG,EACrBG,CACX,CAGO,yBAAyBC,EAAcY,EAAoBC,EAAoC,CAClG,GAAID,EAAO,QAAU,EAAG,OAExB,IAAME,EAAY,KAAK,IAAI,QAAQF,EAAO,MAAM,EAC9B,KAAK,IAAI,OAAO,SAASE,EAAWA,EAAYF,EAAO,MAAM,EACrE,IAAIA,CAAM,EACpB,IAAMG,EAAUF,EAAU,KAAK,UAAUA,CAAO,EAAI,GAG9C,CAACtB,EAAGC,EAAGC,CAAC,EAAIC,EACd,KAAK,IACL,0CACA,CAAC,SAAU,SAAU,SAAU,QAAQ,EACvC,CAACM,EAAMc,EAAWF,EAAO,OAAQG,CAAO,CAC5C,EACA,GAAIxB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,CAElD,CAGO,kBAAkBO,EAAcgB,EAAcH,EAAiC,CAElF,GAAIA,EAAQ,UAAY,OAAW,CAC/BA,EAAQ,YAAc,CAAC,EACvB,QAAWI,KAAKJ,EAAQ,QACpBA,EAAQ,YAAY,KAAKK,GAAgBD,EAAGJ,EAAQ,QAAQI,EAAE,CAAC,CAEvE,CACA,IAAME,EAAM,CAAE,GAAGN,CAAQ,EACzBM,EAAI,QAAUA,EAAI,YAClB,OAAOA,EAAI,YACX,IAAMJ,EAAU,KAAK,UAAUI,CAAG,EAG5B,CAAC5B,EAAGC,EAAGC,CAAC,EAAIC,EACd,KAAK,IACL,kCACA,CAAC,SAAU,SAAU,QAAQ,EAC7B,CAACM,EAAMgB,EAAMD,CAAO,CACxB,EACA,GAAIxB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,CAElD,CAEO,mBAAmBO,EAAcgB,EAAcH,EAAkC,CAEpF,GAAIA,EAAQ,UAAY,OAAW,CAC/BA,EAAQ,YAAc,CAAC,EACvB,QAAWI,KAAKJ,EAAQ,QACpBA,EAAQ,YAAY,KAAKK,GAAgBD,EAAGJ,EAAQ,QAAQI,EAAE,CAAC,CAEvE,CACA,IAAME,EAAM,CAAE,GAAGN,CAAQ,EACzBM,EAAI,QAAUA,EAAI,YAClB,OAAOA,EAAI,YACX,IAAMJ,EAAU,KAAK,UAAUI,CAAG,EAG5B,CAAC5B,EAAGC,EAAGC,CAAC,EAAIC,EACd,KAAK,IACL,mCACA,CAAC,SAAU,SAAU,QAAQ,EAC7B,CAACM,EAAMgB,EAAMD,CAAO,CACxB,EACA,GAAIxB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,CAElD,CAEO,UAAUuB,EAAyB,CACtC,GAAM,CAACzB,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,gCAAiC,CAAC,QAAQ,EAAG,CAACsB,CAAI,CAAC,EACxF,GAAIzB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAM2B,EAAUzB,EAAW,KAAK,IAAKH,EAAGC,CAAC,EACzCG,EAAoB,KAAK,GAAG,EAC5B,IAAMyB,EAAO,KAAK,MAAMD,CAAO,EAC/B,OAAIC,GAAQ,KACD,CAAC,EAELA,CACX,CAEO,gBAAgBjB,EAAckB,EAAaC,EAA2BC,EAAW,GAAa,CAC7FF,IAAQ,SACRA,EAAMlB,GAEV,GAAM,CAACb,EAAG,EAAGE,CAAC,EAAIC,EACd,KAAK,IACL,kCACA,CAAC,SAAU,QAAQ,EACnB,CAACU,EAAMkB,EAAKC,EAAOC,CAAQ,CAC/B,EACA,GAAIjC,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAK,EAAGF,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAEO,iBAAiBQ,EAAcN,EAAoB,CACtD,IAAMc,EAAS/B,GAAa,OAAOiB,CAAI,EACvC,KAAK,mBAAmBM,EAAMQ,CAAM,CACxC,CAEO,mBAAmBR,EAAcQ,EAA0B,CAC9D,IAAMa,EAAM,KAAK,IAAI,QAAQb,EAAO,MAAM,EAC9B,KAAK,IAAI,OAAO,SAASa,EAAKA,EAAMb,EAAO,MAAM,EACzD,IAAIA,CAAM,EACd,GAAM,CAACrB,EAAG,EAAGE,CAAC,EAAIC,EACd,KAAK,IACL,qCACA,CAAC,SAAU,SAAU,QAAQ,EAC7B,CAACU,EAAMqB,EAAKb,EAAO,MAAM,CAC7B,EACA,GAAIrB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAK,EAAGF,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAEO,mBACHQ,EACAsB,EACAC,EACAH,EACI,CACJ,GAAM,CAACjC,EAAG,EAAGE,CAAC,EAAIC,EACd,KAAK,IACL,kCACA,CAAC,SAAU,SAAU,SAAU,SAAS,EACxC,CAACU,EAAMA,EAAMuB,EAAUH,CAAQ,CACnC,EACA,GAAIjC,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAK,EAAGF,CAAC,CAAC,EAI9C,GAFAG,EAAoB,KAAK,GAAG,EAC5B,WAAW,eAAe,QAAU,WAAW,eAAe,QAAU,IAAI,KAAO,IAAIQ,EAAMsB,CAAM,EAC/F,KAAK,QAAS,CACd,QAAWxB,KAAU,KAAK,QAAQ,eAC9BA,EAAO,YAAY,CACf,IAAK,qBACL,SAAUE,EACV,WAAYsB,CAChB,CAAC,EAEL,QAAWxB,KAAU,KAAK,QAAQ,cAC9BA,EAAO,YAAY,CACf,IAAK,iBACL,SAAUE,CACd,CAAC,CAET,CACJ,CAEO,SAASA,EAAoB,CAChC,GAAM,CAACb,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,0BAA2B,CAAC,QAAQ,EAAG,CAACU,CAAI,CAAC,EAClF,GAAIb,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAEO,WAAkB,CACrB,GAAM,CAACL,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,2BAA4B,CAAC,EAAG,CAAC,CAAC,EACvE,GAAIH,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAEO,YAAmB,CACtB,KAAK,IAAI,MAAM,yBAA0B,KAAM,CAAC,EAAG,CAAC,CAAC,CACzD,CAEO,eAAeQ,EAAcY,EAAoB,CACpD,GAAM,CAACzB,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,+BAAgC,CAAC,SAAU,QAAQ,EAAG,CAACU,EAAMY,CAAI,CAAC,EACvG,GAAIzB,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9CG,EAAoB,KAAK,GAAG,CAChC,CAEO,iBAAiBQ,EAA0B,CAC9C,GAAM,CAACb,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,iCAAkC,CAAC,QAAQ,EAAG,CAACU,CAAI,CAAC,EACzF,GAAIb,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,IAAMmB,EAAS,KAAK,IAAI,OAAO,SAASpB,EAAGA,EAAIC,CAAC,EAC1CmC,EAAO,IAAI,WAAWhB,EAAO,MAAM,EACzC,OAAAgB,EAAK,IAAIhB,CAAM,EACfhB,EAAoB,KAAK,GAAG,EACrBgC,CACX,CAGO,sBAAsBC,EAAcC,EAAuB,CAC9D,GAAM,CAACvC,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,gCAAiC,CAAC,SAAU,SAAS,EAAG,CAACmC,EAAMC,CAAM,CAAC,EAC3G,GAAIvC,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,CAElD,CAEO,qBAAqBoC,EAA8B,CACtD,GAAM,CAACtC,EAAGC,EAAGC,CAAC,EAAIC,EAAS,KAAK,IAAK,+BAAgC,CAAC,QAAQ,EAAG,CAACmC,CAAI,CAAC,EACvF,GAAItC,IAAM,EACN,MAAM,IAAI,MAAMI,EAAW,KAAK,IAAKH,EAAGC,CAAC,CAAC,EAE9C,OAAO,IAAIsC,GAAe,KAAK,IAAI,OAAO,SAASvC,EAAGA,EAAIC,CAAC,CAAC,CAChE,CACJ,ECzfO,IAAKuC,QACRA,IAAA,UAAY,GAAZ,YACAA,IAAA,UAAY,GAAZ,YACAA,IAAA,UAAY,GAAZ,YACAA,IAAA,WAAa,GAAb,aAJQA,QAAA,IC3BL,IAAKC,QACRA,EAAA,UAAY,YACZA,EAAA,cAAgB,gBAFRA,QAAA,ICHL,IAAKC,QACRA,IAAA,KAAO,GAAP,OACAA,IAAA,MAAQ,GAAR,QACAA,IAAA,KAAO,GAAP,OACAA,IAAA,QAAU,GAAV,UACAA,IAAA,MAAQ,GAAR,QALQA,QAAA,IAQAC,QACRA,IAAA,KAAO,GAAP,OACAA,IAAA,QAAU,GAAV,UACAA,IAAA,WAAa,GAAb,aACAA,IAAA,KAAO,GAAP,OACAA,IAAA,MAAQ,GAAR,QACAA,IAAA,YAAc,GAAd,cANQA,QAAA,IASAC,QACRA,IAAA,KAAO,GAAP,OACAA,IAAA,GAAK,GAAL,KACAA,IAAA,MAAQ,GAAR,QACAA,IAAA,MAAQ,GAAR,QACAA,IAAA,IAAM,GAAN,MACAA,IAAA,QAAU,GAAV,UANQA,QAAA,IASAC,QACRA,IAAA,KAAO,GAAP,OACAA,IAAA,WAAa,GAAb,aACAA,IAAA,YAAc,GAAd,cACAA,IAAA,SAAW,GAAX,WACAA,IAAA,aAAe,GAAf,eALQA,QAAA,IAmCCC,GAAN,KAAmC,CAC/B,IAAIC,EAA+B,CAAC,CAC/C,EAEaC,GAAN,KAAsC,CACzC,YAAsBC,EAAkB,EAAe,CAAjC,WAAAA,CAAkC,CACjD,IAAIC,EAA8B,CACjCA,EAAM,OAAS,KAAK,OACpB,QAAQ,IAAIA,CAAK,CAEzB,CACJ,EAEO,SAASC,GAAiBF,EAAyB,CACtD,OAAQA,EAAO,CACX,IAAK,GACD,MAAO,OACX,IAAK,GACD,MAAO,QACX,IAAK,GACD,MAAO,OACX,IAAK,GACD,MAAO,UACX,IAAK,GACD,MAAO,QACX,QACI,MAAO,GACf,CACJ,CAEO,SAASG,GAAiBC,EAAyB,CACtD,OAAQA,EAAO,CACX,IAAK,GACD,MAAO,OACX,IAAK,GACD,MAAO,KACX,IAAK,GACD,MAAO,QACX,IAAK,GACD,MAAO,QACX,IAAK,GACD,MAAO,MACX,IAAK,GACD,MAAO,UACX,QACI,MAAO,GACf,CACJ,CAEO,SAASC,GAAiBC,EAAyB,CACtD,OAAQA,EAAO,CACX,IAAK,GACD,MAAO,UACX,IAAK,GACD,MAAO,aACX,IAAK,GACD,MAAO,cACX,IAAK,GACD,MAAO,OACX,IAAK,GACD,MAAO,QACX,QACI,MAAO,GACf,CACJ,CAEO,SAASC,GAAkBC,EAA2B,CACzD,OAAQA,EAAQ,CACZ,IAAK,GACD,MAAO,OACX,IAAK,GACD,MAAO,aACX,IAAK,GACD,MAAO,cACX,IAAK,GACD,MAAO,kBACX,IAAK,GACD,MAAO,SACX,QACI,MAAO,GACf,CACJ,CC9IO,IAA+OC,GAAW,SAAS,YAAY,SAAS,IAAI,WAAW,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAAEC,GAAW,SAAS,YAAY,SAAS,IAAI,WAAW,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,EAAtgB,IAA2rDC,GAAK,SAAS,YAAY,SAAS,IAAI,WAAW,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,EAA/zD,IAA+/DC,GAAQ,KAAK,MAAMC,GAAG,CAAC,GAAG,CAAC,OAAmB,OAAO,eAApB,KAAqC,IAAI,iBAAgB,MAAM,YAAY,IAAI,kBAAkB,CAAC,CAAC,EAAE,YAAY,SAASA,CAAC,CAAC,OAAOA,EAAN,CAAS,MAAM,EAAE,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,47ICE3xE,IAAMC,GAAeC,GAAO,KACtBC,GAAkBD,GAAO,QAEhCE,GAAgBF,GAAO,QAAQ,MAAM,GAAG,EACjCG,GAAwBD,GAAc,GACtCE,GAAwBF,GAAc,GACtCG,GAAwBH,GAAc,GCQ5C,IAAMI,GAAS,IAAO,OAAO,UAAc,IAC5CC,GAAY,IAAOD,GAAO,EAAI,OAAS,UAAU,UAC1CE,GAAY,IAAMD,GAAU,EAAE,SAAS,SAAS,EAChDE,GAAW,IAAM,iCAAiC,KAAKF,GAAU,CAAC,EAkBxE,SAASG,IAAoC,CAChD,IAAMC,EAAoB,gCAAgCC,MAAgBC,WAC1E,MAAO,CACH,IAAK,CACD,WAAY,GAAGF,mBACf,WAAY,GAAGA,+BACnB,EACA,GAAI,CACA,WAAY,GAAGA,kBACf,WAAY,GAAGA,8BACnB,CAEJ,CACJ,CAiBA,IAAIG,GAAgC,KAChCC,GAAiC,KACjCC,GAA8B,KAC9BC,GAA2B,KAC3BC,GAAiC,KAOrC,eAAsBC,IAAiD,CACnE,OAAIL,IAAiB,OACjBA,GAAgB,OAAO,cAAiB,KAExCC,IAAkB,OAClBA,GAAiB,MAAYK,GAAW,GAExCJ,IAAe,OACfA,GAAc,MAAYK,GAAQ,GAElCJ,IAAY,OACZA,GAAW,MAAYK,GAAK,GAE5BJ,IAAkB,OAClBA,GAAiB,MAAYK,GAAW,GAErC,CACH,cAAeT,GACf,oBAAqBR,GAAO,GAAK,WAAW,qBAAuB,GACnE,eAAgBS,GAChB,SAAUE,GACV,YAAaD,GACb,eAAgBE,EACpB,CACJ,CAEA,eAAsBM,GAAaC,EAA+C,CAC9E,IAAMC,EAAW,MAAMP,GAAoB,EAC3C,GAAIO,EAAS,eAAgB,CACzB,GAAIA,EAAS,UAAYA,EAAS,aAAeA,EAAS,qBAAuBD,EAAQ,IACrF,MAAO,CACH,WAAYA,EAAQ,IAAI,WACxB,WAAYA,EAAQ,IAAI,WACxB,cAAeA,EAAQ,IAAI,aAC/B,EAEJ,GAAIA,EAAQ,GACR,MAAO,CACH,WAAYA,EAAQ,GAAG,WACvB,WAAYA,EAAQ,GAAG,WACvB,cAAe,IACnB,CAER,CACA,MAAO,CACH,WAAYA,EAAQ,IAAI,WACxB,WAAYA,EAAQ,IAAI,WACxB,cAAe,IACnB,CACJ,CC9HA,IAAAE,GAAqB,SAqBfC,GAAc,SAAUC,EAA+BC,EAAcC,EAA0B,CAtBrG,IAAAC,EAuBI,IAAIA,EAAAH,GAAA,YAAAA,EAAQ,WAAR,MAAAG,EAAkB,WAAW,QAAS,CAEtC,IAAMC,EAAW,GAAGJ,GAAA,YAAAA,EAAQ,WACtBK,EAASD,EAAS,QAAQ,KAAK,EAAE,EACvC,OAAOA,EAAS,UAAUC,CAAM,CACpC,KAAO,QAAIL,GAAA,MAAAA,EAAQ,SAER,GAAGE,KAAUF,GAAA,YAAAA,EAAQ,WAGrB,GAAGE,oBAElB,EAEO,SAASI,GAAaN,EAA+BC,EAAaM,EAA4B,CArCrG,IAAAJ,EAAAK,EAAAC,EAAAC,EAsCI,IAAMC,EAAcC,GAAWX,CAAG,EAK9BY,EAAQF,EAAY,KACxB,OAAIG,GAAkBd,CAAM,IACxBa,EAAO,IAAIF,EAAY,SAASE,KAE7B,CACH,IAAKA,EACL,MAAO,GACP,KAAMd,GAAYC,EAAQC,EAAKU,EAAY,MAAM,EACjD,QAASR,EAAAH,GAAA,YAAAA,EAAQ,SAAR,KAAAG,EAAmB,GAC5B,QAAS,KACT,OAAQI,EACR,aAAcC,EAAAR,GAAA,YAAAA,EAAQ,cAAR,KAAAQ,EAAwB,GACtC,iBAAkBC,EAAAT,GAAA,YAAAA,EAAQ,kBAAR,KAAAS,EAA4B,GAC9C,cAAeC,EAAAV,GAAA,YAAAA,EAAQ,eAAR,KAAAU,EAAyB,GACxC,QAAS,IAAI,KAAK,EAAE,YAAY,EAAE,QAAQ,KAAK,EAAE,EAAE,MAAM,GAAG,EAAE,GAC9D,YAAa,IAAI,KAAK,EAAE,YAAY,EAAE,QAAQ,KAAK,EAAE,EAAE,QAAQ,KAAK,EAAE,EAAE,MAAM,GAAG,EAAE,GAAI,GAC3F,CACJ,CAEO,SAASK,GAAUC,EAAgBC,EAAe,GAAO,CAG5D,IAAMC,EAAW,mBACbC,EAAS,GAEb,QAASC,EAAI,EAAGA,EAAIJ,EAAM,OAAQI,IAAK,CACnC,IAAMC,EAAcL,EAAMI,GAErBC,GAAM,KAAOA,GAAM,KAASA,GAAM,KAAOA,GAAM,KAASA,GAAM,KAAOA,GAAM,KAAQA,GAAM,KAC1FA,GAAM,KAAOA,GAAM,KAAOA,GAAM,IAChCF,GAAUE,EACHA,GAAM,IACTJ,EACAE,GAAU,MAEVA,GAAUE,GAGdF,GAAU,IACVA,GAAUD,EAASG,EAAG,WAAW,CAAC,GAAK,GACvCF,GAAUD,EAASG,EAAG,WAAW,CAAC,EAAI,IAE9C,CACA,OAAOF,CACX,CAEO,SAASG,GAAgBC,EAAkBC,EAAyC,KAA4B,CAzFvH,IAAArB,GA2FI,IAAMsB,GAAetB,GAAAqB,GAAA,YAAAA,EAAe,cAAf,KAAArB,GAA+B,mEAE9CuB,EAAM,IAAI,IAEhBA,EAAI,IAAI,aAAcH,EAAO,WAAW,EACxCG,EAAI,IAAI,uBAAwBD,CAAW,EAEvCF,EAAO,cACPG,EAAI,IAAI,uBAAwBH,EAAO,YAAY,EAIvD,IAAII,EAAgB,GAChBH,GAAA,MAAAA,EAAe,cACfG,GAAiB,iBAErBA,GAAiB,uCACbJ,EAAO,eACPI,GAAiB,yBAGrB,IAAIC,EAAmBL,EAAO,OAAS;AAAA,EAAOR,GAAUQ,EAAO,GAAG,EAAI;AAAA,EAAOA,EAAO,MAChFC,GAAA,MAAAA,EAAe,cACfI,GAAoB;AAAA,gBAAoBJ,GAAA,YAAAA,EAAe,cAE3DI,GAAoB;AAAA,OAAYL,EAAO,KACnC;AAAA,uBAA4BE,EAAc;AAAA,aAAkBF,EAAO,YACnEA,EAAO,cAAgBA,EAAO,aAAa,OAAS,IACpDK,GAAoB;AAAA,uBAA4BL,EAAO,cAG3DK,GAAoB;AAAA;AAAA,EAASD,EAAgB;AAAA,EAAOF,EACpD,IAAMI,KAA0B,WAAOD,CAAgB,EAEjDE,EAAe;AAAA,EAAuBP,EAAO,YAAc;AAAA,EAAOA,EAAO,QAAU,IAAMA,EAAO,OAAS,IAAMA,EAAO,QACxH;AAAA,EAAoBM,EAGlBE,EAAU,OAASR,EAAO,gBAC1BS,EAAQ,UAAO,KAAK,YAAYD,EAASR,EAAO,OAAO,EAMvDU,EAAU,UAAO,KAAK,YAAYD,EAAOT,EAAO,MAAM,EAGtDW,EAAW,UAAO,KAAK,YAAYD,EAASV,EAAO,OAAQ,EAG3DY,EAAa,UAAO,KAAK,YAAYD,EAAU,cAAc,EAG7DE,EAAY,UAAO,KAAKD,EAAYL,CAAY,EAEtD,OAAAJ,EAAI,IAAI,gBAAiB,+BAAiCH,EAAO,YAAc,IAAMA,EAAO,QAAU,IAAMA,EAAO,OAAS,IACxHA,EAAO,QAAU,gCAAkCI,EACnD,eAAiBS,CAAS,EAEvBV,CACX,CAEA,IAAMW,GAA8B,SAAUrC,EAA+BC,EAAcM,EAAiB+B,EAA6B,KAAMC,EAA8B,KAA4B,CACrM,IAAMhB,EAASjB,GAAYN,EAAQC,EAAKM,CAAM,EACxCiB,EAAgB,CAClB,YAAac,EACb,YAAaC,EAAU,UAAO,IAAIA,CAAQ,EAAI,IAClD,EACA,OAAOjB,GAAgBC,EAAQC,CAAa,CAChD,EAEO,SAASgB,GAAaC,EAAqBzC,EAA+BC,EAAcM,EAAgB+B,EAA6B,KAAMC,EAA8B,KAAM,GAC9KvC,GAAA,YAAAA,EAAQ,eAAeA,GAAA,YAAAA,EAAQ,iBACfqC,GAA4BrC,EAAQC,EAAKM,EAAQ+B,EAAaC,CAAO,EAC7E,QAAQ,CAACG,EAAeC,IAAmB,CAC/CF,EAAI,iBAAiBE,EAAQD,CAAK,CACtC,CAAC,EAEGJ,GACAG,EAAI,iBAAiB,eAAgBH,CAAW,EAG5D,CAEO,SAAS1B,GAAYX,EAAgD,CACxE,GAAIA,EAAI,QAAQ,OAAO,GAAK,EACxB,MAAM,IAAI,MAAM,+BAA+B,EAEnD,IAAM2C,EAAW3C,EAAI,QAAQ,IAAK,CAAC,EAEnC,GAAI2C,GAAY,GACZ,MAAM,IAAI,MAAM,2CAA2C,EAG/D,IAAM1C,EAASD,EAAI,UAAU,EAAG2C,CAAQ,EACxC,GAAI,CAAC1C,EACD,MAAM,IAAI,MAAM,oCAAoC,EAExD,IAAMW,EAAOZ,EAAI,UAAU2C,CAAQ,EACnC,GAAI,CAAC/B,EACD,MAAM,IAAI,MAAM,0BAA0B,EAG9C,MAAO,CAAC,OAAQX,EAAQ,KAAMW,CAAI,CACtC,CAEA,SAASC,GAAkBd,EAAyC,CAtMpE,IAAAG,EAuMI,MAAI,IAAAA,EAAAH,GAAA,YAAAA,EAAQ,WAAR,MAAAG,EAAkB,WAAW,QAIrC,CAEO,SAAS0C,GAAW7C,EAA+BC,EAAuB,CAC7E,IAAM6C,EAAYlC,GAAWX,CAAG,EAChC,OAAIa,GAAkBd,CAAM,EAEjB,GAAGA,GAAA,YAAAA,EAAQ,YAAY8C,EAAU,SAAWA,EAAU,KAE1D,WAAa/C,GAAYC,EAAQC,EAAK6C,EAAU,MAAM,EAAIA,EAAU,IAC/E,CCnMO,IAAMC,EAMT,CACA,OAAQ,IAAI,IACZ,eAAgB,IAAI,IACpB,cAAe,IAAI,IACnB,gBAAiB,KAEjB,YAAYC,EAAmBC,EAAuC,CAClE,GAAI,CACA,IAAMC,EAASH,EAAgB,eAAe,IAAIE,CAAM,EAClD,CAACE,EAAGC,EAAGC,CAAC,EAAIC,EACdN,EACA,oCACA,CAAC,SAAU,QAAQ,EACnB,CAACC,GAAQC,GAAA,YAAAA,EAAQ,aAAc,CAAC,CACpC,EACA,GAAIC,IAAM,EACN,OAAO,KACJ,GAAIE,IAAM,EAEb,OAAOH,EAEX,IAAMK,EAAUC,EAAWR,EAAKI,EAAGC,CAAC,EACpCI,EAAoBT,CAAG,EACvB,IAAMU,EAAO,KAAK,MAAMH,CAAO,EAC/B,GAAIG,GAAQ,KACR,OAAO,KAEX,IAAMC,EAAO,CAAE,GAAGD,EAAM,KAAM,IAAK,EACnC,OAAAX,EAAgB,eAAe,IAAIE,EAAQU,CAAI,EACxCA,CACX,OAAS,EAAP,CACE,OAAO,IACX,CACJ,EAEA,kBAAkBX,EAAgD,CA1DtE,IAAAY,EA2DQ,GAAI,CACA,GAAM,CAACT,EAAGC,EAAGC,CAAC,EAAIC,EACdN,EACA,kCACA,CAAC,QAAQ,EACT,GAACY,EAAAb,EAAgB,kBAAhB,YAAAa,EAAiC,aAAc,CAAC,CACrD,EACA,GAAIT,IAAM,EACN,OAAO,KACJ,GAAIE,IAAM,EAEb,OAAON,EAAgB,gBAE3B,IAAMQ,EAAUC,EAAWR,EAAKI,EAAGC,CAAC,EACpCI,EAAoBT,CAAG,EACvB,IAAMU,EAAO,KAAK,MAAMH,CAAO,EAC/B,OAAIG,GAAQ,KACD,MAEXX,EAAgB,gBAAkB,CAAE,GAAGW,EAAM,KAAM,IAAK,EAEjDX,EAAgB,gBAC3B,OAAS,EAAP,CACE,OAAO,IACX,CACJ,EAEA,oBAAqB,CAACc,EAAoBC,IAA6B,CACnE,OAAQA,EAAS,CACb,IAAK,GACD,OAAO,OAAO,cAAkB,IACpC,QACI,eAAQ,KAAK,6BAA6BA,GAAS,EAC5C,EACf,CACJ,EAEA,uBAAuBd,EAA2B,CAC9C,QACJ,EAEA,SAAU,CAACA,EAAmBC,EAAgBc,IAA6B,CApG/E,IAAAH,EAqGQ,GAAI,CACAb,EAAgB,eAAe,OAAOE,CAAM,EAC5C,IAAMU,EAAOZ,EAAgB,YAAYC,EAAKC,CAAM,EACpD,OAAQU,GAAA,YAAAA,EAAM,aAAc,CACxB,OACA,OAA4B,CACxB,GAAII,EAAQ,GAA6BA,EAAQ,EAC7C,MAAM,IAAI,MACN,gBAAgBJ,EAAK,sEACzB,EACG,GAAII,EAAQ,GACf,MAAM,IAAI,MACN,gBAAgBJ,EAAK,8DACzB,EACG,GAAII,EAAQ,EAA4B,CAE3C,IAAMC,EAAM,IAAI,eAUhB,GATIL,EAAK,cAAgB,GACrBK,EAAI,KAAK,OAAQC,GAAWN,EAAK,SAAUA,EAAK,OAAQ,EAAG,EAAK,EAChEO,GAAaF,EAAKL,EAAK,SAAUA,EAAK,QAAU,MAAM,GAEtDK,EAAI,KAAK,OAAQL,EAAK,QAAU,EAAK,EAEzCK,EAAI,KAAK,IAAI,EAGTA,EAAI,QAAU,KAAOA,EAAI,QAAU,IACnC,MAAM,IAAI,MACN,gBAAgBL,EAAK,0DAA0DK,EAAI,SACvF,EACG,GACHA,EAAI,QAAU,KACd,EAAED,EAAQ,GAAoCA,EAAQ,IAEtD,MAAM,IAAI,MACN,gBAAgBJ,EAAK,uHACzB,EAGJ,IAAMQ,EAAOnB,EAAI,QAAQ,CAAC,EACpBoB,EAAM,IAAI,WAChBpB,EAAI,OAAO,IAAIoB,EAAKD,CAAI,EACxB,IAAME,EAASrB,EAAI,QAAQ,EAAI,CAAC,EAChC,OAAAA,EAAI,SAASqB,GAAU,GAAK,GAAK,EACjCrB,EAAI,SAASqB,GAAU,GAAK,GAAKF,EAC1BE,CACX,SAAWN,GAAS,EAChB,MAAM,IAAI,MAAM,gBAAgBJ,EAAK,4CAA4CI,GAAO,EAI5F,IAAIO,EAAgB,KAChBC,EAAoB,KACxB,GAAI,CAGA,IAAMP,EAAM,IAAI,eAYhB,GAXIL,EAAK,cAAgB,GACrBK,EAAI,KAAK,OAAQC,GAAWN,EAAK,SAAUA,EAAK,OAAQ,EAAG,EAAK,EAChEO,GAAaF,EAAKL,EAAK,SAAUA,EAAK,QAAU,MAAM,GAEtDK,EAAI,KAAK,OAAQL,EAAK,QAAU,EAAK,EAEzCK,EAAI,iBAAiB,QAAS,UAAU,EACxCA,EAAI,KAAK,IAAI,EAGbM,EAAgBN,EAAI,kBAAkB,gBAAgB,EAClDM,IAAkB,MAAQN,EAAI,QAAU,IAAK,CAC7C,IAAMK,EAASrB,EAAI,QAAQ,EAAK,EAChC,OAAAA,EAAI,SAASqB,GAAU,GAAK,GAAK,CAACC,EAClCtB,EAAI,SAASqB,GAAU,GAAK,GAAK,EAC1BA,CACX,CACJ,OAASG,EAAP,CACED,EAAQC,EACR,QAAQ,KAAK,0CAA0CA,GAAG,CAC9D,CAGA,GAAIb,EAAK,mBAAoB,CACzB,GAAKW,IAAkB,MAAU,CAACA,EAAgB,EAAI,CAKlD,IAAMN,EAAM,IAAI,eACZL,EAAK,cAAgB,GACrBK,EAAI,KAAK,MAAOC,GAAWN,EAAK,SAAUA,EAAK,OAAQ,EAAG,EAAK,EAC/DO,GAAaF,EAAKL,EAAK,SAAUA,EAAK,QAAU,KAAK,GAErDK,EAAI,KAAK,MAAOL,EAAK,QAAU,EAAK,EAExCK,EAAI,iBAAiB,QAAS,WAAW,EACzCA,EAAI,KAAK,IAAI,EACb,IAAMS,EAAiBT,EAAI,kBAAkB,gBAAgB,EAE7D,GAAIA,EAAI,QAAU,KAAOS,IAAmB,MAAQ,CAACA,GAAkB,EAAG,CACtE,IAAMJ,EAASrB,EAAI,QAAQ,EAAK,EAChC,OAAAA,EAAI,SAASqB,GAAU,GAAK,GAAK,CAACC,EAClCtB,EAAI,SAASqB,GAAU,GAAK,GAAK,EAC1BA,CACX,CACA,GAAIL,EAAI,QAAU,KAAOS,IAAmB,MAAQ,CAACA,GAAkB,CAACH,EAAe,CACnF,QAAQ,KAAK,oCAAoCX,EAAK,SAAS,EAC/D,IAAMQ,EAAOnB,EAAI,QAAQgB,EAAI,SAAS,UAAU,EAC1CI,EAAM,IAAI,WAAWJ,EAAI,SAAU,EAAGA,EAAI,SAAS,UAAU,EACnEhB,EAAI,OAAO,IAAIoB,EAAKD,CAAI,EACxB,IAAME,EAASrB,EAAI,QAAQ,EAAI,CAAC,EAChC,OAAAA,EAAI,SAASqB,GAAU,GAAK,GAAKL,EAAI,SAAS,WAC9ChB,EAAI,SAASqB,GAAU,GAAK,GAAKF,EAC1BE,CACX,CACJ,CACA,QAAQ,KAAK,uCAAuCV,EAAK,SAAS,EAElE,IAAMK,EAAM,IAAI,eAWhB,GAVIL,EAAK,cAAgB,GACrBK,EAAI,KAAK,MAAOC,GAAWN,EAAK,SAAUA,EAAK,OAAQ,EAAG,EAAK,EAC/DO,GAAaF,EAAKL,EAAK,SAAUA,EAAK,QAAU,KAAK,GAErDK,EAAI,KAAK,MAAOL,EAAK,QAAU,EAAK,EAExCK,EAAI,aAAe,cACnBA,EAAI,KAAK,IAAI,EAGTA,EAAI,QAAU,IAAK,CACnB,IAAMG,EAAOnB,EAAI,QAAQgB,EAAI,SAAS,UAAU,EAC1CI,EAAM,IAAI,WAAWJ,EAAI,SAAU,EAAGA,EAAI,SAAS,UAAU,EACnEhB,EAAI,OAAO,IAAIoB,EAAKD,CAAI,EACxB,IAAME,EAASrB,EAAI,QAAQ,EAAI,CAAC,EAChC,OAAAA,EAAI,SAASqB,GAAU,GAAK,GAAKL,EAAI,SAAS,WAC9ChB,EAAI,SAASqB,GAAU,GAAK,GAAKF,EAC1BE,CACX,CACJ,CAGA,GAAIE,GAAS,KACT,MAAM,IAAI,MAAM,gBAAgBZ,EAAK,+BAA+BY,GAAO,EAE/E,MAAO,EACX,CAEA,OAA4C,CACxC,IAAMG,GAASd,EAAAb,EAAgB,SAAhB,YAAAa,EAAwB,IAAID,EAAK,UAChD,GAAIe,EAAQ,CACR,IAAML,EAASrB,EAAI,QAAQ,EAAK,EAChC,OAAAA,EAAI,SAASqB,GAAU,GAAK,GAAKK,EAAO,KACxC1B,EAAI,SAASqB,GAAU,GAAK,GAAK,EAC1BA,CACX,CAGA,QAAQ,KAAK,2BAA2BV,EAAK,UAAU,EACvD,IAAMU,EAASrB,EAAI,QAAQ,EAAI,CAAC,EAC1B2B,EAAS3B,EAAI,QAAQ,CAAC,EAC5B,OAAAA,EAAI,SAASqB,GAAU,GAAK,GAAK,EACjCrB,EAAI,SAASqB,GAAU,GAAK,GAAKM,EAC1BN,CACX,CACJ,CACJ,OAASG,EAAP,CAEE,QAAQ,MAAMA,EAAE,SAAS,CAAC,EAC1BI,GAAS5B,EAAKwB,EAAE,SAAS,CAAC,CAC9B,CACA,MAAO,EACX,EACA,KAAM,CAACxB,EAAmB6B,EAAiBC,IAAoB,CA/QnE,IAAAlB,EAgRQ,GAAI,CACA,IAAMmB,EAAOvB,EAAWR,EAAK6B,EAASC,CAAO,EAG7C,GAAIC,EAAK,WAAW,MAAM,GAAKA,EAAK,WAAW,OAAO,EAAG,CAErD,IAAMf,EAAM,IAAI,eAChB,GAAIe,EAAK,WAAW,OAAO,EAAG,CAC1B,IAAMC,EAAajC,EAAgB,kBAAkBC,CAAG,EACxDgB,EAAI,KAAK,OAAQC,GAAWe,GAAA,YAAAA,EAAY,SAAUD,CAAI,EAAG,EAAK,EAC9Db,GAAaF,EAAKgB,GAAA,YAAAA,EAAY,SAAUD,EAAM,MAAM,CACxD,MACIf,EAAI,KAAK,OAAQe,EAAO,EAAK,EAGjC,GADAf,EAAI,KAAK,IAAI,EACTA,EAAI,QAAU,KAAOA,EAAI,SAAW,IAAK,CAIzC,GAAI,GAACJ,EAAAb,EAAgB,kBAAkBC,CAAG,IAArC,MAAAY,EAAwC,oBAAoB,CAC7DgB,GAAS5B,EAAK,wBAAwB+B,sCAAyC,EAC/E,MACJ,CACA,IAAME,EAAO,IAAI,eACjB,GAAIF,EAAK,WAAW,OAAO,EAAG,CAC1B,IAAMC,EAAajC,EAAgB,kBAAkBC,CAAG,EACxDiC,EAAK,KAAK,MAAOhB,GAAWe,GAAA,YAAAA,EAAY,SAAUD,CAAI,EAAG,EAAK,EAC9Db,GAAae,EAAMD,GAAA,YAAAA,EAAY,SAAUD,EAAM,MAAM,CACzD,MACIE,EAAK,KAAK,MAAOF,EAAO,EAAK,EAIjC,GAFAE,EAAK,iBAAiB,QAAS,WAAW,EAC1CA,EAAK,KAAK,IAAI,EACVA,EAAK,QAAU,KAAOA,EAAK,SAAW,IAAK,CAC3CL,GAAS5B,EAAK,iCAAiC+B,GAAM,EACrD,MACJ,CACA,IAAMT,EAAgBW,EAAK,kBAAkB,gBAAgB,EACzDX,GAAkB,CAACA,EAAgB,GACnC,QAAQ,KAAK,qBAAqBS,wCAA2CE,EAAK,WAAWA,EAAK,aAAa,CAEvH,CACAjC,EAAI,MAAM,8BAA+B,KAAM,CAAC,QAAQ,EAAG,CAAC+B,CAAI,CAAC,CACrE,CACJ,OAASP,EAAP,CACE,OAAAI,GAAS5B,EAAKwB,EAAE,SAAS,CAAC,EACnB,CACX,CACJ,EACA,UAAW,CAACxB,EAAmB6B,EAAiBC,IAA6B,CACzE,GAAI,CACA,IAAMC,EAAOvB,EAAWR,EAAK6B,EAASC,CAAO,EAG7C,GAAIC,EAAK,WAAW,MAAM,GAAKA,EAAK,WAAW,OAAO,EAAG,CAErD,IAAMf,EAAM,IAAI,eAChB,GAAIe,EAAK,WAAW,OAAO,EAAG,CAC1B,IAAMC,EAAajC,EAAgB,kBAAkBC,CAAG,EACxDgB,EAAI,KAAK,OAAQC,GAAWe,GAAA,YAAAA,EAAY,SAAUD,CAAI,EAAG,EAAK,EAC9Db,GAAaF,EAAKgB,GAAA,YAAAA,EAAY,SAAUD,EAAM,MAAM,CACxD,MACIf,EAAI,KAAK,OAAQe,EAAO,EAAK,EAEjC,OAAAf,EAAI,KAAK,IAAI,EACNA,EAAI,QAAU,KAAOA,EAAI,QAAU,GAC9C,CACJ,OAASQ,EAAP,CACE,MAAO,EACX,CACA,MAAO,EACX,EACA,SAAU,CAACX,EAAoBqB,IAAoB,CAAC,EACpD,UAAW,CAAClC,EAAmBC,IAAmB,CAzVtD,IAAAW,EA0VQ,IAAMD,EAAOZ,EAAgB,YAAYC,EAAKC,CAAM,EAEpD,OADAF,EAAgB,eAAe,OAAOE,CAAM,EACpCU,GAAA,YAAAA,EAAM,aAAc,CACxB,OACA,OACA,OACI,MACJ,OACA,OAEI,OACJ,OAA0C,CACtC,IAAMe,GAASd,EAAAb,EAAgB,SAAhB,YAAAa,EAAwB,IAAID,EAAK,UAChD,GAAI,CAACe,EACD,MAAM,IAAI,MAAM,+CAA+Cf,EAAK,UAAU,EAElF,OAAOe,EAAO,MAAM,CACxB,CACJ,CACJ,EACA,aAAc,CAAC1B,EAAmBC,EAAgBkC,IAAoB,CA9W1E,IAAAvB,EA+WQ,IAAMD,EAAOZ,EAAgB,YAAYC,EAAKC,CAAM,EACpD,OAAQU,GAAA,YAAAA,EAAM,aAAc,CACxB,OACIiB,GAAS5B,EAAK,6BAA6B,EAC3C,OACJ,OACI4B,GAAS5B,EAAK,4BAA4B,EAC1C,OACJ,OACA,OACA,OACI4B,GAAS5B,EAAK,8BAA8B,EAC5C,OACJ,OAA0C,CACtC,IAAM0B,GAASd,EAAAb,EAAgB,SAAhB,YAAAa,EAAwB,IAAID,EAAK,UAChD,GAAI,CAACe,EACD,MAAM,IAAI,MAAM,+CAA+Cf,EAAK,UAAU,EAElF,OAAOe,EAAO,SAASS,CAAO,CAClC,CACJ,CACA,MAAO,EACX,EACA,SAASnC,EAAmBC,EAAgBmC,EAAaC,EAAeC,EAAkB,CAtY9F,IAAA1B,EAAA2B,EAuYQ,GAAIF,GAAS,EAET,MAAO,GAEX,GAAI,CACA,IAAM1B,EAAOZ,EAAgB,YAAYC,EAAKC,CAAM,EACpD,OAAQU,GAAA,YAAAA,EAAM,aAAc,CAGxB,OACA,OAA4B,CACxB,GAAI,CAACA,EAAK,QACN,MAAM,IAAI,MAAM,6BAA6BV,GAAQ,EAEzD,GAAI,CACA,IAAMe,EAAM,IAAI,eAUhB,GATIL,EAAK,cAAgB,GACrBK,EAAI,KAAK,MAAOC,GAAWN,GAAA,YAAAA,EAAM,SAAUA,EAAK,OAAQ,EAAG,EAAK,EAChEO,GAAaF,EAAKL,GAAA,YAAAA,EAAM,SAAUA,EAAK,QAAU,KAAK,GAEtDK,EAAI,KAAK,MAAOL,EAAK,QAAU,EAAK,EAExCK,EAAI,aAAe,cACnBA,EAAI,iBAAiB,QAAS,SAASsB,KAAYA,EAAWD,EAAQ,GAAG,EACzErB,EAAI,KAAK,IAAI,EAETA,EAAI,QAAU,KACbA,EAAI,QAAU,KAAOqB,GAASrB,EAAI,SAAS,YAAcsB,GAAY,EACxE,CACE,IAAMlB,EAAM,IAAI,WAAWJ,EAAI,SAAU,EAAG,KAAK,IAAIA,EAAI,SAAS,WAAYqB,CAAK,CAAC,EACpF,OAAArC,EAAI,OAAO,IAAIoB,EAAKgB,CAAG,EAChBhB,EAAI,UACf,SAAWJ,EAAI,QAAU,IAAK,CAG1B,QAAQ,KAAK,qBAAqBL,EAAK,8CAA8CK,EAAI,WAAWA,EAAI,aAAa,EACrH,IAAMI,EAAM,IAAI,WAAWJ,EAAI,SAAUsB,EAAU,KAAK,IAAItB,EAAI,SAAS,WAAWsB,EAAUD,CAAK,CAAC,EACpG,OAAArC,EAAI,OAAO,IAAIoB,EAAKgB,CAAG,EAChBhB,EAAI,UACf,KACI,OAAM,IAAI,MACN,qBAAqBT,EAAK,4CAA4CK,EAAI,WAAWA,EAAI,aAC7F,CAER,OAASQ,EAAP,CACE,MAAM,IAAI,MAAM,qBAAqBb,EAAK,8BAA8Ba,IAAI,CAChF,CACJ,CACA,OAA4C,CACxC,IAAME,GAASd,EAAAb,EAAgB,SAAhB,YAAAa,EAAwB,IAAID,EAAK,UAChD,GAAI,CAACe,EACD,MAAM,IAAI,MAAM,uCAAuCf,EAAK,UAAU,EAE1E,IAAM6B,EAASd,EAAQ,MAAMY,EAAUA,EAAWD,CAAK,EACjDlB,EAAO,IAAI,WAAW,IAAI,eAAe,EAAE,kBAAkBqB,CAAM,CAAC,EAC1E,OAAAxC,EAAI,OAAO,IAAImB,EAAMiB,CAAG,EACjBjB,EAAK,UAChB,CACA,OAA0C,CACtC,IAAMO,GAASa,EAAAxC,EAAgB,SAAhB,YAAAwC,EAAwB,IAAI5B,EAAK,UAChD,GAAI,CAACe,EACD,MAAM,IAAI,MAAM,+CAA+Cf,EAAK,UAAU,EAElF,IAAM8B,EAAMzC,EAAI,OAAO,SAASoC,EAAKA,EAAMC,CAAK,EAChD,OAAOX,EAAO,KAAKe,EAAK,CAAE,GAAIH,CAAS,CAAC,CAC5C,CACJ,CACA,MAAO,EACX,OAASd,EAAP,CACE,OAAAI,GAAS5B,EAAKwB,EAAE,SAAS,CAAC,EACnB,CACX,CACJ,EACA,UAAW,CAACxB,EAAmBC,EAAgBmC,EAAaC,EAAeC,IAAqB,CAhdpG,IAAA1B,EAidQ,IAAMD,EAAOZ,EAAgB,YAAYC,EAAKC,CAAM,EACpD,OAAQU,GAAA,YAAAA,EAAM,aAAc,CACxB,OACI,OAAAiB,GAAS5B,EAAK,2BAA2B,EAClC,EACX,OAA4B,CACxB,IAAM2B,EAAS3B,EAAI,OAAO,SAASoC,EAAKA,EAAMC,CAAK,EAC7CrB,EAAM,IAAI,eAChB,OAAAA,EAAI,KAAK,MAAOC,GAAWN,GAAA,YAAAA,EAAM,SAAUA,EAAK,OAAQ,EAAG,EAAK,EAChEO,GAAaF,EAAKL,GAAA,YAAAA,EAAM,SAAUA,EAAK,QAAU,MAAO,GAAIgB,CAAM,EAClEX,EAAI,KAAKW,CAAM,EACRU,CACX,CACA,OACI,OAAAT,GAAS5B,EAAK,8CAA8C,EACrD,EACX,OAA0C,CACtC,IAAM0B,GAASd,EAAAb,EAAgB,SAAhB,YAAAa,EAAwB,IAAID,EAAK,UAChD,GAAI,CAACe,EACD,MAAM,IAAI,MAAM,+CAA+Cf,EAAK,UAAU,EAElF,IAAM+B,EAAQ1C,EAAI,OAAO,SAASoC,EAAKA,EAAMC,CAAK,EAClD,OAAOX,EAAO,MAAMgB,EAAO,CAAE,GAAIJ,CAAS,CAAC,CAC/C,CACJ,CACA,MAAO,EACX,EACA,4BAA6B,CAACtC,EAAmBC,IAAmB,CA5exE,IAAAW,EA6eQ,IAAMD,EAAOZ,EAAgB,YAAYC,EAAKC,CAAM,EACpD,OAAQU,GAAA,YAAAA,EAAM,aAAc,CACxB,OAA4C,CAExC,GAAI,GADWC,EAAAb,EAAgB,SAAhB,YAAAa,EAAwB,IAAID,EAAK,WAE5C,MAAM,MAAM,iCAAiCA,EAAK,UAAU,EAEhE,MAAO,EACX,CAEA,OACA,OACI,OAAO,IAAI,KAAK,EAAE,QAAQ,CAClC,CACA,MAAO,EACX,EACA,eAAgB,CAACX,EAAmB6B,EAAiBC,IAAoB,CACrE,IAAMC,EAAOvB,EAAWR,EAAK6B,EAASC,CAAO,EAC7C,eAAQ,IAAI,mBAAmBC,GAAM,EAC9B,EACX,EACA,gBAAiB,CAAC/B,EAAmB6B,EAAiBC,IAAoB,CACtE,IAAMC,EAAOvB,EAAWR,EAAK6B,EAASC,CAAO,EAC7C,QAAQ,IAAI,oBAAoBC,GAAM,CAC1C,EACA,gBAAiB,CAAC/B,EAAmB6B,EAAiBC,IAAoB,CACtE,IAAMC,EAAOvB,EAAWR,EAAK6B,EAASC,CAAO,EAC7C,QAAQ,IAAI,oBAAoBC,GAAM,CAC1C,EACA,qBAAsB,CAAC/B,EAAmB6B,EAAiBC,IAAoB,CAC3E,IAAMC,EAAOvB,EAAWR,EAAK6B,EAASC,CAAO,EAC7C,eAAQ,IAAI,yBAAyBC,GAAM,EACpC,EACX,EACA,SAAU,CAAC/B,EAAmB2C,EAAiBC,EAAiBC,EAAeC,IAAkB,CA/gBrG,IAAAlC,EAAA2B,EAghBQ,IAAMQ,EAAOvC,EAAWR,EAAK2C,EAASC,CAAO,EACvCI,EAAKxC,EAAWR,EAAK6C,EAAOC,CAAK,EACjCpB,GAASd,EAAAb,EAAgB,SAAhB,YAAAa,EAAwB,IAAImC,GACvCrB,IAAW,SACX3B,EAAgB,OAAQ,OAAO2B,CAAM,EACrC3B,EAAgB,OAAQ,IAAIiD,EAAItB,CAAM,GAE1C,OAAW,CAACuB,EAAKC,CAAK,KAAKX,EAAAxC,EAAgB,iBAAhB,YAAAwC,EAAgC,YAAa,CAAC,EACrE,GAAIW,EAAM,SAAWH,EAAM,CACvBhD,EAAgB,eAAe,OAAOkD,CAAG,EACzC,KACJ,CAEJ,MAAO,EACX,EACA,WAAY,CAACpC,EAAoBsC,EAAkBC,IAAqB,CAAC,EACzE,cAAe,CACXpD,EACAqD,EACAC,EACAC,EACAC,EACAC,EACAC,IACO,CACHC,GAAc5D,EAAiBC,EAAKqD,EAAUC,EAAQC,EAASC,EAAUC,EAASC,CAAQ,CAClG,CACJ,EC1iBA,IAAIE,IAAU,IAAM,CAClB,IAAIC,EAAa,YAAY,IAE7B,OACF,eAAeD,EAAS,CAAC,EAAI,CAE7B,IAAIE,EAAO,OAAOF,EAAQ,IAAYA,EAAO,CAAC,EAAMG,EAAoBC,EAAmBF,EAAO,MAAS,IAAI,QAAQ,CAACG,EAAQC,IAAS,CAACH,EAAoBE,EAAQD,EAAmBE,CAAM,CAAC,EAAE,IAAIC,EAAgB,OAAO,OAAO,CAAC,EAAEL,CAAM,EAAMM,EAAW,CAAC,EAAMC,EAAY,iBAAqBC,EAAM,CAACC,EAAOC,IAAU,CAAC,MAAMA,CAAO,EAAMC,EAAmB,OAAO,QAAQ,SAAaC,EAAsB,OAAO,eAAe,WAAeC,EAAoB,OAAO,SAAS,UAAU,OAAO,QAAQ,UAAU,UAAU,OAAO,QAAQ,SAAS,MAAM,SAAaC,EAAgB,GAAG,SAASC,EAAWC,EAAK,CAAC,OAAGhB,EAAO,WAAsBA,EAAO,WAAcgB,EAAKF,CAAe,EAASA,EAAgBE,CAAI,CAAC,IAAIC,GAAMC,GAAUC,GAAWC,GAAe,GAAGP,EAAoB,CAAC,GAAK,CAAC,cAAcQ,CAAa,EAAE,KAAM,kCAAO,YAAU,IAAIC,GAAQD,EAAc,YAAY,GAAG,EAAME,GAAGD,GAAQ,IAAI,EAAME,GAASF,GAAQ,MAAM,EAAKV,EAAuBE,EAAgBU,GAAS,QAAQV,CAAe,EAAE,IAASA,EAAgBQ,GAAQ,KAAK,EAAE,cAAc,IAAI,IAAI,KAAK,YAAY,GAAG,CAAC,EAAEL,GAAM,CAACQ,EAASC,KAAUD,EAASE,GAAUF,CAAQ,EAAE,IAAI,IAAIA,CAAQ,EAAED,GAAS,UAAUC,CAAQ,EAASF,GAAG,aAAaE,EAASC,EAAO,OAAU,MAAM,GAAGP,GAAWM,GAAU,CAAC,IAAIG,EAAIX,GAAMQ,EAAS,EAAI,EAAE,OAAIG,EAAI,SAAQA,EAAI,IAAI,WAAWA,CAAG,GAASA,CAAG,EAAEV,GAAU,CAACO,EAASI,EAAOC,EAAQJ,EAAO,KAAO,CAACD,EAASE,GAAUF,CAAQ,EAAE,IAAI,IAAIA,CAAQ,EAAED,GAAS,UAAUC,CAAQ,EAAEF,GAAG,SAASE,EAASC,EAAO,OAAU,OAAO,CAACK,EAAIC,IAAO,CAAID,EAAID,EAAQC,CAAG,EAAOF,EAAOH,EAAOM,EAAK,OAAOA,CAAI,CAAC,CAAC,CAAC,EAAK,CAAChC,EAAO,aAAgB,QAAQ,KAAK,OAAO,IAAGO,EAAY,QAAQ,KAAK,GAAG,QAAQ,MAAM,GAAG,GAAED,EAAW,QAAQ,KAAK,MAAM,CAAC,EAAEE,EAAM,CAACC,EAAOC,IAAU,CAAC,cAAQ,SAASD,EAAaC,CAAO,EAAEV,EAAO,QAAW,IAAI,4BAA4B,MAASW,GAAoBC,KAA0BA,EAAuBE,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOf,IAAYe,EAAgBf,GAAce,EAAgB,QAAQ,OAAO,IAAI,EAAGA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAOA,EAAgB,GAAIG,GAAMgB,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAASA,EAAI,YAAY,EAAKtB,IAAuBO,GAAWc,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEhB,GAAU,CAACe,EAAIJ,EAAOC,IAAU,CAAC,IAAII,EAAI,IAAI,eAAeA,EAAI,KAAK,MAAMD,EAAI,EAAI,EAAEC,EAAI,aAAa,cAAcA,EAAI,OAAO,IAAI,CAAC,GAAGA,EAAI,QAAQ,KAAKA,EAAI,QAAQ,GAAGA,EAAI,SAAS,CAACL,EAAOK,EAAI,QAAQ,EAAE,MAAM,CAACJ,EAAQ,CAAC,EAAEI,EAAI,QAAQJ,EAAQI,EAAI,KAAK,IAAI,CAAC,EAAEd,GAAee,GAAO,SAAS,MAAMA,GAAY,IAAIC,GAAIpC,EAAO,OAAU,QAAQ,IAAI,KAAK,OAAO,EAAM+B,EAAI/B,EAAO,UAAa,QAAQ,MAAM,KAAK,OAAO,EAAE,OAAO,OAAOA,EAAOK,CAAe,EAAEA,EAAgB,KAAQL,EAAO,YAAaM,EAAWN,EAAO,WAAgBA,EAAO,cAAeO,EAAYP,EAAO,aAAkBA,EAAO,OAAQQ,EAAMR,EAAO,MAAQ,IAAIqC,GAAcrC,EAAO,aAAcqC,GAAWrC,EAAO,YAAc,IAAIsC,GAActC,EAAO,eAAkB,GAAQ,OAAO,aAAa,UAAUuC,EAAM,iCAAiC,EAAE,IAAIC,EAAeC,GAAM,GAAUC,GAAW,SAASC,GAAOC,EAAUC,EAAK,CAAKD,GAAWL,EAAMM,CAAI,CAAE,CAAC,IAAIC,EAAMC,EAAOC,EAAOC,GAAQC,EAAOC,EAAQC,GAAQC,GAAQ,SAASC,IAAmB,CAAC,IAAIC,EAAEf,EAAW,OAAOxC,EAAO,MAAS8C,EAAM,IAAI,UAAUS,CAAC,EAAEvD,EAAO,OAAUgD,EAAO,IAAI,WAAWO,CAAC,EAAEvD,EAAO,OAAUkD,EAAO,IAAI,WAAWK,CAAC,EAAEvD,EAAO,OAAU+C,EAAO,IAAI,WAAWQ,CAAC,EAAEvD,EAAO,QAAWiD,GAAQ,IAAI,YAAYM,CAAC,EAAEvD,EAAO,QAAWmD,EAAQ,IAAI,YAAYI,CAAC,EAAEvD,EAAO,QAAWoD,GAAQ,IAAI,aAAaG,CAAC,EAAEvD,EAAO,QAAWqD,GAAQ,IAAI,aAAaE,CAAC,CAAC,CAAC,IAAIC,GAAcC,GAAa,CAAC,EAAMC,GAAW,CAAC,EAAMC,GAAW,CAAC,EAAMC,GAAc,CAAC,EAAMC,GAAmB,GAAUC,GAAwB,EAAE,SAASC,IAAkB,CAAC,OAAOzB,IAAewB,GAAwB,CAAC,CAAC,SAASE,IAAQ,CAAC,GAAGhE,EAAO,OAAsF,IAAxE,OAAOA,EAAO,QAAW,aAAWA,EAAO,OAAU,CAACA,EAAO,MAAS,GAAQA,EAAO,OAAU,QAAQiE,GAAYjE,EAAO,OAAU,MAAM,CAAC,EAAGkE,GAAqBT,EAAY,CAAC,CAAC,SAASU,IAAa,CAACN,GAAmB,GAAKK,GAAqBR,EAAU,CAAC,CAAC,SAASU,IAAS,CAACF,GAAqBP,EAAU,CAAC,CAAC,SAASU,IAAS,CAAC,GAAGrE,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,QAAQsE,GAAatE,EAAO,QAAW,MAAM,CAAC,EAAGkE,GAAqBN,EAAa,CAAC,CAAC,SAASK,GAAYM,EAAG,CAACd,GAAa,QAAQc,CAAE,CAAC,CAAC,SAASC,GAAUD,EAAG,CAACb,GAAW,QAAQa,CAAE,CAAC,CAAC,SAASD,GAAaC,EAAG,CAACX,GAAc,QAAQW,CAAE,CAAC,CAAC,IAAIE,GAAgB,EAAMC,GAAqB,KAASC,GAAsB,KAAK,SAASC,GAAiBC,EAAG,CAACJ,KAAqBzE,EAAO,wBAA2BA,EAAO,uBAA0ByE,EAAe,CAAE,CAAC,SAASK,GAAoBD,EAAG,CAA0G,GAAzGJ,KAAqBzE,EAAO,wBAA2BA,EAAO,uBAA0ByE,EAAe,EAAKA,IAAiB,IAAMC,KAAuB,OAAM,cAAcA,EAAoB,EAAEA,GAAqB,MAAQC,IAAsB,CAAC,IAAII,EAASJ,GAAsBA,GAAsB,KAAKI,EAAS,CAAC,CAAE,CAAC,SAASxC,EAAMyC,EAAK,CAAIhF,EAAO,SAAYA,EAAO,QAAWgF,CAAI,EAAEA,EAAK,WAAWA,EAAK,IAAIjD,EAAIiD,CAAI,EAAEvC,GAAM,GAAKC,GAAW,EAAEsC,GAAM,2CAA2C,IAAIC,EAAE,IAAI,YAAY,aAAaD,CAAI,EAAE,MAAA9E,EAAmB+E,CAAC,EAAQA,CAAC,CAAC,IAAIC,GAAc,wCAAwC,SAASC,GAAU1D,EAAS,CAAC,OAAOA,EAAS,WAAWyD,EAAa,CAAC,CAAC,SAASvD,GAAUF,EAAS,CAAC,OAAOA,EAAS,WAAW,SAAS,CAAC,CAAC,IAAI2D,GAAkBpF,EAAO,YAAeoF,GAAe,oBAAwBD,GAAUC,EAAc,IAAGA,GAAerE,EAAWqE,EAAc,IAAQA,GAAe,IAAI,IAAI,oBAAoB,YAAY,GAAG,EAAE,KAAK,SAASC,GAAUC,EAAK,CAAC,GAAG,CAAC,GAAGA,GAAMF,IAAgB/C,GAAY,OAAO,IAAI,WAAWA,EAAU,EAAE,GAAGlB,GAAY,OAAOA,GAAWmE,CAAI,EAAE,KAAK,iDAAiD,OAAOvD,EAAN,CAAWQ,EAAMR,CAAG,CAAC,CAAC,CAAC,SAASwD,GAAiBC,EAAW,CAAC,MAAG,CAACnD,KAAa1B,GAAoBC,IAA2B,OAAO,OAAO,WAAmB,MAAM4E,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKC,GAAU,CAAC,GAAG,CAACA,EAAS,GAAO,KAAK,uCAAuCD,EAAW,IAAI,OAAOC,EAAS,YAAe,CAAC,CAAC,EAAE,MAAM,IAAIJ,GAAUG,CAAU,CAAC,EAAU,QAAQ,QAAQ,EAAE,KAAK,IAAIH,GAAUG,CAAU,CAAC,CAAC,CAAC,SAASE,GAAuBF,EAAWG,EAAQC,EAAS,CAAC,OAAOL,GAAiBC,CAAU,EAAE,KAAK9D,GAAgB,YAAY,YAAYA,EAAOiE,CAAO,CAAE,EAAE,KAAKE,GAAkBA,CAAS,EAAE,KAAKD,EAASE,GAAQ,CAAC/D,EAAI,0CAA0C+D,CAAM,EAAEvD,EAAMuD,CAAM,CAAC,CAAC,CAAC,CAAC,SAASC,GAAiBrE,EAAO8D,EAAWG,EAAQZ,EAAS,CAAC,MAAG,CAACrD,GAAQ,OAAO,YAAY,sBAAsB,YAAY,CAACyD,GAAUK,CAAU,GAAG,CAAC3E,GAAqB,OAAO,OAAO,WAAmB,MAAM2E,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKC,GAAU,CAAC,IAAIO,EAAO,YAAY,qBAAqBP,EAASE,CAAO,EAAE,OAAOK,EAAO,KAAKjB,EAAS,SAASe,EAAO,CAAC,OAAA/D,EAAI,kCAAkC+D,CAAM,EAAE/D,EAAI,2CAA2C,EAAS2D,GAAuBF,EAAWG,EAAQZ,CAAQ,CAAC,CAAC,CAAC,CAAC,EAAcW,GAAuBF,EAAWG,EAAQZ,CAAQ,CAAE,CAAC,SAASkB,IAAY,CAAC,IAAIC,EAAK,CAAC,EAAIC,EAAW,EAAE,SAASC,EAAgBP,EAASQ,EAAO,CAAC,IAAIC,EAAQT,EAAS,QAAQ,OAAA7F,EAAO,IAAOsG,EAAQ9D,EAAWxC,EAAO,IAAO,GAAMsD,GAAkB,EAAEE,GAAUxD,EAAO,IAAO,GAAMwE,GAAUxE,EAAO,IAAO,EAAK,EAAE8E,GAAoB,kBAAkB,EAASwB,CAAO,CAAC1B,GAAiB,kBAAkB,EAAE,SAAS2B,EAA2BP,EAAO,CAACI,EAAgBJ,EAAO,QAAW,CAAC,CAAC,GAAGhG,EAAO,gBAAoB,GAAG,CAAC,OAAOA,EAAO,gBAAmBkG,EAAKE,CAAe,CAAC,OAAOnB,EAAN,CAASlD,EAAI,sDAAsDkD,CAAC,EAAE/E,EAAmB+E,CAAC,CAAC,CAAE,OAAAc,GAAiB1D,GAAW+C,GAAec,EAAKK,CAA0B,EAAE,MAAMrG,CAAkB,EAAQ,CAAC,CAAC,CAAC,IAAIsG,EAAeC,GAAQ,SAASC,GAAWjG,EAAO,CAAC,KAAK,KAAK,aAAa,KAAK,QAAQ,gCAAgCA,KAAU,KAAK,OAAOA,CAAM,CAAC,SAASyD,GAAqByC,EAAU,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAM,EAAE3G,CAAM,CAAE,CAAC,SAAS4G,IAAgB,CAAC7E,EAAI,iCAAiC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASsE,IAAmB,CAAC9E,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASuE,IAAY,CAAC/E,EAAI,6BAA6B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASwE,IAAkB,CAAChF,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASyE,IAAmB,CAACjF,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS0E,IAAiB,CAAClF,EAAI,kCAAkC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS2E,IAAmB,CAACnF,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS4E,IAA8B,CAACpF,EAAI,+CAA+C,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS6E,IAAwB,CAACrF,EAAI,yCAAyC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS8E,IAAkB,CAACtF,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS+E,IAAiB,CAACvF,EAAI,kCAAkC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASgF,GAAcC,EAAO,CAAC,KAAK,OAAOA,EAAO,KAAK,IAAIA,EAAO,GAAG,KAAK,SAAS,SAASC,EAAK,CAACtE,EAAQ,KAAK,IAAI,IAAI,GAAGsE,CAAI,EAAE,KAAK,SAAS,UAAU,CAAC,OAAOtE,EAAQ,KAAK,IAAI,IAAI,EAAE,EAAE,KAAK,eAAe,SAASuE,EAAW,CAACvE,EAAQ,KAAK,IAAI,IAAI,GAAGuE,CAAU,EAAE,KAAK,eAAe,UAAU,CAAC,OAAOvE,EAAQ,KAAK,IAAI,IAAI,EAAE,EAAE,KAAK,WAAW,SAASwE,EAAO,CAACA,EAAOA,EAAO,EAAE,EAAE7E,EAAM,KAAK,IAAI,KAAK,GAAG6E,CAAM,EAAE,KAAK,WAAW,UAAU,CAAC,OAAO7E,EAAM,KAAK,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,aAAa,SAAS8E,EAAS,CAACA,EAASA,EAAS,EAAE,EAAE9E,EAAM,KAAK,IAAI,KAAK,GAAG8E,CAAQ,EAAE,KAAK,aAAa,UAAU,CAAC,OAAO9E,EAAM,KAAK,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,SAAS2E,EAAKC,EAAW,CAAC,KAAK,iBAAiB,CAAC,EAAE,KAAK,SAASD,CAAI,EAAE,KAAK,eAAeC,CAAU,CAAC,EAAE,KAAK,iBAAiB,SAASG,EAAY,CAAC1E,EAAQ,KAAK,IAAI,KAAK,GAAG0E,CAAW,EAAE,KAAK,iBAAiB,UAAU,CAAC,OAAO1E,EAAQ,KAAK,IAAI,KAAK,EAAE,EAAE,KAAK,kBAAkB,UAAU,CAAC,IAAI2E,EAAUC,GAAuB,KAAK,SAAS,CAAC,EAAE,GAAGD,EAAW,OAAO3E,EAAQ,KAAK,SAAS,GAAG,IAAI6E,EAAS,KAAK,iBAAiB,EAAE,OAAGA,IAAW,EAASA,EAAgB,KAAK,MAAM,CAAC,CAAC,IAAIC,GAAc,EAAMC,GAAuB,EAAE,SAASC,GAAaC,EAAIX,EAAKC,EAAW,CAAC,IAAIxB,EAAK,IAAIqB,GAAca,CAAG,EAAE,MAAAlC,EAAK,KAAKuB,EAAKC,CAAU,EAAEO,GAAcG,EAAIF,KAA+BD,EAAa,CAAC,IAAII,GAAmB,iHAAiH,SAASC,GAASC,EAAOC,EAAOC,EAAG,CAAClG,EAAM8F,EAAkB,CAAC,CAAC,IAAIK,GAAY,OAAO,YAAa,IAAY,IAAI,YAAY,MAAM,EAAE,OAAU,SAASC,GAAkBC,EAAYC,EAAIC,EAAe,CAACD,KAAO,EAA+C,QAAzCE,EAAOF,EAAIC,EAAmBE,EAAOH,EAAUD,EAAYI,IAAS,EAAEA,GAAQD,IAAQ,EAAEC,EAAO,GAAGA,EAAOH,EAAI,IAAID,EAAY,QAAQF,GAAa,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAIG,CAAM,CAAC,EAAa,QAAPC,EAAI,GAASJ,EAAIG,GAAO,CAAC,IAAIE,EAAGN,EAAYC,KAAO,GAAG,EAAEK,EAAG,KAAK,CAACD,GAAK,OAAO,aAAaC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGP,EAAYC,KAAO,GAAG,IAAIK,EAAG,MAAM,IAAI,CAACD,GAAK,OAAO,cAAcC,EAAG,KAAK,EAAEC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGR,EAAYC,KAAO,GAAmG,IAA5FK,EAAG,MAAM,IAAKA,GAAIA,EAAG,KAAK,GAAGC,GAAI,EAAEC,EAAQF,GAAIA,EAAG,IAAI,GAAGC,GAAI,GAAGC,GAAI,EAAER,EAAYC,KAAO,GAAMK,EAAG,MAAOD,GAAK,OAAO,aAAaC,CAAE,MAAM,CAAC,IAAIG,EAAGH,EAAG,MAAMD,GAAK,OAAO,aAAa,MAAMI,GAAI,GAAG,MAAMA,EAAG,IAAI,CAAC,CAAC,CAAC,OAAOJ,CAAG,CAAC,SAASK,GAAalB,EAAIU,EAAe,CAAC,OAAAV,KAAO,EAASA,EAAIO,GAAkB5F,EAAOqF,EAAIU,CAAc,EAAE,EAAE,CAAC,IAAIS,GAAS,CAAC,QAAQ,OAAU,IAAI,UAAU,CAACA,GAAS,SAAS,EAAE,IAAI3H,EAAIsB,EAAOqG,GAAS,QAAQ,IAAI,GAAG,OAAO3H,CAAG,EAAE,OAAO,SAASwG,EAAI,CAAC,IAAIxG,EAAI0H,GAAalB,CAAG,EAAE,OAAOxG,CAAG,CAAC,EAAE,SAAS4H,GAAsBC,EAAKC,EAAQC,EAASC,EAAUC,EAAQ,CAAyrB,QAAprBC,EAAM,EAAMC,EAAWL,EAAQxG,EAAOwG,IAAU,GAAG,EAAEM,EAAYN,EAAQxG,EAAOwG,EAAQ,IAAI,GAAG,EAAMO,EAAYN,EAASzG,EAAOyG,IAAW,GAAG,EAAEO,EAAaP,EAASzG,EAAOyG,EAAS,IAAI,GAAG,EAAMQ,EAAaP,EAAU1G,EAAO0G,IAAY,GAAG,EAAEQ,EAAcR,EAAU1G,EAAO0G,EAAU,IAAI,GAAG,EAAMS,EAAW,EAAEC,GAAY,EAAMC,EAAY,EAAEC,EAAa,EAAMC,EAAa,EAAEC,EAAc,EAAMC,GAAQjB,EAAQxG,EAAOwG,IAAU,GAAG,IAAIC,EAASzG,EAAOyG,IAAW,GAAG,IAAIC,EAAU1G,EAAO0G,IAAY,GAAG,GAAOgB,GAASlB,EAAQxG,EAAOwG,EAAQ,IAAI,GAAG,IAAIC,EAASzG,EAAOyG,EAAS,IAAI,GAAG,IAAIC,EAAU1G,EAAO0G,EAAU,IAAI,GAAG,GAAOiB,EAAM,SAASC,GAAGC,GAAIC,GAAKC,GAAI,CAAC,OAAOH,GAAG,GAAGC,GAAIE,GAAID,GAAKC,EAAG,EAAUH,EAAG,EAAEA,EAAGrB,EAAKqB,IAAK,CAAC,IAAII,GAAK,GAAGJ,EAAG,GAAG,GAAG,EAACD,EAAMC,EAAGH,EAAOC,EAAQM,EAAI,EAAY,KAAIC,GAAO5B,GAAS,gBAAgBuB,CAAE,EAAMM,GAAM7B,GAAS,iBAAoB4B,GAAO,WAAW,OAAMC,GAAMD,GAAO,WAAW,KAAKA,EAAM,GAAKC,GAAM,GAAGP,EAAMC,EAAGf,EAAWC,EAAYkB,EAAI,IAAGJ,EAAG,GAAGT,EAAWA,EAAWa,GAAKZ,GAAYA,GAAYY,GAAKpB,KAAWsB,GAAM,GAAGP,EAAMC,EAAGb,EAAYC,EAAagB,EAAI,IAAGJ,EAAG,GAAGP,EAAYA,EAAYW,GAAKV,EAAaA,EAAaU,GAAKpB,KAAWsB,GAAM,GAAGP,EAAMC,EAAGX,EAAaC,EAAcc,EAAI,IAAGJ,EAAG,GAAGL,EAAaA,EAAaS,GAAKR,EAAcA,EAAcQ,GAAKpB,KAAQ,CAAC,OAAGJ,IAASxG,EAAOwG,IAAU,GAAGW,EAAWnH,EAAOwG,EAAQ,IAAI,GAAGY,IAAeX,IAAUzG,EAAOyG,IAAW,GAAGY,EAAYrH,EAAOyG,EAAS,IAAI,GAAGa,GAAgBZ,IAAW1G,EAAO0G,IAAY,GAAGa,EAAavH,EAAO0G,EAAU,IAAI,GAAGc,GAAqBZ,CAAK,CAAC,SAASuB,IAAQ,CAACtJ,EAAI,2BAA2B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS+I,IAAI,CAACvJ,EAAI,uBAAuB,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASgJ,GAAgBT,EAAG,CAAC,IAAIU,EAAOH,GAAO,UAAUP,CAAE,EAAE,GAAG,CAACU,EAAO,MAAM,IAAIF,GAAG,WAAW,CAAC,EAAE,OAAOE,CAAM,CAAC,SAASC,GAAUC,EAAK,CAAC,OAAOA,EAAK,KAAK,KAAKA,GAAM,EAAE,KAAK,KAAKA,GAAM,GAAG,KAAK,KAAKA,GAAM,GAAG,IAAI,CAAC,SAASC,GAAUC,EAAK,CAAC,IAAI3C,EAAI,GAAO4C,EAAK,EAAMC,EAAQ,EAAMC,EAAS,EAAMC,EAAO,EAAMC,EAAI,EAAMC,EAAE,EAAMC,EAAM,CAACP,EAAK,GAAG,MAAMA,EAAK,IAAI,GAAGA,EAAK,GAAG,MAAMA,EAAK,IAAI,GAAGA,EAAK,GAAG,MAAMA,EAAK,IAAI,GAAGA,EAAK,GAAG,MAAMA,EAAK,IAAI,EAAE,EAAMQ,EAAQ,GAASC,EAAO,GAAG,IAAIH,EAAE,EAAEA,EAAE,EAAEA,IAAK,GAAGC,EAAMD,KAAK,EAAE,CAACE,EAAQ,GAAM,KAAK,CAAE,GAAGA,EAAQ,CAAyC,GAAxCC,EAAOZ,GAAUU,EAAM,GAAGA,EAAM,IAAI,EAAE,EAAKA,EAAM,KAAK,GAAI,OAAAlD,EAAI,UAAUA,GAAKoD,EAAcpD,EAAI,GAAGkD,EAAM,KAAK,EAAG,OAAAlD,EAAI,KAAQoD,IAAS,YAAUA,EAAO,IAAMA,IAAS,YAAUA,EAAO,KAAIpD,GAAKoD,EAAcpD,CAAI,CAAC,IAAI4C,EAAK,EAAEA,EAAK,EAAEA,IAAWM,EAAMN,KAAQ,IAAMA,EAAKE,EAAS,IAAGE,EAAI,GAAEF,EAASF,EAAKI,KAASA,EAAIH,IAASA,EAAQG,EAAID,EAAOH,EAAKC,EAAQ,GAAG,IAAID,EAAK,EAAEA,EAAK,EAAEA,IAAO,CAAC,GAAGC,EAAQ,GAAMK,EAAMN,KAAQ,GAAGA,GAAMG,GAAQH,EAAKG,EAAOF,EAAQ,CAAID,IAAOG,IAAQ/C,GAAK,IAAO+C,IAAS,IAAE/C,GAAK,MAAI,QAAQ,CAAEA,GAAK,OAAOqD,GAAOH,EAAMN,GAAM,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE5C,GAAK4C,EAAK,EAAE,IAAI,EAAE,CAAC,OAAO5C,CAAG,CAAC,SAASsD,GAAaC,EAAGC,EAAM,CAAC,IAAIC,EAAO1J,EAAOwJ,IAAK,GAAOG,EAAKL,GAAOrJ,GAAQuJ,EAAG,IAAI,EAAE,EAAMd,EAAK,OAAOgB,EAAO,CAAC,IAAK,GAAE,GAAGD,IAAQ,GAAI,MAAM,CAAC,MAAM,EAAE,EAAEf,EAAKxI,EAAOsJ,EAAG,IAAI,GAAGd,EAAKD,GAAUC,CAAI,EAAE,MAAM,IAAK,IAAG,GAAGe,IAAQ,GAAI,MAAM,CAAC,MAAM,EAAE,EAAEf,EAAK,CAACxI,EAAOsJ,EAAG,IAAI,GAAGtJ,EAAOsJ,EAAG,KAAK,GAAGtJ,EAAOsJ,EAAG,KAAK,GAAGtJ,EAAOsJ,EAAG,KAAK,EAAE,EAAEd,EAAKC,GAAUD,CAAI,EAAE,MAAM,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAOgB,EAAO,KAAKhB,EAAK,KAAKiB,CAAI,CAAC,CAAC,SAASC,GAAU3D,EAAI,CAAsB,QAAjB1F,EAAE0F,EAAI,MAAM,GAAG,EAAUiD,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAAC,IAAIW,EAAI,OAAOtJ,EAAE2I,EAAE,EAAE,GAAG,MAAMW,CAAG,EAAE,OAAO,KAAKtJ,EAAE2I,GAAGW,CAAG,CAAC,OAAOtJ,EAAE,GAAGA,EAAE,IAAI,EAAEA,EAAE,IAAI,GAAGA,EAAE,IAAI,MAAM,CAAC,CAAC,SAASuJ,GAAQ7D,EAAI,CAAC,OAAO,SAASA,CAAG,CAAC,CAAC,SAAS8D,GAAU9D,EAAI,CAAC,IAAI+D,EAAUC,EAAEC,EAAOC,EAAMC,EAAW,qKAAyKjB,EAAM,CAAC,EAAE,GAAG,CAACiB,EAAW,KAAKnE,CAAG,EAAG,OAAO,KAAK,GAAGA,IAAM,KAAM,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAya,IAApaA,EAAI,WAAW,IAAI,EAAGA,EAAIA,EAAI,QAAQ,KAAK,IAAI,EAAOA,EAAIA,EAAI,QAAQ,KAAK,KAAK,EAAKA,EAAI,QAAQ,GAAG,EAAE,GAAGA,EAAIA,EAAI,QAAQ,IAAI,OAAO,MAAM,GAAG,EAAE,GAAG,EAAE+D,EAAM/D,EAAI,MAAM,GAAG,EAAE+D,EAAMA,EAAM,OAAO,GAAGF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAEF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAE,IAAIA,EAAMA,EAAM,OAAO,GAAGF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAEF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAE,IAAIA,EAAMA,EAAM,MAAM,EAAEA,EAAM,OAAO,CAAC,GAAOA,EAAM/D,EAAI,MAAM,GAAG,EAAEiE,EAAO,EAAEC,EAAE,EAAMF,EAAE,EAAEA,EAAED,EAAM,OAAOC,IAAK,GAAG,OAAOD,EAAMC,IAAI,SAAU,GAAGD,EAAMC,KAAK,IAAI,CAAC,IAAIE,EAAE,EAAEA,EAAE,EAAEH,EAAM,OAAO,EAAEG,IAAKhB,EAAMc,EAAEE,GAAG,EAAED,EAAOC,EAAE,CAAC,MAAMhB,EAAMc,EAAEC,GAAQG,GAAO,SAASL,EAAMC,GAAG,EAAE,CAAC,OAAQd,EAAMc,EAAEC,GAAQF,EAAMC,GAAI,MAAM,CAACd,EAAM,IAAI,GAAGA,EAAM,GAAGA,EAAM,IAAI,GAAGA,EAAM,GAAGA,EAAM,IAAI,GAAGA,EAAM,GAAGA,EAAM,IAAI,GAAGA,EAAM,EAAE,CAAC,CAAC,IAAImB,GAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,YAAY,SAASC,EAAK,CAAC,IAAIC,EAAIZ,GAAUW,CAAI,EAAiD,GAA5CC,IAAM,OAAkBA,EAAIT,GAAUQ,CAAI,EAAKC,IAAM,MAAM,OAAOD,EAAK,IAAI7B,EAAK,GAAG4B,GAAI,YAAY,MAAMC,GAAO7B,EAAK4B,GAAI,YAAY,MAAMC,OAAU,CAAC,IAAI1I,EAAGyI,GAAI,YAAY,KAAK3K,GAAOkC,EAAG,MAAM,wCAAwC,EAAE6G,EAAK,WAAW7G,EAAG,KAAK,KAAKA,EAAG,OAAOyI,GAAI,YAAY,MAAM5B,GAAM6B,EAAKD,GAAI,YAAY,MAAMC,GAAM7B,CAAI,CAAC,OAAOA,CAAI,EAAE,YAAY,SAASA,EAAK,CAAC,OAAG4B,GAAI,YAAY,MAAM5B,GAAc4B,GAAI,YAAY,MAAM5B,GAAa,IAAI,CAAC,EAAE,SAAS+B,GAAiBC,EAAMC,EAAQC,EAAU,CAAC,GAAGA,GAAWF,IAAQ,EAAE,OAAO,KAAK,IAAIxH,EAAKqG,GAAamB,EAAMC,CAAO,EAAE,GAAGzH,EAAK,MAAM,MAAM,IAAIoF,GAAG,WAAWpF,EAAK,KAAK,EAAE,OAAAA,EAAK,KAAKoH,GAAI,YAAYpH,EAAK,IAAI,GAAGA,EAAK,KAAYA,CAAI,CAAC,SAAS2H,GAAgB/C,EAAGY,EAAKiC,EAAQG,EAAGC,EAAGC,EAAG,CAAC,IAAIC,EAAK1C,GAAgBT,CAAE,EAAM5E,EAAKuH,GAAiB/B,EAAKiC,CAAO,EAAE,OAAAM,EAAK,SAAS,KAAKA,EAAK/H,EAAK,KAAKA,EAAK,IAAI,EAAS,CAAC,CAAC,SAASgI,GAAmBpD,EAAGY,EAAKiC,EAAQG,EAAGC,EAAGC,EAAG,CAAC,IAAIC,EAAK1C,GAAgBT,CAAE,EAAM5E,EAAKuH,GAAiB/B,EAAKiC,CAAO,EAAE,OAAAM,EAAK,SAAS,QAAQA,EAAK/H,EAAK,KAAKA,EAAK,IAAI,EAAS,CAAC,CAAC,SAASiI,GAAqBC,EAAMpN,EAAKqN,EAAMjD,EAAM,CAAC,CAAC,SAASkD,GAAmBxD,EAAGyD,EAAIC,EAAQ,CAAC,OAAAjF,GAAS,QAAQiF,EAAe,CAAC,CAAC,SAASC,GAAmB3D,EAAG4D,EAAI,CAAC,CAAC,SAASC,GAAuB7D,EAAG8D,EAAWC,EAAY,CAAC,CAAC,SAASC,GAAkB7F,EAAI8F,EAAKC,EAAOC,EAAgB,CAAa,GAAZD,KAAU,EAAK,EAAEC,EAAgB,GAAG,MAAO,GAA0D,QAApDC,EAASF,EAAWjG,EAAOiG,EAAOC,EAAgB,EAAU/C,EAAE,EAAEA,EAAEjD,EAAI,OAAO,EAAEiD,EAAE,CAAC,IAAIiD,EAAElG,EAAI,WAAWiD,CAAC,EAAE,GAAGiD,GAAG,OAAOA,GAAG,MAAM,CAAC,IAAIhG,EAAGF,EAAI,WAAW,EAAEiD,CAAC,EAAEiD,EAAE,QAAQA,EAAE,OAAO,IAAIhG,EAAG,IAAI,CAAC,GAAGgG,GAAG,IAAI,CAAC,GAAGH,GAAQjG,EAAO,MAAMgG,EAAKC,MAAW,GAAGG,CAAC,SAASA,GAAG,KAAK,CAAC,GAAGH,EAAO,GAAGjG,EAAO,MAAMgG,EAAKC,MAAW,GAAG,IAAIG,GAAG,EAAEJ,EAAKC,MAAW,GAAG,IAAIG,EAAE,EAAE,SAASA,GAAG,MAAM,CAAC,GAAGH,EAAO,GAAGjG,EAAO,MAAMgG,EAAKC,MAAW,GAAG,IAAIG,GAAG,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,GAAG,EAAE,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,EAAE,EAAE,KAAK,CAAC,GAAGH,EAAO,GAAGjG,EAAO,MAAMgG,EAAKC,MAAW,GAAG,IAAIG,GAAG,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,GAAG,GAAG,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,GAAG,EAAE,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,EAAE,EAAE,CAAC,CAAC,OAAAJ,EAAKC,IAAS,GAAG,EAASA,EAAOE,CAAQ,CAAC,SAASE,GAAanG,EAAIoG,EAAOJ,EAAgB,CAAC,OAAOH,GAAkB7F,EAAIlG,EAAOsM,EAAOJ,CAAe,CAAC,CAAC,SAASK,GAAsBxE,EAAGyE,EAAKC,EAAM,CAAC,CAAC,SAASC,GAAWC,EAAQC,EAAK,CAAC,OAAA5M,EAAO,KAAK,EAAE2M,EAAQA,EAAQC,CAAI,EAASD,CAAO,CAAC,SAASE,GAAcpD,EAAGE,EAAOhB,EAAKiB,EAAKgB,EAAQ,CAAC,OAAOjB,EAAO,CAAC,IAAK,GAAEhB,EAAKkB,GAAUlB,CAAI,EAAE+D,GAAWjD,EAAG,EAAE,EAAKmB,IAASzK,EAAOyK,IAAU,GAAG,IAAG3K,EAAOwJ,IAAK,GAAGE,EAAOxJ,EAAOsJ,EAAG,IAAI,GAAGd,EAAK1I,EAAOwJ,EAAG,IAAI,GAAGa,GAAOV,CAAI,EAAE,MAAM,IAAK,IAAGjB,EAAKqB,GAAUrB,CAAI,EAAE+D,GAAWjD,EAAG,EAAE,EAAKmB,IAASzK,EAAOyK,IAAU,GAAG,IAAGzK,EAAOsJ,IAAK,GAAGE,EAAOxJ,EAAOsJ,EAAG,IAAI,GAAGd,EAAK,GAAGxI,EAAOsJ,EAAG,KAAK,GAAGd,EAAK,GAAGxI,EAAOsJ,EAAG,KAAK,GAAGd,EAAK,GAAGxI,EAAOsJ,EAAG,KAAK,GAAGd,EAAK,GAAG1I,EAAOwJ,EAAG,IAAI,GAAGa,GAAOV,CAAI,EAAE,MAAM,QAAQ,MAAO,EAAC,CAAC,MAAO,EAAC,CAAC,SAASkD,GAAuB/E,EAAGY,EAAKiC,EAAQG,EAAGC,EAAGC,EAAG,CAAC,IAAIC,EAAK1C,GAAgBT,CAAE,EAAE,GAAG,CAACmD,EAAK,MAAO,MAAM,IAAI,IAAI6B,EAAMF,GAAclE,EAAKuC,EAAK,OAAOX,GAAI,YAAYW,EAAK,KAAK,EAAEA,EAAK,MAAMN,CAAO,EAAE,MAAO,EAAC,CAAC,SAASoC,GAAsBjF,EAAGkF,EAAMC,EAAQC,EAAOC,EAAOrC,EAAG,CAAC,IAAIG,EAAK1C,GAAgBT,CAAE,EAAE,OAAGkF,IAAQ,GAAMC,IAAU,GAAG/M,EAAOgN,IAAS,GAAGjC,EAAK,MAAM/K,EAAOiN,IAAS,GAAG,EAAElC,EAAK,MAAM,KAAY,GAAS,GAAG,CAAC,SAASmC,GAAiBtF,EAAGuF,EAAG7B,EAAQ,CAAC,OAAAjF,GAAS,QAAQiF,EAAe,CAAC,CAAC,SAAS8B,GAAmBtP,EAAK0N,EAAI,CAAC,CAAC,SAAS6B,GAAmBnC,EAAMpN,EAAKwP,EAAK,CAAC,CAAC,SAASC,GAAsBrC,EAAMpN,EAAK0N,EAAItD,EAAM,CAAC,CAAC,SAASsF,GAAkBtC,EAAMpN,EAAKoK,EAAMoD,EAAQ,CAACjF,GAAS,QAAQiF,CAAO,CAAC,SAASmC,GAAoB7F,EAAG4D,EAAIzC,EAAIb,EAAMM,EAAKiC,EAAQ,CAAC,IAAIM,EAAK1C,GAAgBT,CAAE,EAAM8F,EAAI3C,EAAK,SAAS,QAAQA,EAAKhC,CAAG,EAAE,GAAG,CAAC2E,EAAI,MAAO,GAAE,GAAGlF,EAAM,IAAIoE,EAAMF,GAAclE,EAAKuC,EAAK,OAAOX,GAAI,YAAYsD,EAAI,IAAI,EAAEA,EAAI,KAAKjD,CAAO,EAAE,OAAA5K,EAAO,IAAI6N,EAAI,OAAOlC,IAAM,CAAC,EAASkC,EAAI,OAAO,UAAU,CAAC,SAASC,GAAoBC,EAASC,EAAQC,EAASC,EAAQ,CAAC,CAAC,SAASC,GAAiBlQ,EAAK,CAAC,CAAC,SAASmQ,GAAkBrG,EAAGsG,EAAQC,EAAOjG,EAAMM,EAAK4F,EAAS,CAAC,CAAC,SAASC,GAAkBC,EAAO/J,EAAKgK,EAAS,CAAC,CAAC,SAASC,GAAkB1Q,EAAK0N,EAAI,CAAC,CAAC,SAASiD,GAAoBvD,EAAMpN,EAAKoK,EAAM,CAAC,CAAC,IAAIwG,GAAe,GAAK,SAASC,IAAmC,CAAC,OAAOD,EAAc,CAAC,SAASE,GAAe1J,EAAI,CAAC,OAAOjF,EAAQiF,IAAM,GAAGlF,EAAOkF,EAAI,IAAI,GAAG,UAAU,CAAC,SAAS2J,GAAWC,EAAK,CAAC,OAAOA,EAAK,IAAI,IAAIA,EAAK,MAAM,GAAGA,EAAK,MAAM,EAAE,CAAC,IAAIC,GAA2B,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAMC,GAA8B,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,SAASC,GAAaC,EAAK,CAAC,IAAIC,EAAKN,GAAWK,EAAK,YAAY,CAAC,EAAME,EAAoBD,EAAKJ,GAA2BC,GAAkCK,EAAKD,EAAoBF,EAAK,SAAS,GAAGA,EAAK,QAAQ,EAAE,EAAE,OAAOG,CAAI,CAAC,SAASC,GAAeC,EAAKC,EAAM,CAAC,IAAIN,EAAK,IAAI,KAAKN,GAAeW,CAAI,EAAE,GAAG,EAAEvP,EAAOwP,IAAQ,GAAGN,EAAK,WAAW,EAAElP,EAAOwP,EAAM,IAAI,GAAGN,EAAK,WAAW,EAAElP,EAAOwP,EAAM,IAAI,GAAGN,EAAK,SAAS,EAAElP,EAAOwP,EAAM,KAAK,GAAGN,EAAK,QAAQ,EAAElP,EAAOwP,EAAM,KAAK,GAAGN,EAAK,SAAS,EAAElP,EAAOwP,EAAM,KAAK,GAAGN,EAAK,YAAY,EAAE,KAAKlP,EAAOwP,EAAM,KAAK,GAAGN,EAAK,OAAO,EAAE,IAAIG,EAAKJ,GAAaC,CAAI,EAAE,EAAElP,EAAOwP,EAAM,KAAK,GAAGH,EAAKrP,EAAOwP,EAAM,KAAK,GAAG,EAAEN,EAAK,kBAAkB,EAAE,IAAI,IAAIO,EAAM,IAAI,KAAKP,EAAK,YAAY,EAAE,EAAE,CAAC,EAAMQ,EAAa,IAAI,KAAKR,EAAK,YAAY,EAAE,EAAE,CAAC,EAAE,kBAAkB,EAAMS,EAAaF,EAAM,kBAAkB,EAAMG,GAAKF,GAAcC,GAAcT,EAAK,kBAAkB,GAAG,KAAK,IAAIS,EAAaD,CAAY,GAAG,EAAE1P,EAAOwP,EAAM,KAAK,GAAGI,CAAG,CAAC,SAASC,GAAgB9J,EAAI,CAAW,QAANgD,EAAI,EAAUC,EAAE,EAAEA,EAAEjD,EAAI,OAAO,EAAEiD,EAAE,CAAC,IAAI8G,EAAE/J,EAAI,WAAWiD,CAAC,EAAK8G,GAAG,IAAK/G,IAAc+G,GAAG,KAAM/G,GAAK,EAAU+G,GAAG,OAAOA,GAAG,OAAO/G,GAAK,EAAE,EAAEC,GAAOD,GAAK,CAAE,CAAC,OAAOA,CAAG,CAAC,SAASgH,GAAgBhK,EAAI,CAAC,IAAI0G,EAAKoD,GAAgB9J,CAAG,EAAE,EAAMrH,EAAIsR,GAAQvD,CAAI,EAAE,OAAG/N,GAAIwN,GAAanG,EAAIrH,EAAI+N,CAAI,EAAS/N,CAAG,CAAC,SAASuR,GAAWC,EAASC,EAASC,EAAO,CAAC,IAAIC,EAAa,IAAI,OAAM,YAAY,EAAMC,EAAO,IAAI,KAAKD,EAAY,EAAE,CAAC,EAAME,EAAO,IAAI,KAAKF,EAAY,EAAE,CAAC,EAAMV,EAAaW,EAAO,kBAAkB,EAAMZ,EAAaa,EAAO,kBAAkB,EAAMC,EAAkB,KAAK,IAAIb,EAAaD,CAAY,EAAEzP,EAAQiQ,IAAW,GAAGM,EAAkB,GAAGxQ,EAAOmQ,IAAW,GAAG,OAAOR,GAAcD,CAAY,EAAE,SAASe,EAAYvB,EAAK,CAAC,IAAIwB,EAAMxB,EAAK,aAAa,EAAE,MAAM,mBAAmB,EAAE,OAAOwB,EAAMA,EAAM,GAAG,KAAK,CAAC,IAAIC,EAAWF,EAAYH,CAAM,EAAMM,EAAWH,EAAYF,CAAM,EAAMM,EAAcd,GAAgBY,CAAU,EAAMG,GAAcf,GAAgBa,CAAU,EAAKlB,EAAaC,GAAc1P,EAAQmQ,IAAS,GAAGS,EAAc5Q,EAAQmQ,EAAO,IAAI,GAAGU,KAAmB7Q,EAAQmQ,IAAS,GAAGU,GAAc7Q,EAAQmQ,EAAO,IAAI,GAAGS,EAAc,CAAC,SAASE,IAAQ,CAAC1R,EAAM,EAAE,CAAC,CAAC,SAAS2R,GAAQzS,EAAS2J,EAAM,CAAC7I,EAAM8F,EAAkB,CAAC,CAAC,SAAS8L,GAAgCnT,EAAKoT,EAAQ,CAAC,OAAO,WAAW,eAAe,gBAAgBpU,EAAOgB,EAAKoT,CAAO,CAAC,CAAC,SAASC,GAAgCrT,EAAKoT,EAAQ,CAAC,OAAO,WAAW,eAAe,eAAepU,EAAOgB,EAAKoT,CAAO,CAAC,CAAC,SAASE,GAAoCtT,EAAKoT,EAAQ,CAAC,OAAO,WAAW,eAAe,qBAAqBpU,EAAOgB,EAAKoT,CAAO,CAAC,CAAC,SAASG,GAAgCvT,EAAKoT,EAAQ,CAAC,OAAO,WAAW,eAAe,gBAAgBpU,EAAOgB,EAAKoT,CAAO,CAAC,CAAC,SAASI,GAA0BC,EAAO,CAAC,OAAO,WAAW,eAAe,UAAUzU,EAAOyU,CAAM,CAAC,CAAC,SAASC,GAA2B1T,EAAKoT,EAAQ,CAAC,OAAO,WAAW,eAAe,UAAUpU,EAAOgB,EAAKoT,CAAO,CAAC,CAAC,SAASO,GAA2CF,EAAO,CAAC,OAAO,WAAW,eAAe,4BAA4BzU,EAAOyU,CAAM,CAAC,CAAC,SAASG,GAAyBC,EAAKC,EAAQC,EAAGC,EAAM,CAAC,OAAO,WAAW,eAAe,SAAShV,EAAO6U,EAAKC,EAAQC,EAAGC,CAAK,CAAC,CAAC,SAASC,GAAyBR,EAAOrJ,EAAM,CAAC,OAAO,WAAW,eAAe,SAASpL,EAAOyU,EAAOrJ,CAAK,CAAC,CAAC,SAAS8J,GAAyBT,EAAO/F,EAAIiB,EAAKwF,EAAS,CAAC,OAAO,WAAW,eAAe,SAASnV,EAAOyU,EAAO/F,EAAIiB,EAAKwF,CAAQ,CAAC,CAAC,SAASC,GAA6BX,EAAOY,EAAQ,CAAC,OAAO,WAAW,eAAe,aAAarV,EAAOyU,EAAOY,CAAO,CAAC,CAAC,SAASC,GAA0Bb,EAAO/F,EAAIiB,EAAKwF,EAAS,CAAC,OAAO,WAAW,eAAe,UAAUnV,EAAOyU,EAAO/F,EAAIiB,EAAKwF,CAAQ,CAAC,CAAC,SAASI,GAAyCvV,EAAO,CAAC,OAAO,WAAW,eAAe,uBAAuBA,CAAM,CAAC,CAAC,SAASwV,GAAoBxU,EAAKoT,EAAQ,CAAC,OAAO,WAAW,eAAe,KAAKpU,EAAOgB,EAAKoT,CAAO,CAAC,CAAC,SAASqB,GAAkCC,EAAQ,CAAC,OAAO,WAAW,eAAe,oBAAoB1V,EAAO0V,CAAO,CAAC,CAAC,SAASC,GAA4BC,EAAOC,EAAQC,EAASC,EAAQC,EAASvQ,EAAS,CAAC,OAAO,WAAW,eAAe,cAAczF,EAAO4V,EAAOC,EAAQC,EAASC,EAAQC,EAASvQ,CAAQ,CAAC,CAAC,SAASwQ,IAAsB,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,SAASC,IAAY,CAAC,MAAO,WAAU,CAAC,SAASC,IAA0B,CAAC,OAAOD,GAAW,CAAC,CAAC,IAAIE,GAAuBvV,IAAqB,OAAO,YAAYS,GAAQ,YAAY,EAAE,aAAY8U,GAAoB,IAAI,YAAY,IAAI,EAAE,SAASC,GAAuBC,EAAKC,EAAIC,EAAI,CAACzT,EAAO,WAAWuT,IAAO,EAAEC,IAAM,EAAEA,EAAIC,IAAM,CAAC,CAAC,CAAC,SAASC,GAA0B9G,EAAK,CAAC,IAAIpM,EAAEf,EAAW,OAAWkU,EAAM/G,EAAKpM,EAAE,WAAW,QAAQ,GAAG,GAAG,CAAC,OAAAf,EAAW,KAAKkU,CAAK,EAAEpT,GAAkB,EAAS,CAAC,OAAO2B,EAAN,CAAS,CAAC,CAAC,SAAS0R,GAAwBC,EAAc,CAAC,IAAIC,EAAQ9T,EAAO,OAAO6T,EAAcA,IAAgB,EAAE,IAAIE,EAAYZ,GAAW,EAAE,GAAGU,EAAcE,EAAa,MAAO,GAAiE,QAAvDC,EAAQ,CAACC,EAAEC,IAAWD,GAAGC,EAASD,EAAEC,GAAUA,EAAiBC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBN,GAAS,EAAE,GAAGK,GAASC,EAAkB,KAAK,IAAIA,EAAkBP,EAAc,SAAS,EAAE,IAAIvB,EAAQ,KAAK,IAAIyB,EAAYC,EAAQ,KAAK,IAAIH,EAAcO,CAAiB,EAAE,KAAK,CAAC,EAAMC,EAAYX,GAA0BpB,CAAO,EAAE,GAAG+B,EAAa,MAAO,EAAK,CAAC,MAAO,EAAK,CAAC,IAAIC,GAAI,CAAC,EAAE,SAASC,IAAmB,CAAC,OAAO/W,GAAa,gBAAgB,CAAC,SAASgX,IAAe,CAAC,GAAG,CAACA,GAAc,QAAQ,CAAC,IAAIC,GAAM,OAAO,WAAW,UAAU,UAAU,WAAW,UAAU,UAAU,IAAI,KAAK,QAAQ,IAAI,GAAG,EAAE,SAAaC,EAAI,CAAC,KAAO,WAAW,QAAU,WAAW,KAAO,IAAI,IAAM,IAAI,KAAO,iBAAiB,KAAOD,EAAK,EAAIF,GAAkB,CAAC,EAAE,QAAQN,KAAKK,GAAQA,GAAIL,KAAK,OAAU,OAAOS,EAAIT,GAAQS,EAAIT,GAAGK,GAAIL,GAAG,IAAIU,EAAQ,CAAC,EAAE,QAAQV,KAAKS,EAAKC,EAAQ,KAAK,GAAGV,KAAKS,EAAIT,IAAI,EAAEO,GAAc,QAAQG,CAAO,CAAC,OAAOH,GAAc,OAAO,CAAC,SAASI,GAAc1O,EAAI2O,EAAO,CAAC,QAAQ1L,EAAE,EAAEA,EAAEjD,EAAI,OAAO,EAAEiD,EAAGpJ,EAAM8U,MAAW,GAAG3O,EAAI,WAAWiD,CAAC,EAAEpJ,EAAM8U,IAAS,GAAG,CAAC,CAAC,SAASC,GAAaC,EAAUC,EAAY,CAAC,IAAIC,EAAQ,EAAE,OAAAT,GAAc,EAAE,QAAQ,SAASU,EAAO/L,EAAE,CAAC,IAAI9D,EAAI2P,EAAYC,EAAQ7U,EAAQ2U,EAAU5L,EAAE,IAAI,GAAG9D,EAAIuP,GAAcM,EAAO7P,CAAG,EAAE4P,GAASC,EAAO,OAAO,CAAC,CAAC,EAAS,CAAC,CAAC,SAASC,GAAmBC,EAAeC,EAAkB,CAAC,IAAIV,EAAQH,GAAc,EAAEpU,EAAQgV,IAAiB,GAAGT,EAAQ,OAAO,IAAIM,EAAQ,EAAE,OAAAN,EAAQ,QAAQ,SAASO,EAAO,CAACD,GAASC,EAAO,OAAO,CAAC,CAAC,EAAE9U,EAAQiV,IAAoB,GAAGJ,EAAe,CAAC,CAAC,SAASK,GAAUvN,EAAG,CAAC,MAAO,GAAE,CAAC,SAASwN,GAAexN,EAAGyN,EAAK,CAAC,IAAIC,EAAW,EAAMC,EAAiB,EAAMrN,EAAM,EAAE,CAAC,IAAI3D,EAAK,EAAKqD,GAAI,EAAG0N,EAAW,GAAU1N,GAAI,GAAGA,GAAI,KAAG0N,EAAW,IAAGpN,EAAM,CAAC,CAAC,OAAAtI,EAAMyV,IAAO,GAAG9Q,EAAKzE,EAAOuV,EAAK,IAAI,GAAGnN,EAAM3E,GAAQ,CAAC+R,IAAa,GAAGhS,EAAWgS,EAAW,CAAC,KAAK,IAAIhS,CAAU,GAAG,EAAEA,EAAW,EAAE,CAAC,KAAK,MAAMA,EAAW,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEtD,EAAOqV,EAAK,IAAI,GAAG9R,GAAQ,GAAGvD,EAAOqV,EAAK,KAAK,GAAG9R,GAAQ,GAAGA,GAAQ,CAACgS,IAAmB,GAAGjS,EAAWiS,EAAiB,CAAC,KAAK,IAAIjS,CAAU,GAAG,EAAEA,EAAW,EAAE,CAAC,KAAK,MAAMA,EAAW,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEtD,EAAOqV,EAAK,KAAK,GAAG9R,GAAQ,GAAGvD,EAAOqV,EAAK,KAAK,GAAG9R,GAAQ,GAAU,CAAC,CAAC,SAASiS,GAAU5N,EAAG6N,EAAIC,EAAOC,EAAWC,EAAYC,EAAK,CAAC,MAAO,GAAE,CAAC,SAASC,GAAWlO,EAAG6N,EAAIC,EAAOC,EAAWC,EAAYC,EAAK,CAAC,MAAO,GAAE,CAAC,SAASE,GAASnO,EAAG6N,EAAIC,EAAOG,EAAK,CAAC,MAAO,GAAE,CAAC,SAASG,GAASpO,EAAG+N,EAAWC,EAAYK,EAAOC,EAAU,CAAC,MAAO,GAAE,CAAC,SAASC,GAASvO,EAAG,CAAC,MAAO,GAAE,CAAC,IAAIwO,GAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,SAASC,GAAUpO,EAAOqO,EAAK,CAAC,IAAI5B,EAAO0B,GAAiBnO,GAAWqO,IAAO,GAAGA,IAAO,KAAKrO,IAAS,EAAE/I,GAAIL,GAAK4G,GAAkBiP,EAAO,CAAC,CAAC,EAAEA,EAAO,OAAO,GAAOA,EAAO,KAAK4B,CAAI,CAAE,CAAC,SAASC,GAAU3O,EAAG6N,EAAIC,EAAOG,EAAK,CAAW,QAANvC,EAAI,EAAUtK,EAAE,EAAEA,EAAE0M,EAAO1M,IAAI,CAAC,IAAI9D,EAAIjF,EAAQwV,IAAM,GAAO1M,EAAI9I,EAAQwV,EAAI,IAAI,GAAGA,GAAK,EAAE,QAAQe,EAAE,EAAEA,EAAEzN,EAAIyN,IAAKH,GAAUzO,EAAG/H,EAAOqF,EAAIsR,IAAI,EAAE,EAAElD,GAAKvK,CAAG,CAAC,OAAA9I,EAAQ4V,IAAO,GAAGvC,EAAW,CAAC,CAAC,SAASmD,GAAaC,EAAKC,EAAQC,EAAK1X,EAAI,CAAC,IAAIsJ,EAAK,EAAMiB,EAAK,EAAMvB,EAAM,EAAMsB,EAAO,EAAMjF,EAAK,EAAMsS,EAAM,EAAMC,EAAG,SAASC,EAAcvN,EAAOjF,GAAKsS,EAAMG,EAAMxO,EAAKiB,EAAK,CAAC,IAAIH,EAAGC,EAAMuN,EAAOlK,EAAM,OAAArD,EAAMC,IAAS,GAAG,GAAG,GAAGhB,EAAKgB,IAAS,GAAGf,GAAUD,CAAI,EAAED,GAAUC,CAAI,EAAEc,EAAG0G,GAAQzG,CAAK,EAAEqD,EAAMF,GAAcpD,EAAGE,EAAOhB,EAAKiB,CAAI,EAAEhK,GAAO,CAACmN,CAAK,EAAEkK,EAAG9G,GAAQ,EAAE,EAAEhQ,EAAO8W,EAAG,IAAI,GAAGtN,EAAOxJ,EAAO8W,EAAG,IAAI,GAAGvS,GAAKvE,EAAO8W,EAAG,KAAK,GAAGD,EAAM5W,EAAQ6W,EAAG,KAAK,GAAGE,EAAM/W,EAAQ6W,EAAG,KAAK,GAAGxN,EAAME,IAAS,GAAIxJ,EAAO8W,EAAG,KAAK,GAAG,GAAQ9W,EAAO8W,EAAG,KAAK,GAAG,GAAG9W,EAAO8W,EAAG,KAAK,GAAG,EAASA,CAAE,CAAiO,GAA7NF,IAAM1O,EAAMlI,EAAO4W,IAAO,GAAGpN,EAAOxJ,EAAO4W,EAAK,IAAI,GAAGrS,EAAKvE,EAAO4W,EAAK,IAAI,GAAGC,EAAM7W,EAAO4W,EAAK,KAAK,IAAMrS,GAAM,CAACsS,IAAOA,EAAMtS,IAAO,EAAE,GAAG,GAAK,CAACA,GAAMsS,IAAOtS,EAAKsS,IAAQ,GAAG,EAAE,GAAKA,IAAQ,IAAGA,EAAM,GAAKtS,IAAO,IAAGA,EAAK,GAAK,CAACmS,GAAM,CAACC,EAAS,MAAM,GAA4C,GAAtCzO,EAAM,OAAmC0O,IAAO,GAAG5W,EAAO4W,IAAO,GAAG,GAAG,CAACF,EAAM,MAAM,GAAG,GAAGxO,EAAM,GAAI,MAAM,GAAG,GAAG3D,IAAO,GAAGA,IAAO,GAAGA,IAAO,EAAG,MAAM,GAAG,GAAGiF,IAAS,GAAGA,IAAS,GAAGA,IAAS,GAAI,MAAM,GAAG,GAAGmN,IAASA,EAAQvQ,GAAauQ,CAAO,EAAElN,EAAK,SAASkN,EAAQ,EAAE,EAAK,MAAMlN,CAAI,GAAG,OAAGvB,EAAM,KAAY,GAAS,GAAI,GAAG,CAACwO,EAAM,OAAGlN,IAAS,IAAGA,EAAO,IAAMtB,EAAM,KAAK,IAAMsB,IAAS,EAAGhB,EAAKyO,GAAO,UAAU,EAAOzO,EAAK,CAAC,EAAE,EAAE,EAAE,CAAC,GAAGsO,EAAGC,EAAcvN,EAAOjF,EAAKsS,EAAM,KAAKrO,EAAKiB,CAAI,EAAExJ,EAAQf,IAAM,GAAG4X,EAAU,EAA+C,GAA7CJ,EAAKtQ,GAAasQ,CAAI,EAAElO,EAAKkB,GAAUgN,CAAI,EAAKlO,IAAO,KAAM,GAAGgB,IAAS,GAAGA,IAAS,EAAGA,EAAO,UAAUA,IAAS,IAAItB,EAAM,EAAGM,EAAK,CAAC,EAAE,EAAEyO,GAAO,KAAK,EAAEzO,CAAI,EAAEgB,EAAO,OAAQ,OAAM,WAAShB,EAAKqB,GAAU6M,CAAI,EAAKlO,IAAO,KAAM,GAAGgB,IAAS,GAAGA,IAAS,GAAIA,EAAO,OAAQ,OAAM,GAAK,OAAGhB,GAAM,MAAMsO,EAAGC,EAAcvN,EAAOjF,EAAKsS,EAAMH,EAAKlO,EAAKiB,CAAI,EAAExJ,EAAQf,IAAM,GAAG4X,EAAU,GAAK5O,EAAM,EAAS,IAAGwO,EAAKtM,GAAI,YAAYsM,CAAI,EAAElO,EAAKkB,GAAUgN,CAAI,EAAKlN,IAAS,EAAGA,EAAO,EAAUA,IAAS,KAAIhB,EAAK,CAAC,EAAE,EAAEyO,GAAO,KAAK,EAAEzO,CAAI,GAAEsO,EAAGC,EAAcvN,EAAOjF,EAAKsS,EAAM,KAAKrO,EAAKiB,CAAI,EAAExJ,EAAQf,IAAM,GAAG4X,EAAU,EAAC,CAAC,SAASI,IAAgB,CAAC,GAAG,OAAO,QAAQ,UAAU,OAAO,OAAO,iBAAoB,WAAY,OAAOC,GAAM,OAAO,gBAAgBA,CAAI,EAAO,GAAGxZ,EAAqB,GAAG,CAAC,IAAIyZ,EAAchZ,GAAQ,QAAQ,EAAMiZ,EAAeD,EAAc,eAAkB,GAAGC,EAAgB,OAAOF,GAAMC,EAAc,eAAkBD,CAAI,EAAE,IAAIG,EAAYF,EAAc,YAAe,OAAOD,IAAOA,EAAK,IAAIG,EAAYH,EAAK,UAAU,CAAC,EAAEA,EAAK,OAAOpV,EAAN,CAAS,CAAE1C,EAAM,kBAAkB,CAAC,CAAC,SAASkY,GAAWJ,EAAK,CAAC,OAAOI,GAAWL,GAAe,GAAGC,CAAI,CAAC,CAAC,SAASK,GAAY9C,EAAOjI,EAAK,CAAC,OAAA8K,GAAW1X,EAAO,SAAS6U,IAAS,EAAEA,EAAOjI,IAAO,CAAC,CAAC,EAAS,CAAC,CAAC,SAASgL,GAAanO,EAAGC,EAAMmN,EAAKgB,EAAQC,EAAKC,EAAQ1P,EAAM,CAAC,IAAIlF,EAAKqG,GAAaC,EAAGC,CAAK,EAAE,GAAGvG,EAAK,MAAO,MAAM,GAAG,IAAIyG,EAAKzG,EAAK,KAASwF,EAAKxF,EAAK,KAAS6U,EAAW,GAAM,GAAGnB,GAAMgB,EAAQ,CAAC,IAAII,EAAO,GAAG5P,EAAM,GAAG,EAAE4P,EAAO1N,GAAI,YAAY5B,CAAI,IAAI,GAAGN,EAAM,EAAG,MAAM,QAASM,EAAKsP,EAAO,IAAIC,EAAwB7L,GAAa1D,EAAKkO,EAAKgB,CAAO,EAAKK,EAAwB,GAAGL,IAASG,EAAW,GAAK,CAAC,GAAGF,GAAMC,EAAQ,CAACnO,EAAK,GAAGA,EAAK,IAAIsO,EAAwB7L,GAAazC,EAAKkO,EAAKC,CAAO,EAAKG,EAAwB,GAAGH,IAASC,EAAW,GAAK,CAAC,OAAGA,EAAkB,IAAW,CAAC,CAAC,SAASG,GAASC,EAAMC,EAAM,CAAW,QAANC,EAAI,EAAUnP,EAAE,EAAEA,GAAGkP,EAAMC,GAAKF,EAAMjP,KAAK,CAAE,OAAOmP,CAAG,CAAC,IAAIC,GAAgB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAMC,GAAmB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,SAASC,GAAQpJ,EAAKqJ,EAAK,CAAsC,QAAjCC,EAAQ,IAAI,KAAKtJ,EAAK,QAAQ,CAAC,EAAQqJ,EAAK,GAAE,CAAC,IAAIpJ,EAAKN,GAAW2J,EAAQ,YAAY,CAAC,EAAMC,EAAaD,EAAQ,SAAS,EAAME,GAAoBvJ,EAAKiJ,GAAgBC,IAAoBI,GAAc,GAAGF,EAAKG,EAAmBF,EAAQ,QAAQ,EAAGD,GAAMG,EAAmBF,EAAQ,QAAQ,EAAE,EAAEA,EAAQ,QAAQ,CAAC,EAAKC,EAAa,GAAID,EAAQ,SAASC,EAAa,CAAC,GAAOD,EAAQ,SAAS,CAAC,EAAEA,EAAQ,YAAYA,EAAQ,YAAY,EAAE,CAAC,OAAQ,QAAAA,EAAQ,QAAQA,EAAQ,QAAQ,EAAED,CAAI,EAASC,CAAQ,CAAC,OAAOA,CAAO,CAAC,SAASG,GAAmBC,EAAQC,EAAY1K,EAAO,CAAC,IAAIpF,EAAIoF,EAAO,EAAEA,EAAO0B,GAAgB+I,CAAO,EAAE,EAAME,EAAQ,IAAI,MAAM/P,CAAG,EAAMgQ,EAAgBnN,GAAkBgN,EAAQE,EAAQ,EAAEA,EAAQ,MAAM,EAAE,OAAGD,IAAYC,EAAQ,OAAOC,GAAuBD,CAAO,CAAC,SAASE,GAAmBf,EAAMvD,EAAO,CAAC9U,EAAM,IAAIqY,EAAMvD,IAAS,CAAC,CAAC,CAAC,SAASuE,GAAUC,EAAEC,EAAQC,EAAOC,EAAG,CAAC,IAAIC,EAAQtZ,EAAOqZ,EAAG,KAAK,GAAOnK,EAAK,CAAC,OAAOlP,EAAOqZ,IAAK,GAAG,OAAOrZ,EAAOqZ,EAAG,IAAI,GAAG,QAAQrZ,EAAOqZ,EAAG,IAAI,GAAG,QAAQrZ,EAAOqZ,EAAG,KAAK,GAAG,OAAOrZ,EAAOqZ,EAAG,KAAK,GAAG,QAAQrZ,EAAOqZ,EAAG,KAAK,GAAG,QAAQrZ,EAAOqZ,EAAG,KAAK,GAAG,QAAQrZ,EAAOqZ,EAAG,KAAK,GAAG,SAASrZ,EAAOqZ,EAAG,KAAK,GAAG,UAAUrZ,EAAOqZ,EAAG,KAAK,GAAG,QAAQC,EAAQlT,GAAakT,CAAO,EAAE,EAAE,EAAMC,EAAQnT,GAAagT,CAAM,EAAMI,EAAkB,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,IAAI,EAAE,QAAQC,KAAQD,EAAmBD,EAAQA,EAAQ,QAAQ,IAAI,OAAOE,EAAK,GAAG,EAAED,EAAkBC,EAAK,EAAE,IAAIC,EAAS,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,UAAU,EAAMC,EAAO,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,UAAU,EAAE,SAASC,EAAiBC,EAAMC,EAAOC,EAAU,CAA2D,QAAtDhU,EAAI,OAAO8T,GAAO,SAASA,EAAM,SAAS,EAAEA,GAAO,GAAS9T,EAAI,OAAO+T,GAAQ/T,EAAIgU,EAAU,GAAGhU,EAAI,OAAOA,CAAG,CAAC,SAASiU,EAAaH,EAAMC,EAAO,CAAC,OAAOF,EAAiBC,EAAMC,EAAO,GAAG,CAAC,CAAC,SAASG,GAAaC,EAAMC,EAAM,CAAC,SAASC,EAAIP,GAAM,CAAC,OAAOA,GAAM,EAAE,GAAGA,GAAM,EAAE,EAAE,CAAC,CAAC,IAAIQ,EAAQ,OAAIA,EAAQD,EAAIF,EAAM,YAAY,EAAEC,EAAM,YAAY,CAAC,KAAK,IAAOE,EAAQD,EAAIF,EAAM,SAAS,EAAEC,EAAM,SAAS,CAAC,KAAK,IAAGE,EAAQD,EAAIF,EAAM,QAAQ,EAAEC,EAAM,QAAQ,CAAC,GAAUE,CAAO,CAAC,SAASC,EAAsBC,EAAU,CAAC,OAAOA,EAAU,OAAO,EAAE,CAAC,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,GAAG,EAAE,EAAE,IAAK,GAAE,OAAOA,EAAU,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,CAAC,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,CAAC,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,CAAC,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,GAAG,EAAE,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,SAASC,EAAiBtL,EAAK,CAAC,IAAIuL,EAASnC,GAAQ,IAAI,KAAKpJ,EAAK,QAAQ,KAAK,EAAE,CAAC,EAAEA,EAAK,OAAO,EAAMwL,EAAkB,IAAI,KAAKD,EAAS,YAAY,EAAE,EAAE,CAAC,EAAME,EAAkB,IAAI,KAAKF,EAAS,YAAY,EAAE,EAAE,EAAE,CAAC,EAAMG,GAAuBN,EAAsBI,CAAiB,EAAMG,GAAuBP,EAAsBK,CAAiB,EAAE,OAAGV,GAAaW,GAAuBH,CAAQ,GAAG,EAAMR,GAAaY,GAAuBJ,CAAQ,GAAG,EAAUA,EAAS,YAAY,EAAE,EAASA,EAAS,YAAY,EAASA,EAAS,YAAY,EAAE,CAAC,CAAC,IAAIK,EAAkB,CAAC,KAAK,SAAS5L,EAAK,CAAC,OAAOwK,EAASxK,EAAK,SAAS,UAAU,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOwK,EAASxK,EAAK,QAAQ,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOyK,EAAOzK,EAAK,QAAQ,UAAU,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOyK,EAAOzK,EAAK,OAAO,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIJ,EAAKI,EAAK,QAAQ,KAAK,OAAO8K,EAAalL,EAAK,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,SAASI,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,QAAQ,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO0K,EAAiB1K,EAAK,QAAQ,EAAE,GAAG,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOsL,EAAiBtL,CAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOsL,EAAiBtL,CAAI,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,QAAQ,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,IAAI6L,EAAW7L,EAAK,QAAQ,OAAG6L,GAAY,EAAEA,EAAW,GAAWA,EAAW,KAAGA,GAAY,IAAUf,EAAae,EAAW,CAAC,CAAC,EAAE,KAAK,SAAS7L,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,QAAQ8I,GAASnJ,GAAWK,EAAK,QAAQ,IAAI,EAAEkJ,GAAgBC,GAAmBnJ,EAAK,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,OAAO,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,OAAO,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,MAAM;AAAA,CAAI,EAAE,KAAK,SAASA,EAAK,CAAC,OAAGA,EAAK,SAAS,GAAGA,EAAK,QAAQ,GAAU,KAAW,IAAI,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,OAAO,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,MAAM,GAAI,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOA,EAAK,SAAS,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIqJ,EAAKrJ,EAAK,QAAQ,EAAEA,EAAK,QAAQ,OAAO8K,EAAa,KAAK,MAAMzB,EAAK,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAASrJ,EAAK,CAAC,IAAInH,EAAI,KAAK,OAAOmH,EAAK,QAAQ,GAAGA,EAAK,QAAQ,GAAG,GAAG,CAAC,EAAmD,IAA7CA,EAAK,QAAQ,IAAIA,EAAK,QAAQ,GAAG,GAAG,GAAGnH,IAAUA,GAA2H,GAAGA,GAAK,GAAG,CAAC,IAAIiT,GAAM9L,EAAK,QAAQ,IAAIA,EAAK,SAAS,EAAK8L,GAAM,IAAIA,GAAM,GAAG,CAACnM,GAAWK,EAAK,OAAO,KAAGnH,EAAI,EAAC,MAApO,CAACA,EAAI,GAAG,IAAIkT,GAAO/L,EAAK,QAAQ,EAAEA,EAAK,QAAQ,GAAG,GAAK+L,GAAO,GAAGA,GAAO,GAAGpM,GAAWK,EAAK,QAAQ,IAAI,CAAC,IAAGnH,GAAM,CAAoH,OAAOiS,EAAajS,EAAI,CAAC,CAAC,EAAE,KAAK,SAASmH,EAAK,CAAC,OAAOA,EAAK,OAAO,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIqJ,EAAKrJ,EAAK,QAAQ,GAAGA,EAAK,QAAQ,GAAG,EAAE,OAAO8K,EAAa,KAAK,MAAMzB,EAAK,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAASrJ,EAAK,CAAC,OAAOA,EAAK,QAAQ,MAAM,SAAS,EAAE,UAAU,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOA,EAAK,QAAQ,IAAI,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIgM,EAAIhM,EAAK,UAAciM,EAAMD,GAAK,EAAE,OAAAA,EAAI,KAAK,IAAIA,CAAG,EAAE,GAAGA,EAAIA,EAAI,GAAG,IAAIA,EAAI,IAAUC,EAAM,IAAI,KAAK,OAAO,OAAOD,CAAG,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,SAAShM,EAAK,CAAC,OAAOA,EAAK,OAAO,EAAE,KAAK,UAAU,CAAC,MAAM,GAAG,CAAC,EAAEqK,EAAQA,EAAQ,QAAQ,MAAM,MAAM,EAAE,QAAQE,KAAQqB,EAAsBvB,EAAQ,SAASE,CAAI,IAAGF,EAAQA,EAAQ,QAAQ,IAAI,OAAOE,EAAK,GAAG,EAAEqB,EAAkBrB,GAAMvK,CAAI,CAAC,GAAGqK,EAAQA,EAAQ,QAAQ,QAAQ,GAAG,EAAE,IAAI6B,EAAMzC,GAAmBY,EAAQ,EAAK,EAAE,OAAG6B,EAAM,OAAOjC,EAAgB,GAAEH,GAAmBoC,EAAMlC,CAAC,EAASkC,EAAM,OAAO,EAAC,CAAC,SAASC,GAAYnC,EAAEC,EAAQC,EAAOC,EAAGiC,EAAI,CAAC,OAAOrC,GAAUC,EAAEC,EAAQC,EAAOC,CAAE,CAAC,CAAC,SAASkC,IAAgB,CAAC1c,EAAI,iCAAiC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASmc,IAAoB,CAAC3c,EAAI,qCAAqC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASoc,IAAe,CAAC5c,EAAI,gCAAgC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASqc,IAAwB,CAAC7c,EAAI,yCAAyC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASsc,IAAkB,CAAC9c,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASuc,IAAmB,CAAC/c,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASwc,IAA0B,CAAChd,EAAI,2CAA2C,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASyc,IAAoB,CAACjd,EAAI,qCAAqC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS0c,IAAiB,CAACld,EAAI,kCAAkC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS2c,IAAoB,CAACnd,EAAI,qCAAqC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS4c,IAAW,CAACpd,EAAI,4BAA4B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS6c,IAAsB,CAACrd,EAAI,uCAAuC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS8c,IAAwB,CAACtd,EAAI,yCAAyC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS+c,IAA0B,CAACvd,EAAI,2CAA2C,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASgd,IAAmB,CAACxd,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASid,IAAmB,CAACzd,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASkd,IAAkB,CAAC1d,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASmd,IAAgB,CAAC3d,EAAI,iCAAiC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASod,IAAU,CAAC5d,EAAI,2BAA2B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASqd,IAAW,CAAC7d,EAAI,4BAA4B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASsd,IAAqB,CAAC9d,EAAI,sCAAsC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASud,IAAqB,CAAC/d,EAAI,sCAAsC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASwd,GAAWC,EAAK,CAACtd,GAAWsd,EAASjc,GAAiB,IAAM/D,EAAO,QAAUA,EAAO,OAAUggB,CAAI,EAAEvd,GAAM,IAAKjC,EAAMwf,EAAK,IAAItZ,GAAWsZ,CAAI,CAAC,CAAC,CAAC,SAASC,GAAOxf,EAAOyf,EAAS,CAACxd,GAAWjC,EAAOsf,GAAWtf,CAAM,CAAC,CAAC,SAAS0f,GAAgBlb,EAAE,CAAC,GAAGA,aAAayB,IAAYzB,GAAG,SAAU,OAAOvC,GAAWlC,EAAM,EAAEyE,CAAC,CAAC,CAAC,SAASmb,GAASC,EAAM,CAAC,IAAIC,EAAKtgB,EAAO,IAAIqgB,GAAO,OAAOC,CAAI,CAAC,SAASC,GAAoBtX,EAAI,CAAC,IAAI0G,EAAKoD,GAAgB9J,CAAG,EAAE,EAAMrH,EAAI4e,GAAW7Q,CAAI,EAAE,OAAAP,GAAanG,EAAIrH,EAAI+N,CAAI,EAAS/N,CAAG,CAAC,SAAS6e,GAAMJ,EAAMK,EAAWC,EAASC,EAAKC,EAAK,CAAC,IAAIC,EAAI,CAAC,OAAS7X,GAAK,CAAC,IAAIrH,EAAI,EAAE,OAAGqH,GAAM,MAAuBA,IAAM,IAAGrH,EAAI2e,GAAoBtX,CAAG,GAASrH,CAAG,EAAE,MAAQmf,GAAK,CAAC,IAAInf,EAAI4e,GAAWO,EAAI,MAAM,EAAE,OAAA7E,GAAmB6E,EAAInf,CAAG,EAASA,CAAG,CAAC,EAAE,SAASof,EAAmBpf,EAAI,CAAC,OAAG8e,IAAa,SAAiBpX,GAAa1H,CAAG,EAAK8e,IAAa,UAAiB,QAAQ9e,CAAG,EAASA,CAAG,CAAC,IAAI0e,EAAKF,GAASC,CAAK,EAAMY,EAAM,CAAC,EAAMC,EAAM,EAAE,GAAGN,EAAM,QAAQ1U,EAAE,EAAEA,EAAE0U,EAAK,OAAO1U,IAAI,CAAC,IAAIiV,EAAUL,EAAIH,EAASzU,IAAOiV,GAAcD,IAAQ,IAAEA,EAAME,GAAU,GAAEH,EAAM/U,GAAGiV,EAAUP,EAAK1U,EAAE,GAAO+U,EAAM/U,GAAG0U,EAAK1U,EAAG,CAAE,IAAItK,EAAI0e,EAAK,MAAM,KAAKW,CAAK,EAAE,SAASI,GAAOzf,EAAI,CAAC,OAAGsf,IAAQ,GAAEI,GAAaJ,CAAK,EAASF,EAAmBpf,CAAG,CAAC,CAAC,OAAAA,EAAIyf,GAAOzf,CAAG,EAASA,CAAG,CAAC,IAAIuE,GAAY,CAAC,EAAIS,GAAe,EAAIC,GAAkB,GAAKC,GAAW,EAAIC,GAAiB,EAAIC,GAAkB,EAAIC,GAAgB,EAAIC,GAAkB,EAAIC,GAA6B,EAAIC,GAAuB,EAAIC,GAAiB,EAAIC,GAAgB,EAAIa,GAAa,GAAKG,GAAS,GAAKkB,GAAsB,GAAKqE,GAAgB,GAAKK,GAAmB,GAAKC,GAAqB,EAAIG,GAAmB,GAAKG,GAAmB,EAAIE,GAAuB,GAAKW,GAAsB,GAAKO,GAAuB,GAAKE,GAAsB,EAAIK,GAAiB,GAAKE,GAAmB,GAAKC,GAAmB,GAAKE,GAAsB,EAAIC,GAAkB,GAAKC,GAAoB,GAAKE,GAAoB,EAAIK,GAAiB,GAAKC,GAAkB,EAAII,GAAkB,GAAKG,GAAkB,EAAIC,GAAoB,GAAKE,GAAkC,GAAKW,GAAe,GAAKW,GAAW,EAAIc,GAAO,GAAKC,GAAQ,GAAKC,GAAgC,GAAKE,GAAgC,GAAKC,GAAoC,GAAKC,GAAgC,EAAIC,GAA0B,GAAKE,GAA2B,EAAIC,GAA2C,GAAKC,GAAyB,GAAKK,GAAyB,EAAIC,GAAyB,GAAKE,GAA6B,EAAIE,GAA0B,GAAKC,GAAyC,GAAKC,GAAoB,EAAIC,GAAkC,GAAKE,GAA4B,EAAIM,GAAqB,GAAKE,GAAyB,EAAIC,GAAoB,GAAKC,GAAuB,GAAKM,GAAwB,EAAIkB,GAAa,EAAIK,GAAmB,EAAIG,GAAU,GAAKC,GAAe,EAAII,GAAU,EAAIM,GAAW,EAAIC,GAAS,EAAIC,GAAS,GAAKG,GAAS,EAAII,GAAU,EAAIE,GAAa,GAAKe,GAAY,GAAKC,GAAa,GAAK4D,GAAY,EAAIE,GAAe,EAAIC,GAAmB,EAAIC,GAAc,EAAIC,GAAuB,EAAIC,GAAiB,GAAKC,GAAkB,EAAIC,GAAyB,EAAIC,GAAmB,GAAKC,GAAgB,GAAKC,GAAmB,EAAIC,GAAU,EAAIC,GAAqB,EAAIC,GAAuB,EAAIC,GAAyB,EAAIC,GAAkB,EAAIC,GAAkB,EAAIC,GAAiB,EAAIC,GAAe,EAAIC,GAAS,EAAIC,GAAU,EAAIC,GAAoB,EAAIC,EAAmB,EAAMyB,GAAItb,GAAW,EAAMub,GAAmB,UAAU,CAAC,OAAOA,GAAmBxhB,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMyhB,GAAMzhB,EAAO,MAAS,UAAU,CAAC,OAAOyhB,GAAMzhB,EAAO,MAASA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM0hB,GAA6B1hB,EAAO,6BAAgC,UAAU,CAAC,OAAO0hB,GAA6B1hB,EAAO,6BAAgCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM2hB,GAA2B3hB,EAAO,2BAA8B,UAAU,CAAC,OAAO2hB,GAA2B3hB,EAAO,2BAA8BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM4hB,GAAsB5hB,EAAO,sBAAyB,UAAU,CAAC,OAAO4hB,GAAsB5hB,EAAO,sBAAyBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM6hB,GAAkB7hB,EAAO,kBAAqB,UAAU,CAAC,OAAO6hB,GAAkB7hB,EAAO,kBAAqBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM8hB,GAAoB9hB,EAAO,oBAAuB,UAAU,CAAC,OAAO8hB,GAAoB9hB,EAAO,oBAAuBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM+hB,GAAuB/hB,EAAO,uBAA0B,UAAU,CAAC,OAAO+hB,GAAuB/hB,EAAO,uBAA0BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMgiB,GAAwBhiB,EAAO,wBAA2B,UAAU,CAAC,OAAOgiB,GAAwBhiB,EAAO,wBAA2BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMiiB,GAAuBjiB,EAAO,uBAA0B,UAAU,CAAC,OAAOiiB,GAAuBjiB,EAAO,uBAA0BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMkiB,GAAiBliB,EAAO,iBAAoB,UAAU,CAAC,OAAOkiB,GAAiBliB,EAAO,iBAAoBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMmiB,GAAiCniB,EAAO,iCAAoC,UAAU,CAAC,OAAOmiB,GAAiCniB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMoiB,GAA+BpiB,EAAO,+BAAkC,UAAU,CAAC,OAAOoiB,GAA+BpiB,EAAO,+BAAkCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMqiB,GAA8BriB,EAAO,8BAAiC,UAAU,CAAC,OAAOqiB,GAA8BriB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMsiB,GAAyBtiB,EAAO,yBAA4B,UAAU,CAAC,OAAOsiB,GAAyBtiB,EAAO,yBAA4BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMuiB,GAA0BviB,EAAO,0BAA6B,UAAU,CAAC,OAAOuiB,GAA0BviB,EAAO,0BAA6BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMwiB,GAA+BxiB,EAAO,+BAAkC,UAAU,CAAC,OAAOwiB,GAA+BxiB,EAAO,+BAAkCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMyiB,GAAmCziB,EAAO,mCAAsC,UAAU,CAAC,OAAOyiB,GAAmCziB,EAAO,mCAAsCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM0iB,GAAqC1iB,EAAO,qCAAwC,UAAU,CAAC,OAAO0iB,GAAqC1iB,EAAO,qCAAwCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM2iB,GAAiC3iB,EAAO,iCAAoC,UAAU,CAAC,OAAO2iB,GAAiC3iB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM4iB,GAAoC5iB,EAAO,oCAAuC,UAAU,CAAC,OAAO4iB,GAAoC5iB,EAAO,oCAAuCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM6iB,GAAgC7iB,EAAO,gCAAmC,UAAU,CAAC,OAAO6iB,GAAgC7iB,EAAO,gCAAmCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM8iB,GAA8B9iB,EAAO,8BAAiC,UAAU,CAAC,OAAO8iB,GAA8B9iB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM+iB,GAAwB/iB,EAAO,wBAA2B,UAAU,CAAC,OAAO+iB,GAAwB/iB,EAAO,wBAA2BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMgjB,GAA8BhjB,EAAO,8BAAiC,UAAU,CAAC,OAAOgjB,GAA8BhjB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMijB,GAAqBjjB,EAAO,qBAAwB,UAAU,CAAC,OAAOijB,GAAqBjjB,EAAO,qBAAwBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMkjB,GAA8BljB,EAAO,8BAAiC,UAAU,CAAC,OAAOkjB,GAA8BljB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMmjB,GAA4BnjB,EAAO,4BAA+B,UAAU,CAAC,OAAOmjB,GAA4BnjB,EAAO,4BAA+BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMojB,GAA2BpjB,EAAO,2BAA8B,UAAU,CAAC,OAAOojB,GAA2BpjB,EAAO,2BAA8BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMqjB,GAAyBrjB,EAAO,yBAA4B,UAAU,CAAC,OAAOqjB,GAAyBrjB,EAAO,yBAA4BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMsjB,GAA0BtjB,EAAO,0BAA6B,UAAU,CAAC,OAAOsjB,GAA0BtjB,EAAO,0BAA6BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMujB,GAAsBvjB,EAAO,sBAAyB,UAAU,CAAC,OAAOujB,GAAsBvjB,EAAO,sBAAyBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMwjB,GAAgCxjB,EAAO,gCAAmC,UAAU,CAAC,OAAOwjB,GAAgCxjB,EAAO,gCAAmCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMyjB,GAA+BzjB,EAAO,+BAAkC,UAAU,CAAC,OAAOyjB,GAA+BzjB,EAAO,+BAAkCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM0jB,GAAiC1jB,EAAO,iCAAoC,UAAU,CAAC,OAAO0jB,GAAiC1jB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM2jB,GAAgC3jB,EAAO,gCAAmC,UAAU,CAAC,OAAO2jB,GAAgC3jB,EAAO,gCAAmCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM4jB,GAA2B5jB,EAAO,2BAA8B,UAAU,CAAC,OAAO4jB,GAA2B5jB,EAAO,2BAA8BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM6jB,GAAyC7jB,EAAO,yCAA4C,UAAU,CAAC,OAAO6jB,GAAyC7jB,EAAO,yCAA4CA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM8jB,GAAiC9jB,EAAO,iCAAoC,UAAU,CAAC,OAAO8jB,GAAiC9jB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM+jB,GAAkC/jB,EAAO,kCAAqC,UAAU,CAAC,OAAO+jB,GAAkC/jB,EAAO,kCAAqCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMgkB,GAAkB,UAAU,CAAC,OAAOA,GAAkBhkB,EAAO,IAAO,kBAAqB,MAAM,KAAK,SAAS,CAAC,EAAMma,GAAO,UAAU,CAAC,OAAOA,GAAOna,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMqN,GAAO,UAAU,CAAC,OAAOA,GAAOrN,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMsM,GAAO,UAAU,CAAC,OAAOA,GAAOtM,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMkT,GAAQlT,EAAO,QAAW,UAAU,CAAC,OAAOkT,GAAQlT,EAAO,QAAWA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMikB,GAAMjkB,EAAO,MAAS,UAAU,CAAC,OAAOikB,GAAMjkB,EAAO,MAASA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMohB,GAAU,UAAU,CAAC,OAAOA,GAAUphB,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMshB,GAAa,UAAU,CAAC,OAAOA,GAAathB,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMwgB,GAAW,UAAU,CAAC,OAAOA,GAAWxgB,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM+H,GAAuB,UAAU,CAAC,OAAOA,GAAuB/H,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAEA,EAAO,WAAcwgB,GAAWxgB,EAAO,UAAaohB,GAAUphB,EAAO,aAAgBshB,GAAathB,EAAO,MAASygB,GAAM,IAAIyD,EAAUvf,GAAsB,SAASwf,GAAW,CAAKD,GAAUE,EAAI,EAAMF,IAAUvf,GAAsBwf,EAAS,EAAE,SAASE,GAAU,CAAC,IAAIC,EAAc7C,GAAU8C,EAAK,EAAMC,EAAK,EAAE,GAAG,CAAC,IAAI5iB,EAAI0iB,EAAcC,EAAKC,CAAI,EAAE,OAAAvE,GAAOre,EAAI,EAAI,EAASA,CAAG,OAAOqD,EAAN,CAAS,OAAOkb,GAAgBlb,CAAC,CAAC,CAAC,CAAC,SAASmf,GAAK,CAAuC,GAAnC3f,GAAgB,IAAUT,GAAO,EAAKS,GAAgB,GAAG,OAAO,SAASggB,GAAO,CAAIP,IAAiBA,EAAU,GAAKlkB,EAAO,UAAa,GAAQ,CAAAyC,KAAa0B,GAAY,EAAEC,GAAQ,EAAEnE,EAAoBD,CAAM,EAAKA,EAAO,sBAAwBA,EAAO,qBAAwB,EAAK0kB,GAAaL,EAAS,EAAEhgB,GAAQ,GAAC,CAAIrE,EAAO,WAAcA,EAAO,UAAa,YAAY,EAAE,WAAW,UAAU,CAAC,WAAW,UAAU,CAACA,EAAO,UAAa,EAAE,CAAC,EAAE,CAAC,EAAEykB,EAAM,CAAC,EAAE,CAAC,GAAOA,EAAM,CAAE,CAAC,GAAGzkB,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,OAAO,GAAGA,EAAO,QAAW,IAAI,EAAE,EAAG,IAAI0kB,EAAa,GAAK,OAAG1kB,EAAO,eAAgB0kB,EAAa,IAAMN,EAAI,EAGl7pDtkB,EAAO,KAChB,CAGA,GAAG,EACI6kB,GAAQ7kB,GCPR,IAAe8kB,GAAf,cAA6CC,EAAmB,CAO5D,YAAYC,EAAgBC,EAAwBC,EAAuBC,EAAiC,CAC/G,MAAMH,EAAQC,CAAO,EACrB,KAAK,cAAgBC,EACrB,KAAK,iBAAmBC,CAC5B,CAGU,WAAWC,EAAcC,EAAwB,CACvD,GAAID,EAAK,SAAS,OAAO,EACrB,OAAO,KAAK,cAEhB,GAAIA,EAAK,SAAS,YAAY,EAAG,CAC7B,GAAI,CAAC,KAAK,iBACN,MAAM,IAAI,MAAM,4BAA4B,EAEhD,OAAO,KAAK,gBAChB,CACA,MAAM,IAAI,MAAM,wDAAwDC,UAAeD,GAAM,CACjG,CAGU,gBAENE,EACAC,EAC6B,CAS7B,WAAW,eAAiB,KAAK,SACjC,IAAMC,EAAW,KAAK,wBAGtB,GAAI,YAAY,qBAEZ,GAAI,OAAO,iBAAoB,WAAY,CAmCvC,IAAMC,GAlCoB,SAAY,CAxDtD,IAAAC,GA0DoB,IAAMC,EAAU,IAAI,QAAQ,KAAK,aAAa,EACxCF,EAAW,MAAM,MAAME,CAAO,EAC9BC,EAAmBH,EAAS,QAAQ,IAAI,gBAAgB,EACxDI,EAAgBD,GAAmB,SAASA,EAAkB,EAAE,GAAK,EAGrEE,EAAQ,IAAI,KACZC,EAAkC,CACpC,UAAWD,EACX,UAAWA,EACX,WAAYD,GAAiB,EAC7B,YAAa,CACjB,EACMG,EAAU,CACZ,UAAUC,GAAYC,GAAwC,CAC1DH,EAAS,aAAeE,GAAM,WAC9B,IAAME,GAAM,IAAI,KAChB,GAAIA,GAAI,QAAQ,EAAIJ,EAAS,UAAU,QAAQ,EAAI,GAAI,CACnDA,EAAS,UAAYI,GACrBD,GAAK,QAAQD,EAAK,EAClB,MACJ,CACA,QAAWG,MAAKZ,EACZY,GAAEL,CAAQ,EAEdG,GAAK,QAAQD,EAAK,CACtB,CACJ,EACMI,GAAK,IAAI,gBAAgBL,CAAO,EACtC,OAAO,IAAI,UAASN,GAAAD,EAAS,OAAT,YAAAC,GAAe,YAAYW,IAAKZ,CAAQ,CAChE,GAEmC,EACnC,YAAY,qBAAqBA,EAAUH,CAAO,EAAE,KAAKgB,GAAU,CAC/Df,EAAQe,EAAO,SAAUA,EAAO,MAAM,CAC1C,CAAC,CACL,KAAO,CACH,QAAQ,KAAK,gFAAgF,EAC7F,IAAMX,EAAU,IAAI,QAAQ,KAAK,aAAa,EAC9C,YAAY,qBAAqB,MAAMA,CAAO,EAAGL,CAAO,EAAE,KAAKgB,GAAU,CACrEf,EAAQe,EAAO,SAAUA,EAAO,MAAM,CAC1C,CAAC,CACL,SACO,OAAO,gBAAkB,WAAY,CAE5C,IAAMC,EAAM,IAAI,eACVC,EAAM,KAAK,cACXV,EAAQ,IAAI,KACZC,EAAkC,CACpC,UAAWD,EACX,UAAWA,EACX,WAAY,EACZ,YAAa,CACjB,EACAS,EAAI,KAAK,MAAOC,CAAG,EACnBD,EAAI,aAAe,cACnBA,EAAI,QAAUE,GAAS,CACnB,WAAK,OAAO,IAAI,CACZ,UAAW,IAAI,KACf,QACA,SACA,QACA,QACA,MAAO,wBAA0BA,CACrC,CAAC,EACK,IAAI,MAAMA,EAAM,SAAS,CAAC,CACpC,EACAF,EAAI,WAAaG,GAAK,CAClBX,EAAS,WAAaW,EAAE,MACxBX,EAAS,YAAcW,EAAE,OACzB,IAAMP,EAAM,IAAI,KAChB,GAAIA,EAAI,QAAQ,EAAIJ,EAAS,UAAU,QAAQ,EAAI,GAAI,CACnDA,EAAS,UAAYI,EACrB,MACJ,CACA,QAAWC,KAAKZ,EACZY,EAAEL,CAAQ,CAElB,EACAQ,EAAI,OAAS,IAAM,CACf,YAAY,YAAYA,EAAI,SAAUjB,CAAO,EACxC,KAAKgB,GAAU,CACZf,EAAQe,EAAO,SAAUA,EAAO,MAAM,CAC1C,CAAC,EACA,MAAMG,GAAS,CACZ,WAAK,OAAO,IAAI,CACZ,UAAW,IAAI,KACf,QACA,SACA,QACA,QACA,MAAO,+BAAiCA,CAC5C,CAAC,EACK,IAAI,MAAMA,CAAK,CACzB,CAAC,CACT,EACAF,EAAI,KAAK,CACb,MACI,QAAQ,KAAK,wFAAwF,GACzF,SAAY,CACpB,IAAMZ,EAAU,IAAI,QAAQ,KAAK,aAAa,EAExCgB,EAAS,MADE,MAAM,MAAMhB,CAAO,GACN,YAAY,EAC1C,YAAY,YAAYgB,EAAQrB,CAAO,EAAE,KAAKgB,GAAU,CACpDf,EAAQe,EAAO,SAAUA,EAAO,MAAM,CAC1C,CAAC,CACL,GACI,EAER,MAAO,CAAC,CACZ,CAIJ,ECrKO,IAAMM,GAAN,cAAqBC,EAAsB,CAEvC,YACHC,EACAC,EACAC,EACAC,EAAkC,KACpC,CACE,MAAMH,EAAQC,EAASC,EAAeC,CAAgB,CAC1D,CAGU,gBAAgBC,EAA+D,CACrF,OAAOC,GAAW,CACd,GAAGD,EACH,gBAAiB,KAAK,gBAAgB,KAAK,IAAI,EAC/C,WAAY,KAAK,WAAW,KAAK,IAAI,CACzC,CAAC,CACL,CACJ,ECzBA,IAAIE,IAAU,IAAM,CAClB,IAAIC,EAAa,YAAY,IAE7B,OACF,eAAeD,EAAS,CAAC,EAAI,CAE7B,IAAIE,EAAO,OAAOF,EAAQ,IAAYA,EAAO,CAAC,EAAMG,EAAoBC,EAAmBF,EAAO,MAAS,IAAI,QAAQ,CAACG,EAAQC,IAAS,CAACH,EAAoBE,EAAQD,EAAmBE,CAAM,CAAC,EAAE,IAAIC,EAAgB,OAAO,OAAO,CAAC,EAAEL,CAAM,EAAMM,EAAW,CAAC,EAAMC,EAAY,iBAAqBC,EAAM,CAACC,EAAOC,IAAU,CAAC,MAAMA,CAAO,EAAMC,EAAmB,OAAO,QAAQ,SAAaC,EAAsB,OAAO,eAAe,WAAeC,EAAoB,OAAO,SAAS,UAAU,OAAO,QAAQ,UAAU,UAAU,OAAO,QAAQ,SAAS,MAAM,SAAaC,EAAgB,GAAG,SAASC,EAAWC,EAAK,CAAC,OAAGhB,EAAO,WAAsBA,EAAO,WAAcgB,EAAKF,CAAe,EAASA,EAAgBE,CAAI,CAAC,IAAIC,GAAMC,GAAUC,GAAWC,GAAe,GAAGP,EAAoB,CAAC,GAAK,CAAC,cAAcQ,CAAa,EAAE,KAAM,kCAAO,YAAU,IAAIC,GAAQD,EAAc,YAAY,GAAG,EAAME,GAAGD,GAAQ,IAAI,EAAME,GAASF,GAAQ,MAAM,EAAKV,EAAuBE,EAAgBU,GAAS,QAAQV,CAAe,EAAE,IAASA,EAAgBQ,GAAQ,KAAK,EAAE,cAAc,IAAI,IAAI,KAAK,YAAY,GAAG,CAAC,EAAEL,GAAM,CAACQ,EAASC,KAAUD,EAASE,GAAUF,CAAQ,EAAE,IAAI,IAAIA,CAAQ,EAAED,GAAS,UAAUC,CAAQ,EAASF,GAAG,aAAaE,EAASC,EAAO,OAAU,MAAM,GAAGP,GAAWM,GAAU,CAAC,IAAIG,EAAIX,GAAMQ,EAAS,EAAI,EAAE,OAAIG,EAAI,SAAQA,EAAI,IAAI,WAAWA,CAAG,GAASA,CAAG,EAAEV,GAAU,CAACO,EAASI,EAAOC,EAAQJ,EAAO,KAAO,CAACD,EAASE,GAAUF,CAAQ,EAAE,IAAI,IAAIA,CAAQ,EAAED,GAAS,UAAUC,CAAQ,EAAEF,GAAG,SAASE,EAASC,EAAO,OAAU,OAAO,CAACK,EAAIC,IAAO,CAAID,EAAID,EAAQC,CAAG,EAAOF,EAAOH,EAAOM,EAAK,OAAOA,CAAI,CAAC,CAAC,CAAC,EAAK,CAAChC,EAAO,aAAgB,QAAQ,KAAK,OAAO,IAAGO,EAAY,QAAQ,KAAK,GAAG,QAAQ,MAAM,GAAG,GAAED,EAAW,QAAQ,KAAK,MAAM,CAAC,EAAEE,EAAM,CAACC,EAAOC,IAAU,CAAC,cAAQ,SAASD,EAAaC,CAAO,EAAEV,EAAO,QAAW,IAAI,4BAA4B,MAASW,GAAoBC,KAA0BA,EAAuBE,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOf,IAAYe,EAAgBf,GAAce,EAAgB,QAAQ,OAAO,IAAI,EAAGA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAOA,EAAgB,GAAIG,GAAMgB,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAASA,EAAI,YAAY,EAAKtB,IAAuBO,GAAWc,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEhB,GAAU,CAACe,EAAIJ,EAAOC,IAAU,CAAC,IAAII,EAAI,IAAI,eAAeA,EAAI,KAAK,MAAMD,EAAI,EAAI,EAAEC,EAAI,aAAa,cAAcA,EAAI,OAAO,IAAI,CAAC,GAAGA,EAAI,QAAQ,KAAKA,EAAI,QAAQ,GAAGA,EAAI,SAAS,CAACL,EAAOK,EAAI,QAAQ,EAAE,MAAM,CAACJ,EAAQ,CAAC,EAAEI,EAAI,QAAQJ,EAAQI,EAAI,KAAK,IAAI,CAAC,EAAEd,GAAee,GAAO,SAAS,MAAMA,GAAY,IAAIC,GAAIpC,EAAO,OAAU,QAAQ,IAAI,KAAK,OAAO,EAAM+B,EAAI/B,EAAO,UAAa,QAAQ,MAAM,KAAK,OAAO,EAAE,OAAO,OAAOA,EAAOK,CAAe,EAAEA,EAAgB,KAAQL,EAAO,YAAaM,EAAWN,EAAO,WAAgBA,EAAO,cAAeO,EAAYP,EAAO,aAAkBA,EAAO,OAAQQ,EAAMR,EAAO,MAAQ,IAAIqC,GAAcrC,EAAO,aAAcqC,GAAWrC,EAAO,YAAc,IAAIsC,GAActC,EAAO,eAAkB,GAAQ,OAAO,aAAa,UAAUuC,EAAM,iCAAiC,EAAE,IAAIC,EAAeC,GAAM,GAAUC,GAAW,SAASC,GAAOC,EAAUC,EAAK,CAAKD,GAAWL,EAAMM,CAAI,CAAE,CAAC,IAAIC,EAAMC,EAAOC,EAAOC,GAAQC,EAAOC,EAAQC,GAAQC,GAAQ,SAASC,IAAmB,CAAC,IAAIC,EAAEf,EAAW,OAAOxC,EAAO,MAAS8C,EAAM,IAAI,UAAUS,CAAC,EAAEvD,EAAO,OAAUgD,EAAO,IAAI,WAAWO,CAAC,EAAEvD,EAAO,OAAUkD,EAAO,IAAI,WAAWK,CAAC,EAAEvD,EAAO,OAAU+C,EAAO,IAAI,WAAWQ,CAAC,EAAEvD,EAAO,QAAWiD,GAAQ,IAAI,YAAYM,CAAC,EAAEvD,EAAO,QAAWmD,EAAQ,IAAI,YAAYI,CAAC,EAAEvD,EAAO,QAAWoD,GAAQ,IAAI,aAAaG,CAAC,EAAEvD,EAAO,QAAWqD,GAAQ,IAAI,aAAaE,CAAC,CAAC,CAAC,IAAIC,GAAcC,GAAa,CAAC,EAAMC,GAAW,CAAC,EAAMC,GAAW,CAAC,EAAMC,GAAc,CAAC,EAAMC,GAAmB,GAAUC,GAAwB,EAAE,SAASC,IAAkB,CAAC,OAAOzB,IAAewB,GAAwB,CAAC,CAAC,SAASE,IAAQ,CAAC,GAAGhE,EAAO,OAAsF,IAAxE,OAAOA,EAAO,QAAW,aAAWA,EAAO,OAAU,CAACA,EAAO,MAAS,GAAQA,EAAO,OAAU,QAAQiE,GAAYjE,EAAO,OAAU,MAAM,CAAC,EAAGkE,GAAqBT,EAAY,CAAC,CAAC,SAASU,IAAa,CAACN,GAAmB,GAAKK,GAAqBR,EAAU,CAAC,CAAC,SAASU,IAAS,CAACF,GAAqBP,EAAU,CAAC,CAAC,SAASU,IAAS,CAAC,GAAGrE,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,QAAQsE,GAAatE,EAAO,QAAW,MAAM,CAAC,EAAGkE,GAAqBN,EAAa,CAAC,CAAC,SAASK,GAAYM,EAAG,CAACd,GAAa,QAAQc,CAAE,CAAC,CAAC,SAASC,GAAUD,EAAG,CAACb,GAAW,QAAQa,CAAE,CAAC,CAAC,SAASD,GAAaC,EAAG,CAACX,GAAc,QAAQW,CAAE,CAAC,CAAC,IAAIE,GAAgB,EAAMC,GAAqB,KAASC,GAAsB,KAAK,SAASC,GAAiBC,EAAG,CAACJ,KAAqBzE,EAAO,wBAA2BA,EAAO,uBAA0ByE,EAAe,CAAE,CAAC,SAASK,GAAoBD,EAAG,CAA0G,GAAzGJ,KAAqBzE,EAAO,wBAA2BA,EAAO,uBAA0ByE,EAAe,EAAKA,IAAiB,IAAMC,KAAuB,OAAM,cAAcA,EAAoB,EAAEA,GAAqB,MAAQC,IAAsB,CAAC,IAAII,EAASJ,GAAsBA,GAAsB,KAAKI,EAAS,CAAC,CAAE,CAAC,SAASxC,EAAMyC,EAAK,CAAIhF,EAAO,SAAYA,EAAO,QAAWgF,CAAI,EAAEA,EAAK,WAAWA,EAAK,IAAIjD,EAAIiD,CAAI,EAAEvC,GAAM,GAAKC,GAAW,EAAEsC,GAAM,2CAA8CnB,IAAoBoB,GAAQ,EAAE,IAAIC,EAAE,IAAI,YAAY,aAAaF,CAAI,EAAE,MAAA9E,EAAmBgF,CAAC,EAAQA,CAAC,CAAC,IAAIC,GAAc,wCAAwC,SAASC,GAAU3D,EAAS,CAAC,OAAOA,EAAS,WAAW0D,EAAa,CAAC,CAAC,SAASxD,GAAUF,EAAS,CAAC,OAAOA,EAAS,WAAW,SAAS,CAAC,CAAC,IAAI4D,GAAkBrF,EAAO,YAAeqF,GAAe,mBAAuBD,GAAUC,EAAc,IAAGA,GAAetE,EAAWsE,EAAc,IAAQA,GAAe,IAAI,IAAI,mBAAmB,YAAY,GAAG,EAAE,KAAK,SAASC,GAAUC,EAAK,CAAC,GAAG,CAAC,GAAGA,GAAMF,IAAgBhD,GAAY,OAAO,IAAI,WAAWA,EAAU,EAAE,GAAGlB,GAAY,OAAOA,GAAWoE,CAAI,EAAE,KAAK,iDAAiD,OAAOxD,EAAN,CAAWQ,EAAMR,CAAG,CAAC,CAAC,CAAC,SAASyD,GAAiBC,EAAW,CAAC,MAAG,CAACpD,KAAa1B,GAAoBC,IAA2B,OAAO,OAAO,WAAmB,MAAM6E,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKC,GAAU,CAAC,GAAG,CAACA,EAAS,GAAO,KAAK,uCAAuCD,EAAW,IAAI,OAAOC,EAAS,YAAe,CAAC,CAAC,EAAE,MAAM,IAAIJ,GAAUG,CAAU,CAAC,EAAU,QAAQ,QAAQ,EAAE,KAAK,IAAIH,GAAUG,CAAU,CAAC,CAAC,CAAC,SAASE,GAAuBF,EAAWG,EAAQC,EAAS,CAAC,OAAOL,GAAiBC,CAAU,EAAE,KAAK/D,GAAgB,YAAY,YAAYA,EAAOkE,CAAO,CAAE,EAAE,KAAKE,GAAkBA,CAAS,EAAE,KAAKD,EAASE,GAAQ,CAAChE,EAAI,0CAA0CgE,CAAM,EAAExD,EAAMwD,CAAM,CAAC,CAAC,CAAC,CAAC,SAASC,GAAiBtE,EAAO+D,EAAWG,EAAQb,EAAS,CAAC,MAAG,CAACrD,GAAQ,OAAO,YAAY,sBAAsB,YAAY,CAAC0D,GAAUK,CAAU,GAAG,CAAC5E,GAAqB,OAAO,OAAO,WAAmB,MAAM4E,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKC,GAAU,CAAC,IAAIO,EAAO,YAAY,qBAAqBP,EAASE,CAAO,EAAE,OAAOK,EAAO,KAAKlB,EAAS,SAASgB,EAAO,CAAC,OAAAhE,EAAI,kCAAkCgE,CAAM,EAAEhE,EAAI,2CAA2C,EAAS4D,GAAuBF,EAAWG,EAAQb,CAAQ,CAAC,CAAC,CAAC,CAAC,EAAcY,GAAuBF,EAAWG,EAAQb,CAAQ,CAAE,CAAC,SAASmB,IAAY,CAAC,IAAIC,EAAK,CAAC,EAAIC,EAAW,EAAE,SAASC,EAAgBP,EAASQ,EAAO,CAAC,IAAIC,EAAQT,EAAS,QAAQ,OAAA9F,EAAO,IAAOuG,EAAQ/D,EAAWxC,EAAO,IAAO,GAAMsD,GAAkB,EAAEE,GAAUxD,EAAO,IAAO,GAAMwE,GAAUxE,EAAO,IAAO,EAAK,EAAE8E,GAAoB,kBAAkB,EAASyB,CAAO,CAAC3B,GAAiB,kBAAkB,EAAE,SAAS4B,EAA2BP,EAAO,CAACI,EAAgBJ,EAAO,QAAW,CAAC,CAAC,GAAGjG,EAAO,gBAAoB,GAAG,CAAC,OAAOA,EAAO,gBAAmBmG,EAAKE,CAAe,CAAC,OAAOnB,EAAN,CAASnD,EAAI,sDAAsDmD,CAAC,EAAEhF,EAAmBgF,CAAC,CAAC,CAAE,OAAAc,GAAiB3D,GAAWgD,GAAec,EAAKK,CAA0B,EAAE,MAAMtG,CAAkB,EAAQ,CAAC,CAAC,CAAC,IAAIuG,EAAeC,GAAQ,SAASC,GAAWlG,EAAO,CAAC,KAAK,KAAK,aAAa,KAAK,QAAQ,gCAAgCA,KAAU,KAAK,OAAOA,CAAM,CAAC,SAASyD,GAAqB0C,EAAU,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAM,EAAE5G,CAAM,CAAE,CAAC,SAAS6G,IAAgB,CAAC9E,EAAI,iCAAiC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASuE,IAAmB,CAAC/E,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASwE,IAAY,CAAChF,EAAI,6BAA6B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASyE,IAAkB,CAACjF,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS0E,IAAmB,CAAClF,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS2E,IAAiB,CAACnF,EAAI,kCAAkC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS4E,IAAmB,CAACpF,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS6E,IAA8B,CAACrF,EAAI,+CAA+C,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS8E,IAAwB,CAACtF,EAAI,yCAAyC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS+E,IAAkB,CAACvF,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASgF,IAAiB,CAACxF,EAAI,kCAAkC,EAAEQ,EAAM,EAAE,CAAC,CAAC,IAAIiF,GAAmB,iHAAiH,SAASC,GAASC,EAAOC,EAAOC,EAAG,CAACrF,EAAMiF,EAAkB,CAAC,CAAC,IAAIK,GAAY,OAAO,YAAa,IAAY,IAAI,YAAY,MAAM,EAAE,OAAU,SAASC,GAAkBC,EAAYC,EAAIC,EAAe,CAACD,KAAO,EAA+C,QAAzCE,EAAOF,EAAIC,EAAmBE,EAAOH,EAAUD,EAAYI,IAAS,EAAEA,GAAQD,IAAQ,EAAEC,EAAO,GAAGA,EAAOH,EAAI,IAAID,EAAY,QAAQF,GAAa,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAIG,CAAM,CAAC,EAAa,QAAPC,EAAI,GAASJ,EAAIG,GAAO,CAAC,IAAIE,EAAGN,EAAYC,KAAO,GAAG,EAAEK,EAAG,KAAK,CAACD,GAAK,OAAO,aAAaC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGP,EAAYC,KAAO,GAAG,IAAIK,EAAG,MAAM,IAAI,CAACD,GAAK,OAAO,cAAcC,EAAG,KAAK,EAAEC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGR,EAAYC,KAAO,GAAmG,IAA5FK,EAAG,MAAM,IAAKA,GAAIA,EAAG,KAAK,GAAGC,GAAI,EAAEC,EAAQF,GAAIA,EAAG,IAAI,GAAGC,GAAI,GAAGC,GAAI,EAAER,EAAYC,KAAO,GAAMK,EAAG,MAAOD,GAAK,OAAO,aAAaC,CAAE,MAAM,CAAC,IAAIG,EAAGH,EAAG,MAAMD,GAAK,OAAO,aAAa,MAAMI,GAAI,GAAG,MAAMA,EAAG,IAAI,CAAC,CAAC,CAAC,OAAOJ,CAAG,CAAC,SAASK,GAAaC,EAAIT,EAAe,CAAC,OAAAS,KAAO,EAASA,EAAIZ,GAAkB/E,EAAO2F,EAAIT,CAAc,EAAE,EAAE,CAAC,IAAIU,GAAS,CAAC,QAAQ,OAAU,IAAI,UAAU,CAACA,GAAS,SAAS,EAAE,IAAI/G,EAAIsB,EAAOyF,GAAS,QAAQ,IAAI,GAAG,OAAO/G,CAAG,EAAE,OAAO,SAAS8G,EAAI,CAAC,IAAI9G,EAAI6G,GAAaC,CAAG,EAAE,OAAO9G,CAAG,CAAC,EAAE,SAASgH,GAAsBC,EAAKC,EAAQC,EAASC,EAAUC,EAAQ,CAAyrB,QAAprBC,EAAM,EAAMC,EAAWL,EAAQ5F,EAAO4F,IAAU,GAAG,EAAEM,EAAYN,EAAQ5F,EAAO4F,EAAQ,IAAI,GAAG,EAAMO,EAAYN,EAAS7F,EAAO6F,IAAW,GAAG,EAAEO,EAAaP,EAAS7F,EAAO6F,EAAS,IAAI,GAAG,EAAMQ,EAAaP,EAAU9F,EAAO8F,IAAY,GAAG,EAAEQ,EAAcR,EAAU9F,EAAO8F,EAAU,IAAI,GAAG,EAAMS,EAAW,EAAEC,EAAY,EAAMC,EAAY,EAAEC,EAAa,EAAMC,EAAa,EAAEC,GAAc,EAAMC,GAAQjB,EAAQ5F,EAAO4F,IAAU,GAAG,IAAIC,EAAS7F,EAAO6F,IAAW,GAAG,IAAIC,EAAU9F,EAAO8F,IAAY,GAAG,GAAOgB,GAASlB,EAAQ5F,EAAO4F,EAAQ,IAAI,GAAG,IAAIC,EAAS7F,EAAO6F,EAAS,IAAI,GAAG,IAAIC,EAAU9F,EAAO8F,EAAU,IAAI,GAAG,GAAOiB,EAAM,SAASC,EAAGC,GAAIC,GAAKC,GAAI,CAAC,OAAOH,EAAG,GAAGC,GAAIE,GAAID,GAAKC,EAAG,EAAUH,EAAG,EAAEA,EAAGrB,EAAKqB,IAAK,CAAC,IAAII,EAAK,GAAGJ,EAAG,GAAG,GAAG,EAACD,EAAMC,EAAGH,EAAOC,EAAQM,CAAI,EAAY,KAAIC,EAAO5B,GAAS,gBAAgBuB,CAAE,EAAMM,EAAM7B,GAAS,iBAAoB4B,EAAO,WAAW,OAAMC,EAAMD,EAAO,WAAW,KAAKA,CAAM,GAAKC,EAAM,GAAGP,EAAMC,EAAGf,EAAWC,EAAYkB,CAAI,IAAGJ,EAAG,GAAGT,EAAWA,EAAWa,EAAKZ,EAAYA,EAAYY,EAAKpB,KAAWsB,EAAM,GAAGP,EAAMC,EAAGb,EAAYC,EAAagB,CAAI,IAAGJ,EAAG,GAAGP,EAAYA,EAAYW,EAAKV,EAAaA,EAAaU,EAAKpB,KAAWsB,EAAM,GAAGP,EAAMC,EAAGX,EAAaC,EAAcc,CAAI,IAAGJ,EAAG,GAAGL,EAAaA,EAAaS,EAAKR,GAAcA,GAAcQ,EAAKpB,KAAQ,CAAC,OAAGJ,IAAS5F,EAAO4F,IAAU,GAAGW,EAAWvG,EAAO4F,EAAQ,IAAI,GAAGY,GAAeX,IAAU7F,EAAO6F,IAAW,GAAGY,EAAYzG,EAAO6F,EAAS,IAAI,GAAGa,GAAgBZ,IAAW9F,EAAO8F,IAAY,GAAGa,EAAa3G,EAAO8F,EAAU,IAAI,GAAGc,IAAqBZ,CAAK,CAAC,SAASuB,IAAQ,CAAC1I,EAAI,2BAA2B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASmI,IAAI,CAAC3I,EAAI,uBAAuB,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASoI,GAAgBT,EAAG,CAAC,IAAIU,EAAOH,GAAO,UAAUP,CAAE,EAAE,GAAG,CAACU,EAAO,MAAM,IAAIF,GAAG,WAAW,CAAC,EAAE,OAAOE,CAAM,CAAC,SAASC,GAAUC,EAAK,CAAC,OAAOA,EAAK,KAAK,KAAKA,GAAM,EAAE,KAAK,KAAKA,GAAM,GAAG,KAAK,KAAKA,GAAM,GAAG,IAAI,CAAC,SAASC,GAAUC,EAAK,CAAC,IAAI5C,EAAI,GAAO6C,EAAK,EAAMC,EAAQ,EAAMC,EAAS,EAAMC,EAAO,EAAMC,EAAI,EAAMC,EAAE,EAAMC,EAAM,CAACP,EAAK,GAAG,MAAMA,EAAK,IAAI,GAAGA,EAAK,GAAG,MAAMA,EAAK,IAAI,GAAGA,EAAK,GAAG,MAAMA,EAAK,IAAI,GAAGA,EAAK,GAAG,MAAMA,EAAK,IAAI,EAAE,EAAMQ,EAAQ,GAASC,EAAO,GAAG,IAAIH,EAAE,EAAEA,EAAE,EAAEA,IAAK,GAAGC,EAAMD,KAAK,EAAE,CAACE,EAAQ,GAAM,KAAK,CAAE,GAAGA,EAAQ,CAAyC,GAAxCC,EAAOZ,GAAUU,EAAM,GAAGA,EAAM,IAAI,EAAE,EAAKA,EAAM,KAAK,GAAI,OAAAnD,EAAI,UAAUA,GAAKqD,EAAcrD,EAAI,GAAGmD,EAAM,KAAK,EAAG,OAAAnD,EAAI,KAAQqD,IAAS,YAAUA,EAAO,IAAMA,IAAS,YAAUA,EAAO,KAAIrD,GAAKqD,EAAcrD,CAAI,CAAC,IAAI6C,EAAK,EAAEA,EAAK,EAAEA,IAAWM,EAAMN,KAAQ,IAAMA,EAAKE,EAAS,IAAGE,EAAI,GAAEF,EAASF,EAAKI,KAASA,EAAIH,IAASA,EAAQG,EAAID,EAAOH,EAAKC,EAAQ,GAAG,IAAID,EAAK,EAAEA,EAAK,EAAEA,IAAO,CAAC,GAAGC,EAAQ,GAAMK,EAAMN,KAAQ,GAAGA,GAAMG,GAAQH,EAAKG,EAAOF,EAAQ,CAAID,IAAOG,IAAQhD,GAAK,IAAOgD,IAAS,IAAEhD,GAAK,MAAI,QAAQ,CAAEA,GAAK,OAAOsD,GAAOH,EAAMN,GAAM,KAAK,CAAC,EAAE,SAAS,EAAE,EAAE7C,GAAK6C,EAAK,EAAE,IAAI,EAAE,CAAC,OAAO7C,CAAG,CAAC,SAASuD,GAAaC,EAAGC,EAAM,CAAC,IAAIC,EAAO9I,EAAO4I,IAAK,GAAOG,EAAKL,GAAOzI,GAAQ2I,EAAG,IAAI,EAAE,EAAMd,EAAK,OAAOgB,EAAO,CAAC,IAAK,GAAE,GAAGD,IAAQ,GAAI,MAAM,CAAC,MAAM,EAAE,EAAEf,EAAK5H,EAAO0I,EAAG,IAAI,GAAGd,EAAKD,GAAUC,CAAI,EAAE,MAAM,IAAK,IAAG,GAAGe,IAAQ,GAAI,MAAM,CAAC,MAAM,EAAE,EAAEf,EAAK,CAAC5H,EAAO0I,EAAG,IAAI,GAAG1I,EAAO0I,EAAG,KAAK,GAAG1I,EAAO0I,EAAG,KAAK,GAAG1I,EAAO0I,EAAG,KAAK,EAAE,EAAEd,EAAKC,GAAUD,CAAI,EAAE,MAAM,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAOgB,EAAO,KAAKhB,EAAK,KAAKiB,CAAI,CAAC,CAAC,SAASC,GAAU5D,EAAI,CAAsB,QAAjB7E,EAAE6E,EAAI,MAAM,GAAG,EAAUkD,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAAC,IAAIW,EAAI,OAAO1I,EAAE+H,EAAE,EAAE,GAAG,MAAMW,CAAG,EAAE,OAAO,KAAK1I,EAAE+H,GAAGW,CAAG,CAAC,OAAO1I,EAAE,GAAGA,EAAE,IAAI,EAAEA,EAAE,IAAI,GAAGA,EAAE,IAAI,MAAM,CAAC,CAAC,SAAS2I,GAAQ9D,EAAI,CAAC,OAAO,SAASA,CAAG,CAAC,CAAC,SAAS+D,GAAU/D,EAAI,CAAC,IAAIgE,EAAUC,EAAEC,EAAOC,EAAMC,EAAW,qKAAyKjB,EAAM,CAAC,EAAE,GAAG,CAACiB,EAAW,KAAKpE,CAAG,EAAG,OAAO,KAAK,GAAGA,IAAM,KAAM,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAya,IAApaA,EAAI,WAAW,IAAI,EAAGA,EAAIA,EAAI,QAAQ,KAAK,IAAI,EAAOA,EAAIA,EAAI,QAAQ,KAAK,KAAK,EAAKA,EAAI,QAAQ,GAAG,EAAE,GAAGA,EAAIA,EAAI,QAAQ,IAAI,OAAO,MAAM,GAAG,EAAE,GAAG,EAAEgE,EAAMhE,EAAI,MAAM,GAAG,EAAEgE,EAAMA,EAAM,OAAO,GAAGF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAEF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAE,IAAIA,EAAMA,EAAM,OAAO,GAAGF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAEF,GAAQE,EAAMA,EAAM,OAAO,EAAE,EAAE,IAAIA,EAAMA,EAAM,MAAM,EAAEA,EAAM,OAAO,CAAC,GAAOA,EAAMhE,EAAI,MAAM,GAAG,EAAEkE,EAAO,EAAEC,EAAE,EAAMF,EAAE,EAAEA,EAAED,EAAM,OAAOC,IAAK,GAAG,OAAOD,EAAMC,IAAI,SAAU,GAAGD,EAAMC,KAAK,IAAI,CAAC,IAAIE,EAAE,EAAEA,EAAE,EAAEH,EAAM,OAAO,EAAEG,IAAKhB,EAAMc,EAAEE,GAAG,EAAED,EAAOC,EAAE,CAAC,MAAMhB,EAAMc,EAAEC,GAAQG,GAAO,SAASL,EAAMC,GAAG,EAAE,CAAC,OAAQd,EAAMc,EAAEC,GAAQF,EAAMC,GAAI,MAAM,CAACd,EAAM,IAAI,GAAGA,EAAM,GAAGA,EAAM,IAAI,GAAGA,EAAM,GAAGA,EAAM,IAAI,GAAGA,EAAM,GAAGA,EAAM,IAAI,GAAGA,EAAM,EAAE,CAAC,CAAC,IAAImB,GAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,YAAY,SAASC,EAAK,CAAC,IAAIC,EAAIZ,GAAUW,CAAI,EAAiD,GAA5CC,IAAM,OAAkBA,EAAIT,GAAUQ,CAAI,EAAKC,IAAM,MAAM,OAAOD,EAAK,IAAI7B,EAAK,GAAG4B,GAAI,YAAY,MAAMC,GAAO7B,EAAK4B,GAAI,YAAY,MAAMC,OAAU,CAAC,IAAI9H,EAAG6H,GAAI,YAAY,KAAK/J,GAAOkC,EAAG,MAAM,wCAAwC,EAAEiG,EAAK,WAAWjG,EAAG,KAAK,KAAKA,EAAG,OAAO6H,GAAI,YAAY,MAAM5B,GAAM6B,EAAKD,GAAI,YAAY,MAAMC,GAAM7B,CAAI,CAAC,OAAOA,CAAI,EAAE,YAAY,SAASA,EAAK,CAAC,OAAG4B,GAAI,YAAY,MAAM5B,GAAc4B,GAAI,YAAY,MAAM5B,GAAa,IAAI,CAAC,EAAE,SAAS+B,GAAiBC,EAAMC,EAAQC,EAAU,CAAC,GAAGA,GAAWF,IAAQ,EAAE,OAAO,KAAK,IAAI3G,EAAKwF,GAAamB,EAAMC,CAAO,EAAE,GAAG5G,EAAK,MAAM,MAAM,IAAIuE,GAAG,WAAWvE,EAAK,KAAK,EAAE,OAAAA,EAAK,KAAKuG,GAAI,YAAYvG,EAAK,IAAI,GAAGA,EAAK,KAAYA,CAAI,CAAC,SAAS8G,GAAgB/C,EAAGY,EAAKiC,EAAQG,EAAGC,EAAGC,EAAG,CAAC,IAAIC,EAAK1C,GAAgBT,CAAE,EAAM/D,EAAK0G,GAAiB/B,EAAKiC,CAAO,EAAE,OAAAM,EAAK,SAAS,KAAKA,EAAKlH,EAAK,KAAKA,EAAK,IAAI,EAAS,CAAC,CAAC,SAASmH,GAAmBpD,EAAGY,EAAKiC,EAAQG,EAAGC,EAAGC,EAAG,CAAC,IAAIC,EAAK1C,GAAgBT,CAAE,EAAM/D,EAAK0G,GAAiB/B,EAAKiC,CAAO,EAAE,OAAAM,EAAK,SAAS,QAAQA,EAAKlH,EAAK,KAAKA,EAAK,IAAI,EAAS,CAAC,CAAC,SAASoH,GAAqBC,EAAMxM,EAAKyM,EAAMjD,EAAM,CAAC,CAAC,SAASkD,GAAmBxD,EAAGyD,EAAIC,EAAQ,CAAC,OAAAjF,GAAS,QAAQiF,EAAe,CAAC,CAAC,SAASC,GAAmB3D,EAAG4D,EAAI,CAAC,CAAC,SAASC,GAAuB7D,EAAG8D,EAAWC,EAAY,CAAC,CAAC,SAASC,GAAkB9F,EAAI+F,EAAKC,EAAOC,EAAgB,CAAa,GAAZD,KAAU,EAAK,EAAEC,EAAgB,GAAG,MAAO,GAA0D,QAApDC,EAASF,EAAWlG,EAAOkG,EAAOC,EAAgB,EAAU/C,EAAE,EAAEA,EAAElD,EAAI,OAAO,EAAEkD,EAAE,CAAC,IAAIiD,EAAEnG,EAAI,WAAWkD,CAAC,EAAE,GAAGiD,GAAG,OAAOA,GAAG,MAAM,CAAC,IAAIjG,EAAGF,EAAI,WAAW,EAAEkD,CAAC,EAAEiD,EAAE,QAAQA,EAAE,OAAO,IAAIjG,EAAG,IAAI,CAAC,GAAGiG,GAAG,IAAI,CAAC,GAAGH,GAAQlG,EAAO,MAAMiG,EAAKC,MAAW,GAAGG,CAAC,SAASA,GAAG,KAAK,CAAC,GAAGH,EAAO,GAAGlG,EAAO,MAAMiG,EAAKC,MAAW,GAAG,IAAIG,GAAG,EAAEJ,EAAKC,MAAW,GAAG,IAAIG,EAAE,EAAE,SAASA,GAAG,MAAM,CAAC,GAAGH,EAAO,GAAGlG,EAAO,MAAMiG,EAAKC,MAAW,GAAG,IAAIG,GAAG,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,GAAG,EAAE,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,EAAE,EAAE,KAAK,CAAC,GAAGH,EAAO,GAAGlG,EAAO,MAAMiG,EAAKC,MAAW,GAAG,IAAIG,GAAG,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,GAAG,GAAG,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,GAAG,EAAE,GAAGJ,EAAKC,MAAW,GAAG,IAAIG,EAAE,EAAE,CAAC,CAAC,OAAAJ,EAAKC,IAAS,GAAG,EAASA,EAAOE,CAAQ,CAAC,SAASE,GAAapG,EAAIqG,EAAOJ,EAAgB,CAAC,OAAOH,GAAkB9F,EAAIrF,EAAO0L,EAAOJ,CAAe,CAAC,CAAC,SAASK,GAAsBxE,EAAGyE,EAAKC,EAAM,CAAC,CAAC,SAASC,GAAWC,EAAQC,EAAK,CAAC,OAAAhM,EAAO,KAAK,EAAE+L,EAAQA,EAAQC,CAAI,EAASD,CAAO,CAAC,SAASE,GAAcpD,EAAGE,EAAOhB,EAAKiB,EAAKgB,EAAQ,CAAC,OAAOjB,EAAO,CAAC,IAAK,GAAEhB,EAAKkB,GAAUlB,CAAI,EAAE+D,GAAWjD,EAAG,EAAE,EAAKmB,IAAS7J,EAAO6J,IAAU,GAAG,IAAG/J,EAAO4I,IAAK,GAAGE,EAAO5I,EAAO0I,EAAG,IAAI,GAAGd,EAAK9H,EAAO4I,EAAG,IAAI,GAAGa,GAAOV,CAAI,EAAE,MAAM,IAAK,IAAGjB,EAAKqB,GAAUrB,CAAI,EAAE+D,GAAWjD,EAAG,EAAE,EAAKmB,IAAS7J,EAAO6J,IAAU,GAAG,IAAG7J,EAAO0I,IAAK,GAAGE,EAAO5I,EAAO0I,EAAG,IAAI,GAAGd,EAAK,GAAG5H,EAAO0I,EAAG,KAAK,GAAGd,EAAK,GAAG5H,EAAO0I,EAAG,KAAK,GAAGd,EAAK,GAAG5H,EAAO0I,EAAG,KAAK,GAAGd,EAAK,GAAG9H,EAAO4I,EAAG,IAAI,GAAGa,GAAOV,CAAI,EAAE,MAAM,QAAQ,MAAO,EAAC,CAAC,MAAO,EAAC,CAAC,SAASkD,GAAuB/E,EAAGY,EAAKiC,EAAQG,EAAGC,EAAGC,EAAG,CAAC,IAAIC,EAAK1C,GAAgBT,CAAE,EAAE,GAAG,CAACmD,EAAK,MAAO,MAAM,IAAI,IAAI6B,EAAMF,GAAclE,EAAKuC,EAAK,OAAOX,GAAI,YAAYW,EAAK,KAAK,EAAEA,EAAK,MAAMN,CAAO,EAAE,MAAO,EAAC,CAAC,SAASoC,GAAsBjF,EAAGkF,EAAMC,EAAQC,EAAOC,EAAOrC,EAAG,CAAC,IAAIG,EAAK1C,GAAgBT,CAAE,EAAE,OAAGkF,IAAQ,GAAMC,IAAU,GAAGnM,EAAOoM,IAAS,GAAGjC,EAAK,MAAMnK,EAAOqM,IAAS,GAAG,EAAElC,EAAK,MAAM,KAAY,GAAS,GAAG,CAAC,SAASmC,GAAiBtF,EAAGuF,EAAG7B,EAAQ,CAAC,OAAAjF,GAAS,QAAQiF,EAAe,CAAC,CAAC,SAAS8B,GAAmB1O,EAAK8M,EAAI,CAAC,CAAC,SAAS6B,GAAmBnC,EAAMxM,EAAK4O,EAAK,CAAC,CAAC,SAASC,GAAsBrC,EAAMxM,EAAK8M,EAAItD,EAAM,CAAC,CAAC,SAASsF,GAAkBtC,EAAMxM,EAAKwJ,EAAMoD,EAAQ,CAACjF,GAAS,QAAQiF,CAAO,CAAC,SAASmC,GAAoB7F,EAAG4D,EAAIzC,EAAIb,EAAMM,EAAKiC,EAAQ,CAAC,IAAIM,EAAK1C,GAAgBT,CAAE,EAAM8F,EAAI3C,EAAK,SAAS,QAAQA,EAAKhC,CAAG,EAAE,GAAG,CAAC2E,EAAI,MAAO,GAAE,GAAGlF,EAAM,IAAIoE,EAAMF,GAAclE,EAAKuC,EAAK,OAAOX,GAAI,YAAYsD,EAAI,IAAI,EAAEA,EAAI,KAAKjD,CAAO,EAAE,OAAAhK,EAAO,IAAIiN,EAAI,OAAOlC,IAAM,CAAC,EAASkC,EAAI,OAAO,UAAU,CAAC,SAASC,GAAoBC,EAASC,EAAQC,EAASC,EAAQ,CAAC,CAAC,SAASC,GAAiBtP,EAAK,CAAC,CAAC,SAASuP,GAAkBrG,EAAGsG,EAAQC,EAAOjG,EAAMM,EAAK4F,EAAS,CAAC,CAAC,SAASC,GAAkBC,EAAOC,EAAKC,EAAS,CAAC,CAAC,SAASC,GAAkB/P,EAAK8M,EAAI,CAAC,CAAC,SAASkD,GAAoBxD,EAAMxM,EAAKwJ,EAAM,CAAC,CAAC,IAAIyG,GAAe,GAAK,SAASC,IAAmC,CAAC,OAAOD,EAAc,CAAC,SAASE,GAAezI,EAAI,CAAC,OAAOvF,EAAQuF,IAAM,GAAGxF,EAAOwF,EAAI,IAAI,GAAG,UAAU,CAAC,SAAS0I,GAAWC,EAAK,CAAC,OAAOA,EAAK,IAAI,IAAIA,EAAK,MAAM,GAAGA,EAAK,MAAM,EAAE,CAAC,IAAIC,GAA2B,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAMC,GAA8B,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,SAASC,GAAaC,EAAK,CAAC,IAAIC,EAAKN,GAAWK,EAAK,YAAY,CAAC,EAAME,EAAoBD,EAAKJ,GAA2BC,GAAkCK,EAAKD,EAAoBF,EAAK,SAAS,GAAGA,EAAK,QAAQ,EAAE,EAAE,OAAOG,CAAI,CAAC,SAASC,GAAeC,EAAKC,EAAM,CAAC,IAAIN,EAAK,IAAI,KAAKN,GAAeW,CAAI,EAAE,GAAG,EAAE5O,EAAO6O,IAAQ,GAAGN,EAAK,WAAW,EAAEvO,EAAO6O,EAAM,IAAI,GAAGN,EAAK,WAAW,EAAEvO,EAAO6O,EAAM,IAAI,GAAGN,EAAK,SAAS,EAAEvO,EAAO6O,EAAM,KAAK,GAAGN,EAAK,QAAQ,EAAEvO,EAAO6O,EAAM,KAAK,GAAGN,EAAK,SAAS,EAAEvO,EAAO6O,EAAM,KAAK,GAAGN,EAAK,YAAY,EAAE,KAAKvO,EAAO6O,EAAM,KAAK,GAAGN,EAAK,OAAO,EAAE,IAAIG,EAAKJ,GAAaC,CAAI,EAAE,EAAEvO,EAAO6O,EAAM,KAAK,GAAGH,EAAK1O,EAAO6O,EAAM,KAAK,GAAG,EAAEN,EAAK,kBAAkB,EAAE,IAAI,IAAIO,EAAM,IAAI,KAAKP,EAAK,YAAY,EAAE,EAAE,CAAC,EAAMQ,EAAa,IAAI,KAAKR,EAAK,YAAY,EAAE,EAAE,CAAC,EAAE,kBAAkB,EAAMS,EAAaF,EAAM,kBAAkB,EAAMG,GAAKF,GAAcC,GAAcT,EAAK,kBAAkB,GAAG,KAAK,IAAIS,EAAaD,CAAY,GAAG,EAAE/O,EAAO6O,EAAM,KAAK,GAAGI,CAAG,CAAC,SAASC,GAAgBhK,EAAI,CAAW,QAANiD,EAAI,EAAUC,EAAE,EAAEA,EAAElD,EAAI,OAAO,EAAEkD,EAAE,CAAC,IAAI+G,EAAEjK,EAAI,WAAWkD,CAAC,EAAK+G,GAAG,IAAKhH,IAAcgH,GAAG,KAAMhH,GAAK,EAAUgH,GAAG,OAAOA,GAAG,OAAOhH,GAAK,EAAE,EAAEC,GAAOD,GAAK,CAAE,CAAC,OAAOA,CAAG,CAAC,SAASiH,GAAgBlK,EAAI,CAAC,IAAI2G,EAAKqD,GAAgBhK,CAAG,EAAE,EAAMxG,EAAI2Q,GAAQxD,CAAI,EAAE,OAAGnN,GAAI4M,GAAapG,EAAIxG,EAAImN,CAAI,EAASnN,CAAG,CAAC,SAAS4Q,GAAWC,EAASC,EAASC,EAAO,CAAC,IAAIC,EAAa,IAAI,OAAM,YAAY,EAAMC,EAAO,IAAI,KAAKD,EAAY,EAAE,CAAC,EAAME,EAAO,IAAI,KAAKF,EAAY,EAAE,CAAC,EAAMV,EAAaW,EAAO,kBAAkB,EAAMZ,EAAaa,EAAO,kBAAkB,EAAMC,EAAkB,KAAK,IAAIb,EAAaD,CAAY,EAAE9O,EAAQsP,IAAW,GAAGM,EAAkB,GAAG7P,EAAOwP,IAAW,GAAG,OAAOR,GAAcD,CAAY,EAAE,SAASe,EAAYvB,EAAK,CAAC,IAAIwB,EAAMxB,EAAK,aAAa,EAAE,MAAM,mBAAmB,EAAE,OAAOwB,EAAMA,EAAM,GAAG,KAAK,CAAC,IAAIC,EAAWF,EAAYH,CAAM,EAAMM,EAAWH,EAAYF,CAAM,EAAMM,EAAcd,GAAgBY,CAAU,EAAMG,EAAcf,GAAgBa,CAAU,EAAKlB,EAAaC,GAAc/O,EAAQwP,IAAS,GAAGS,EAAcjQ,EAAQwP,EAAO,IAAI,GAAGU,IAAmBlQ,EAAQwP,IAAS,GAAGU,EAAclQ,EAAQwP,EAAO,IAAI,GAAGS,EAAc,CAAC,SAASE,IAAQ,CAAC/Q,EAAM,EAAE,CAAC,CAAC,SAASgR,GAAQ9R,EAAS+I,EAAM,CAACjI,EAAMiF,EAAkB,CAAC,CAAC,SAASgM,GAAgCxS,EAAKyS,EAAQ,CAAC,OAAO,WAAW,eAAe,gBAAgBzT,EAAOgB,EAAKyS,CAAO,CAAC,CAAC,SAASC,GAAgC1S,EAAKyS,EAAQ,CAAC,OAAO,WAAW,eAAe,eAAezT,EAAOgB,EAAKyS,CAAO,CAAC,CAAC,SAASE,GAAoC3S,EAAKyS,EAAQ,CAAC,OAAO,WAAW,eAAe,qBAAqBzT,EAAOgB,EAAKyS,CAAO,CAAC,CAAC,SAASG,GAAgC5S,EAAKyS,EAAQ,CAAC,OAAO,WAAW,eAAe,gBAAgBzT,EAAOgB,EAAKyS,CAAO,CAAC,CAAC,SAASI,GAA0BC,EAAO,CAAC,OAAO,WAAW,eAAe,UAAU9T,EAAO8T,CAAM,CAAC,CAAC,SAASC,GAA2B/S,EAAKyS,EAAQ,CAAC,OAAO,WAAW,eAAe,UAAUzT,EAAOgB,EAAKyS,CAAO,CAAC,CAAC,SAASO,GAA2CF,EAAO,CAAC,OAAO,WAAW,eAAe,4BAA4B9T,EAAO8T,CAAM,CAAC,CAAC,SAASG,GAAyBC,EAAKC,EAAQC,EAAGC,EAAM,CAAC,OAAO,WAAW,eAAe,SAASrU,EAAOkU,EAAKC,EAAQC,EAAGC,CAAK,CAAC,CAAC,SAASC,GAAyBR,EAAOtJ,EAAM,CAAC,OAAO,WAAW,eAAe,SAASxK,EAAO8T,EAAOtJ,CAAK,CAAC,CAAC,SAAS+J,GAAyBT,EAAOhG,EAAIiB,EAAKyF,EAAS,CAAC,OAAO,WAAW,eAAe,SAASxU,EAAO8T,EAAOhG,EAAIiB,EAAKyF,CAAQ,CAAC,CAAC,SAASC,GAA6BX,EAAOY,EAAQ,CAAC,OAAO,WAAW,eAAe,aAAa1U,EAAO8T,EAAOY,CAAO,CAAC,CAAC,SAASC,GAA0Bb,EAAOhG,EAAIiB,EAAKyF,EAAS,CAAC,OAAO,WAAW,eAAe,UAAUxU,EAAO8T,EAAOhG,EAAIiB,EAAKyF,CAAQ,CAAC,CAAC,SAASI,GAAyC5U,EAAO,CAAC,OAAO,WAAW,eAAe,uBAAuBA,CAAM,CAAC,CAAC,SAAS6U,GAAoB7T,EAAKyS,EAAQ,CAAC,OAAO,WAAW,eAAe,KAAKzT,EAAOgB,EAAKyS,CAAO,CAAC,CAAC,SAASqB,GAAkCC,EAAQ,CAAC,OAAO,WAAW,eAAe,oBAAoB/U,EAAO+U,CAAO,CAAC,CAAC,SAASC,GAA4BC,EAAOC,EAAQC,EAASC,EAAQC,EAAS3P,EAAS,CAAC,OAAO,WAAW,eAAe,cAAc1F,EAAOiV,EAAOC,EAAQC,EAASC,EAAQC,EAAS3P,CAAQ,CAAC,CAAC,SAAS4P,IAAsB,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,SAASC,IAAY,CAAC,MAAO,WAAU,CAAC,SAASC,IAA0B,CAAC,OAAOD,GAAW,CAAC,CAAC,IAAIE,GAAuB5U,IAAqB,OAAO,YAAYS,GAAQ,YAAY,EAAE,aAAYmU,GAAoB,IAAI,YAAY,IAAI,EAAE,SAASC,GAAuBC,EAAKC,EAAIC,EAAI,CAAC9S,EAAO,WAAW4S,IAAO,EAAEC,IAAM,EAAEA,EAAIC,IAAM,CAAC,CAAC,CAAC,SAASC,GAA0B/G,EAAK,CAAC,IAAIxL,EAAEf,EAAW,OAAWuT,EAAMhH,EAAKxL,EAAE,WAAW,QAAQ,GAAG,GAAG,CAAC,OAAAf,EAAW,KAAKuT,CAAK,EAAEzS,GAAkB,EAAS,CAAC,OAAO4B,EAAN,CAAS,CAAC,CAAC,SAAS8Q,GAAwBC,EAAc,CAAC,IAAIC,EAAQnT,EAAO,OAAOkT,EAAcA,IAAgB,EAAE,IAAIE,EAAYZ,GAAW,EAAE,GAAGU,EAAcE,EAAa,MAAO,GAAiE,QAAvDC,EAAQ,CAACC,EAAEC,IAAWD,GAAGC,EAASD,EAAEC,GAAUA,EAAiBC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBN,GAAS,EAAE,GAAGK,GAASC,EAAkB,KAAK,IAAIA,EAAkBP,EAAc,SAAS,EAAE,IAAIvB,EAAQ,KAAK,IAAIyB,EAAYC,EAAQ,KAAK,IAAIH,EAAcO,CAAiB,EAAE,KAAK,CAAC,EAAMC,EAAYX,GAA0BpB,CAAO,EAAE,GAAG+B,EAAa,MAAO,EAAK,CAAC,MAAO,EAAK,CAAC,IAAIC,GAAI,CAAC,EAAE,SAASC,IAAmB,CAAC,OAAOpW,GAAa,gBAAgB,CAAC,SAASqW,IAAe,CAAC,GAAG,CAACA,GAAc,QAAQ,CAAC,IAAIC,GAAM,OAAO,WAAW,UAAU,UAAU,WAAW,UAAU,UAAU,IAAI,KAAK,QAAQ,IAAI,GAAG,EAAE,SAAaC,EAAI,CAAC,KAAO,WAAW,QAAU,WAAW,KAAO,IAAI,IAAM,IAAI,KAAO,iBAAiB,KAAOD,EAAK,EAAIF,GAAkB,CAAC,EAAE,QAAQN,KAAKK,GAAQA,GAAIL,KAAK,OAAU,OAAOS,EAAIT,GAAQS,EAAIT,GAAGK,GAAIL,GAAG,IAAIU,EAAQ,CAAC,EAAE,QAAQV,KAAKS,EAAKC,EAAQ,KAAK,GAAGV,KAAKS,EAAIT,IAAI,EAAEO,GAAc,QAAQG,CAAO,CAAC,OAAOH,GAAc,OAAO,CAAC,SAASI,GAAc5O,EAAI6O,EAAO,CAAC,QAAQ3L,EAAE,EAAEA,EAAElD,EAAI,OAAO,EAAEkD,EAAGxI,EAAMmU,MAAW,GAAG7O,EAAI,WAAWkD,CAAC,EAAExI,EAAMmU,IAAS,GAAG,CAAC,CAAC,SAASC,GAAaC,EAAUC,EAAY,CAAC,IAAIC,EAAQ,EAAE,OAAAT,GAAc,EAAE,QAAQ,SAASU,EAAOhM,EAAE,CAAC,IAAI5C,EAAI0O,EAAYC,EAAQlU,EAAQgU,EAAU7L,EAAE,IAAI,GAAG5C,EAAIsO,GAAcM,EAAO5O,CAAG,EAAE2O,GAASC,EAAO,OAAO,CAAC,CAAC,EAAS,CAAC,CAAC,SAASC,GAAmBC,EAAeC,EAAkB,CAAC,IAAIV,EAAQH,GAAc,EAAEzT,EAAQqU,IAAiB,GAAGT,EAAQ,OAAO,IAAIM,EAAQ,EAAE,OAAAN,EAAQ,QAAQ,SAASO,EAAO,CAACD,GAASC,EAAO,OAAO,CAAC,CAAC,EAAEnU,EAAQsU,IAAoB,GAAGJ,EAAe,CAAC,CAAC,SAASK,GAAUxN,EAAG,CAAC,MAAO,GAAE,CAAC,SAASyN,GAAezN,EAAG0N,EAAK,CAAC,IAAIC,EAAW,EAAMC,EAAiB,EAAMtN,EAAM,EAAE,CAAC,IAAIqG,EAAK,EAAK3G,GAAI,EAAG2N,EAAW,GAAU3N,GAAI,GAAGA,GAAI,KAAG2N,EAAW,IAAGrN,EAAM,CAAC,CAAC,OAAA1H,EAAM8U,IAAO,GAAG/G,EAAK7N,EAAO4U,EAAK,IAAI,GAAGpN,EAAM9D,GAAQ,CAACmR,IAAa,GAAGpR,EAAWoR,EAAW,CAAC,KAAK,IAAIpR,CAAU,GAAG,EAAEA,EAAW,EAAE,CAAC,KAAK,MAAMA,EAAW,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,EAAO0U,EAAK,IAAI,GAAGlR,GAAQ,GAAGxD,EAAO0U,EAAK,KAAK,GAAGlR,GAAQ,GAAGA,GAAQ,CAACoR,IAAmB,GAAGrR,EAAWqR,EAAiB,CAAC,KAAK,IAAIrR,CAAU,GAAG,EAAEA,EAAW,EAAE,CAAC,KAAK,MAAMA,EAAW,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,EAAO0U,EAAK,KAAK,GAAGlR,GAAQ,GAAGxD,EAAO0U,EAAK,KAAK,GAAGlR,GAAQ,GAAU,CAAC,CAAC,SAASqR,GAAU7N,EAAG8N,EAAIC,EAAOC,EAAWC,EAAYC,EAAK,CAAC,MAAO,GAAE,CAAC,SAASC,GAAWnO,EAAG8N,EAAIC,EAAOC,EAAWC,EAAYC,EAAK,CAAC,MAAO,GAAE,CAAC,SAASE,GAASpO,EAAG8N,EAAIC,EAAOG,EAAK,CAAC,MAAO,GAAE,CAAC,SAASG,GAASrO,EAAGgO,EAAWC,EAAYK,EAAOC,EAAU,CAAC,MAAO,GAAE,CAAC,SAASC,GAASxO,EAAG,CAAC,MAAO,GAAE,CAAC,IAAIyO,GAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,SAASC,GAAUrO,EAAOsO,EAAK,CAAC,IAAI5B,EAAO0B,GAAiBpO,GAAWsO,IAAO,GAAGA,IAAO,KAAKtO,IAAS,EAAEnI,GAAIL,GAAK+F,GAAkBmP,EAAO,CAAC,CAAC,EAAEA,EAAO,OAAO,GAAOA,EAAO,KAAK4B,CAAI,CAAE,CAAC,SAASC,GAAU5O,EAAG8N,EAAIC,EAAOG,EAAK,CAAW,QAANvC,EAAI,EAAU,EAAE,EAAE,EAAEoC,EAAO,IAAI,CAAC,IAAIvP,EAAIvF,EAAQ6U,IAAM,GAAO3M,EAAIlI,EAAQ6U,EAAI,IAAI,GAAGA,GAAK,EAAE,QAAQe,EAAE,EAAEA,EAAE1N,EAAI0N,IAAKH,GAAU1O,EAAGnH,EAAO2F,EAAIqQ,IAAI,EAAE,EAAElD,GAAKxK,CAAG,CAAC,OAAAlI,EAAQiV,IAAO,GAAGvC,EAAW,CAAC,CAAC,SAASmD,GAAaC,EAAKC,EAAQC,EAAK/W,EAAI,CAAC,IAAI0I,EAAK,EAAMiB,EAAK,EAAMvB,EAAM,EAAMsB,EAAO,EAAM+E,EAAK,EAAMuI,EAAM,EAAMC,EAAG,SAASC,EAAcxN,EAAO+E,EAAKuI,EAAMG,EAAMzO,EAAKiB,GAAK,CAAC,IAAIH,EAAGC,EAAMwN,EAAOnK,EAAM,OAAArD,EAAMC,IAAS,GAAG,GAAG,GAAGhB,EAAKgB,IAAS,GAAGf,GAAUD,CAAI,EAAED,GAAUC,CAAI,EAAEc,EAAG2G,GAAQ1G,CAAK,EAAEqD,EAAMF,GAAcpD,EAAGE,EAAOhB,EAAKiB,EAAI,EAAEpJ,GAAO,CAACuM,CAAK,EAAEmK,EAAG9G,GAAQ,EAAE,EAAErP,EAAOmW,EAAG,IAAI,GAAGvN,EAAO5I,EAAOmW,EAAG,IAAI,GAAGxI,EAAK3N,EAAOmW,EAAG,KAAK,GAAGD,EAAMjW,EAAQkW,EAAG,KAAK,GAAGE,EAAMpW,EAAQkW,EAAG,KAAK,GAAGzN,EAAME,IAAS,GAAI5I,EAAOmW,EAAG,KAAK,GAAG,GAAQnW,EAAOmW,EAAG,KAAK,GAAG,GAAGnW,EAAOmW,EAAG,KAAK,GAAG,EAASA,CAAE,CAAiO,GAA7NF,IAAM3O,EAAMtH,EAAOiW,IAAO,GAAGrN,EAAO5I,EAAOiW,EAAK,IAAI,GAAGtI,EAAK3N,EAAOiW,EAAK,IAAI,GAAGC,EAAMlW,EAAOiW,EAAK,KAAK,IAAMtI,GAAM,CAACuI,IAAOA,EAAMvI,IAAO,EAAE,GAAG,GAAK,CAACA,GAAMuI,IAAOvI,EAAKuI,IAAQ,GAAG,EAAE,GAAKA,IAAQ,IAAGA,EAAM,GAAKvI,IAAO,IAAGA,EAAK,GAAK,CAACoI,GAAM,CAACC,EAAS,MAAM,GAA4C,GAAtC1O,EAAM,OAAmC2O,IAAO,GAAGjW,EAAOiW,IAAO,GAAG,GAAG,CAACF,EAAM,MAAM,GAAG,GAAGzO,EAAM,GAAI,MAAM,GAAG,GAAGqG,IAAO,GAAGA,IAAO,GAAGA,IAAO,EAAG,MAAM,GAAG,GAAG/E,IAAS,GAAGA,IAAS,GAAGA,IAAS,GAAI,MAAM,GAAG,GAAGoN,IAASA,EAAQzQ,GAAayQ,CAAO,EAAEnN,EAAK,SAASmN,EAAQ,EAAE,EAAK,MAAMnN,CAAI,GAAG,OAAGvB,EAAM,KAAY,GAAS,GAAI,GAAG,CAACyO,EAAM,OAAGnN,IAAS,IAAGA,EAAO,IAAMtB,EAAM,KAAK,IAAMsB,IAAS,EAAGhB,EAAK0O,GAAO,UAAU,EAAO1O,EAAK,CAAC,EAAE,EAAE,EAAE,CAAC,GAAGuO,EAAGC,EAAcxN,EAAO+E,EAAKuI,EAAM,KAAKtO,EAAKiB,CAAI,EAAE5I,EAAQf,IAAM,GAAGiX,EAAU,EAA+C,GAA7CJ,EAAKxQ,GAAawQ,CAAI,EAAEnO,EAAKkB,GAAUiN,CAAI,EAAKnO,IAAO,KAAM,GAAGgB,IAAS,GAAGA,IAAS,EAAGA,EAAO,UAAUA,IAAS,IAAItB,EAAM,EAAGM,EAAK,CAAC,EAAE,EAAE0O,GAAO,KAAK,EAAE1O,CAAI,EAAEgB,EAAO,OAAQ,OAAM,WAAShB,EAAKqB,GAAU8M,CAAI,EAAKnO,IAAO,KAAM,GAAGgB,IAAS,GAAGA,IAAS,GAAIA,EAAO,OAAQ,OAAM,GAAK,OAAGhB,GAAM,MAAMuO,EAAGC,EAAcxN,EAAO+E,EAAKuI,EAAMH,EAAKnO,EAAKiB,CAAI,EAAE5I,EAAQf,IAAM,GAAGiX,EAAU,GAAK7O,EAAM,EAAS,IAAGyO,EAAKvM,GAAI,YAAYuM,CAAI,EAAEnO,EAAKkB,GAAUiN,CAAI,EAAKnN,IAAS,EAAGA,EAAO,EAAUA,IAAS,KAAIhB,EAAK,CAAC,EAAE,EAAE0O,GAAO,KAAK,EAAE1O,CAAI,GAAEuO,EAAGC,EAAcxN,EAAO+E,EAAKuI,EAAM,KAAKtO,EAAKiB,CAAI,EAAE5I,EAAQf,IAAM,GAAGiX,EAAU,EAAC,CAAC,SAASI,IAAgB,CAAC,GAAG,OAAO,QAAQ,UAAU,OAAO,OAAO,iBAAoB,WAAY,OAAOC,GAAM,OAAO,gBAAgBA,CAAI,EAAO,GAAG7Y,EAAqB,GAAG,CAAC,IAAI8Y,EAAcrY,GAAQ,QAAQ,EAAMsY,EAAeD,EAAc,eAAkB,GAAGC,EAAgB,OAAOF,GAAMC,EAAc,eAAkBD,CAAI,EAAE,IAAIG,EAAYF,EAAc,YAAe,OAAOD,IAAOA,EAAK,IAAIG,EAAYH,EAAK,UAAU,CAAC,EAAEA,EAAK,OAAOxU,EAAN,CAAS,CAAE3C,EAAM,kBAAkB,CAAC,CAAC,SAASuX,GAAWJ,EAAK,CAAC,OAAOI,GAAWL,GAAe,GAAGC,CAAI,CAAC,CAAC,SAASK,GAAY9C,EAAOlI,EAAK,CAAC,OAAA+K,GAAW/W,EAAO,SAASkU,IAAS,EAAEA,EAAOlI,IAAO,CAAC,CAAC,EAAS,CAAC,CAAC,SAASiL,GAAapO,EAAGC,EAAMoN,EAAKgB,EAAQC,EAAKC,EAAQ3P,EAAM,CAAC,IAAIrE,EAAKwF,GAAaC,EAAGC,CAAK,EAAE,GAAG1F,EAAK,MAAO,MAAM,GAAG,IAAI4F,EAAK5F,EAAK,KAAS2E,EAAK3E,EAAK,KAASiU,EAAW,GAAM,GAAGnB,GAAMgB,EAAQ,CAAC,IAAII,EAAO,GAAG7P,EAAM,GAAG,EAAE6P,EAAO3N,GAAI,YAAY5B,CAAI,IAAI,GAAGN,EAAM,EAAG,MAAM,QAASM,EAAKuP,EAAO,IAAIC,EAAwB9L,GAAa1D,EAAKmO,EAAKgB,CAAO,EAAKK,EAAwB,GAAGL,IAASG,EAAW,GAAK,CAAC,GAAGF,GAAMC,EAAQ,CAACpO,EAAK,GAAGA,EAAK,IAAIuO,EAAwB9L,GAAazC,EAAKmO,EAAKC,CAAO,EAAKG,EAAwB,GAAGH,IAASC,EAAW,GAAK,CAAC,OAAGA,EAAkB,IAAW,CAAC,CAAC,SAASG,GAASC,EAAMC,EAAM,CAAW,QAANC,EAAI,EAAUpP,EAAE,EAAEA,GAAGmP,EAAMC,GAAKF,EAAMlP,KAAK,CAAE,OAAOoP,CAAG,CAAC,IAAIC,GAAgB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAMC,GAAmB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,SAASC,GAAQpJ,EAAKqJ,EAAK,CAAsC,QAAjCC,EAAQ,IAAI,KAAKtJ,EAAK,QAAQ,CAAC,EAAQqJ,EAAK,GAAE,CAAC,IAAIpJ,EAAKN,GAAW2J,EAAQ,YAAY,CAAC,EAAMC,EAAaD,EAAQ,SAAS,EAAME,GAAoBvJ,EAAKiJ,GAAgBC,IAAoBI,GAAc,GAAGF,EAAKG,EAAmBF,EAAQ,QAAQ,EAAGD,GAAMG,EAAmBF,EAAQ,QAAQ,EAAE,EAAEA,EAAQ,QAAQ,CAAC,EAAKC,EAAa,GAAID,EAAQ,SAASC,EAAa,CAAC,GAAOD,EAAQ,SAAS,CAAC,EAAEA,EAAQ,YAAYA,EAAQ,YAAY,EAAE,CAAC,OAAQ,QAAAA,EAAQ,QAAQA,EAAQ,QAAQ,EAAED,CAAI,EAASC,CAAQ,CAAC,OAAOA,CAAO,CAAC,SAASG,GAAmBC,EAAQC,EAAY3K,EAAO,CAAC,IAAIpF,EAAIoF,EAAO,EAAEA,EAAO2B,GAAgB+I,CAAO,EAAE,EAAME,EAAQ,IAAI,MAAMhQ,CAAG,EAAMiQ,EAAgBpN,GAAkBiN,EAAQE,EAAQ,EAAEA,EAAQ,MAAM,EAAE,OAAGD,IAAYC,EAAQ,OAAOC,GAAuBD,CAAO,CAAC,SAASE,GAAmBf,EAAMvD,EAAO,CAACnU,EAAM,IAAI0X,EAAMvD,IAAS,CAAC,CAAC,CAAC,SAASuE,GAAUC,EAAEC,EAAQC,EAAOC,EAAG,CAAC,IAAIC,EAAQ3Y,EAAO0Y,EAAG,KAAK,GAAOnK,EAAK,CAAC,OAAOvO,EAAO0Y,IAAK,GAAG,OAAO1Y,EAAO0Y,EAAG,IAAI,GAAG,QAAQ1Y,EAAO0Y,EAAG,IAAI,GAAG,QAAQ1Y,EAAO0Y,EAAG,KAAK,GAAG,OAAO1Y,EAAO0Y,EAAG,KAAK,GAAG,QAAQ1Y,EAAO0Y,EAAG,KAAK,GAAG,QAAQ1Y,EAAO0Y,EAAG,KAAK,GAAG,QAAQ1Y,EAAO0Y,EAAG,KAAK,GAAG,SAAS1Y,EAAO0Y,EAAG,KAAK,GAAG,UAAU1Y,EAAO0Y,EAAG,KAAK,GAAG,QAAQC,EAAQpT,GAAaoT,CAAO,EAAE,EAAE,EAAMC,EAAQrT,GAAakT,CAAM,EAAMI,EAAkB,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,IAAI,EAAE,QAAQC,KAAQD,EAAmBD,EAAQA,EAAQ,QAAQ,IAAI,OAAOE,EAAK,GAAG,EAAED,EAAkBC,EAAK,EAAE,IAAIC,EAAS,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,UAAU,EAAMC,EAAO,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,UAAU,EAAE,SAASC,EAAiBC,EAAMC,EAAOC,EAAU,CAA2D,QAAtDlU,EAAI,OAAOgU,GAAO,SAASA,EAAM,SAAS,EAAEA,GAAO,GAAShU,EAAI,OAAOiU,GAAQjU,EAAIkU,EAAU,GAAGlU,EAAI,OAAOA,CAAG,CAAC,SAASmU,EAAaH,EAAMC,EAAO,CAAC,OAAOF,EAAiBC,EAAMC,EAAO,GAAG,CAAC,CAAC,SAASG,EAAaC,EAAMC,EAAM,CAAC,SAASC,EAAIP,EAAM,CAAC,OAAOA,EAAM,EAAE,GAAGA,EAAM,EAAE,EAAE,CAAC,CAAC,IAAIQ,EAAQ,OAAIA,EAAQD,EAAIF,EAAM,YAAY,EAAEC,EAAM,YAAY,CAAC,KAAK,IAAOE,EAAQD,EAAIF,EAAM,SAAS,EAAEC,EAAM,SAAS,CAAC,KAAK,IAAGE,EAAQD,EAAIF,EAAM,QAAQ,EAAEC,EAAM,QAAQ,CAAC,GAAUE,CAAO,CAAC,SAASC,EAAsBC,EAAU,CAAC,OAAOA,EAAU,OAAO,EAAE,CAAC,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,GAAG,EAAE,EAAE,IAAK,GAAE,OAAOA,EAAU,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,CAAC,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,CAAC,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,CAAC,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,GAAG,EAAE,EAAE,IAAK,GAAE,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,SAASC,EAAiBtL,EAAK,CAAC,IAAIuL,EAASnC,GAAQ,IAAI,KAAKpJ,EAAK,QAAQ,KAAK,EAAE,CAAC,EAAEA,EAAK,OAAO,EAAMwL,EAAkB,IAAI,KAAKD,EAAS,YAAY,EAAE,EAAE,CAAC,EAAME,EAAkB,IAAI,KAAKF,EAAS,YAAY,EAAE,EAAE,EAAE,CAAC,EAAMG,EAAuBN,EAAsBI,CAAiB,EAAMG,EAAuBP,EAAsBK,CAAiB,EAAE,OAAGV,EAAaW,EAAuBH,CAAQ,GAAG,EAAMR,EAAaY,EAAuBJ,CAAQ,GAAG,EAAUA,EAAS,YAAY,EAAE,EAASA,EAAS,YAAY,EAASA,EAAS,YAAY,EAAE,CAAC,CAAC,IAAIK,EAAkB,CAAC,KAAK,SAAS5L,EAAK,CAAC,OAAOwK,EAASxK,EAAK,SAAS,UAAU,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOwK,EAASxK,EAAK,QAAQ,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOyK,EAAOzK,EAAK,QAAQ,UAAU,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOyK,EAAOzK,EAAK,OAAO,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIJ,EAAKI,EAAK,QAAQ,KAAK,OAAO8K,EAAalL,EAAK,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,SAASI,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,QAAQ,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO0K,EAAiB1K,EAAK,QAAQ,EAAE,GAAG,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOsL,EAAiBtL,CAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOsL,EAAiBtL,CAAI,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,QAAQ,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,IAAI6L,EAAW7L,EAAK,QAAQ,OAAG6L,GAAY,EAAEA,EAAW,GAAWA,EAAW,KAAGA,GAAY,IAAUf,EAAae,EAAW,CAAC,CAAC,EAAE,KAAK,SAAS7L,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,QAAQ8I,GAASnJ,GAAWK,EAAK,QAAQ,IAAI,EAAEkJ,GAAgBC,GAAmBnJ,EAAK,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,OAAO,EAAE,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,OAAO,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,MAAM;AAAA,CAAI,EAAE,KAAK,SAASA,EAAK,CAAC,OAAGA,EAAK,SAAS,GAAGA,EAAK,QAAQ,GAAU,KAAW,IAAI,EAAE,KAAK,SAASA,EAAK,CAAC,OAAO8K,EAAa9K,EAAK,OAAO,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,MAAM,GAAI,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOA,EAAK,SAAS,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIqJ,EAAKrJ,EAAK,QAAQ,EAAEA,EAAK,QAAQ,OAAO8K,EAAa,KAAK,MAAMzB,EAAK,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAASrJ,EAAK,CAAC,IAAIpH,EAAI,KAAK,OAAOoH,EAAK,QAAQ,GAAGA,EAAK,QAAQ,GAAG,GAAG,CAAC,EAAmD,IAA7CA,EAAK,QAAQ,IAAIA,EAAK,QAAQ,GAAG,GAAG,GAAGpH,IAAUA,GAA2H,GAAGA,GAAK,GAAG,CAAC,IAAIkT,GAAM9L,EAAK,QAAQ,IAAIA,EAAK,SAAS,EAAK8L,GAAM,IAAIA,GAAM,GAAG,CAACnM,GAAWK,EAAK,OAAO,KAAGpH,EAAI,EAAC,MAApO,CAACA,EAAI,GAAG,IAAImT,GAAO/L,EAAK,QAAQ,EAAEA,EAAK,QAAQ,GAAG,GAAK+L,GAAO,GAAGA,GAAO,GAAGpM,GAAWK,EAAK,QAAQ,IAAI,CAAC,IAAGpH,GAAM,CAAoH,OAAOkS,EAAalS,EAAI,CAAC,CAAC,EAAE,KAAK,SAASoH,EAAK,CAAC,OAAOA,EAAK,OAAO,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIqJ,EAAKrJ,EAAK,QAAQ,GAAGA,EAAK,QAAQ,GAAG,EAAE,OAAO8K,EAAa,KAAK,MAAMzB,EAAK,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAASrJ,EAAK,CAAC,OAAOA,EAAK,QAAQ,MAAM,SAAS,EAAE,UAAU,CAAC,CAAC,EAAE,KAAK,SAASA,EAAK,CAAC,OAAOA,EAAK,QAAQ,IAAI,EAAE,KAAK,SAASA,EAAK,CAAC,IAAIgM,EAAIhM,EAAK,UAAciM,EAAMD,GAAK,EAAE,OAAAA,EAAI,KAAK,IAAIA,CAAG,EAAE,GAAGA,EAAIA,EAAI,GAAG,IAAIA,EAAI,IAAUC,EAAM,IAAI,KAAK,OAAO,OAAOD,CAAG,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,SAAShM,EAAK,CAAC,OAAOA,EAAK,OAAO,EAAE,KAAK,UAAU,CAAC,MAAM,GAAG,CAAC,EAAEqK,EAAQA,EAAQ,QAAQ,MAAM,MAAM,EAAE,QAAQE,KAAQqB,EAAsBvB,EAAQ,SAASE,CAAI,IAAGF,EAAQA,EAAQ,QAAQ,IAAI,OAAOE,EAAK,GAAG,EAAEqB,EAAkBrB,GAAMvK,CAAI,CAAC,GAAGqK,EAAQA,EAAQ,QAAQ,QAAQ,GAAG,EAAE,IAAI6B,GAAMzC,GAAmBY,EAAQ,EAAK,EAAE,OAAG6B,GAAM,OAAOjC,EAAgB,GAAEH,GAAmBoC,GAAMlC,CAAC,EAASkC,GAAM,OAAO,EAAC,CAAC,SAASC,GAAYnC,EAAEC,EAAQC,EAAOC,EAAGiC,EAAI,CAAC,OAAOrC,GAAUC,EAAEC,EAAQC,EAAOC,CAAE,CAAC,CAAC,SAASkC,IAAgB,CAAC/b,EAAI,iCAAiC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASwb,IAAoB,CAAChc,EAAI,qCAAqC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASyb,IAAe,CAACjc,EAAI,gCAAgC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS0b,IAAwB,CAAClc,EAAI,yCAAyC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS2b,IAAkB,CAACnc,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS4b,IAAmB,CAACpc,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS6b,IAA0B,CAACrc,EAAI,2CAA2C,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS8b,IAAoB,CAACtc,EAAI,qCAAqC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS+b,IAAiB,CAACvc,EAAI,kCAAkC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASgc,IAAoB,CAACxc,EAAI,qCAAqC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASic,IAAW,CAACzc,EAAI,4BAA4B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASkc,IAAsB,CAAC1c,EAAI,uCAAuC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASmc,IAAwB,CAAC3c,EAAI,yCAAyC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASoc,IAA0B,CAAC5c,EAAI,2CAA2C,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASqc,IAAmB,CAAC7c,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASsc,IAAmB,CAAC9c,EAAI,oCAAoC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASuc,IAAkB,CAAC/c,EAAI,mCAAmC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASwc,IAAgB,CAAChd,EAAI,iCAAiC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAASyc,IAAU,CAACjd,EAAI,2BAA2B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS0c,IAAW,CAACld,EAAI,4BAA4B,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS2c,IAAqB,CAACnd,EAAI,sCAAsC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS4c,IAAqB,CAACpd,EAAI,sCAAsC,EAAEQ,EAAM,EAAE,CAAC,CAAC,SAAS6c,GAAWC,EAAK,CAAC3c,GAAW2c,EAAStb,GAAiB,IAAM/D,EAAO,QAAUA,EAAO,OAAUqf,CAAI,EAAE5c,GAAM,IAAKjC,EAAM6e,EAAK,IAAI1Y,GAAW0Y,CAAI,CAAC,CAAC,CAAC,SAASC,GAAO7e,EAAO8e,EAAS,CAAC7c,GAAWjC,EAAO2e,GAAW3e,CAAM,CAAC,CAAC,SAAS+e,GAAgBta,EAAE,CAAC,GAAGA,aAAayB,IAAYzB,GAAG,SAAU,OAAOxC,GAAWlC,EAAM,EAAE0E,CAAC,CAAC,CAAC,SAASua,GAASC,EAAM,CAAC,IAAIC,EAAK3f,EAAO,IAAI0f,GAAO,OAAOC,CAAI,CAAC,SAASC,GAAoBxX,EAAI,CAAC,IAAI2G,EAAKqD,GAAgBhK,CAAG,EAAE,EAAMxG,EAAIie,GAAW9Q,CAAI,EAAE,OAAAP,GAAapG,EAAIxG,EAAImN,CAAI,EAASnN,CAAG,CAAC,SAASke,GAAMJ,EAAMK,EAAWC,EAASC,EAAKC,EAAK,CAAC,IAAIC,EAAI,CAAC,OAAS/X,GAAK,CAAC,IAAIxG,EAAI,EAAE,OAAGwG,GAAM,MAAuBA,IAAM,IAAGxG,EAAIge,GAAoBxX,CAAG,GAASxG,CAAG,EAAE,MAAQwe,GAAK,CAAC,IAAIxe,EAAIie,GAAWO,EAAI,MAAM,EAAE,OAAA7E,GAAmB6E,EAAIxe,CAAG,EAASA,CAAG,CAAC,EAAE,SAASye,EAAmBze,EAAI,CAAC,OAAGme,IAAa,SAAiBtX,GAAa7G,CAAG,EAAKme,IAAa,UAAiB,QAAQne,CAAG,EAASA,CAAG,CAAC,IAAI+d,EAAKF,GAASC,CAAK,EAAMY,EAAM,CAAC,EAAMC,EAAM,EAAE,GAAGN,EAAM,QAAQ3U,EAAE,EAAEA,EAAE2U,EAAK,OAAO3U,IAAI,CAAC,IAAIkV,EAAUL,EAAIH,EAAS1U,IAAOkV,GAAcD,IAAQ,IAAEA,EAAME,GAAU,GAAEH,EAAMhV,GAAGkV,EAAUP,EAAK3U,EAAE,GAAOgV,EAAMhV,GAAG2U,EAAK3U,EAAG,CAAE,IAAI1J,EAAI+d,EAAK,MAAM,KAAKW,CAAK,EAAE,SAASI,EAAO9e,EAAI,CAAC,OAAG2e,IAAQ,GAAEI,GAAaJ,CAAK,EAASF,EAAmBze,CAAG,CAAC,CAAC,OAAAA,EAAI8e,EAAO9e,CAAG,EAASA,CAAG,CAAC,IAAIwE,GAAY,CAAC,EAAIS,GAAe,EAAIC,GAAkB,EAAIC,GAAW,EAAIC,GAAiB,EAAIC,GAAkB,EAAIC,GAAgB,EAAIC,GAAkB,EAAIC,GAA6B,EAAIC,GAAuB,EAAIC,GAAiB,EAAIC,GAAgB,GAAKE,GAAS,GAAKmB,GAAsB,GAAKqE,GAAgB,GAAKK,GAAmB,GAAKC,GAAqB,EAAIG,GAAmB,GAAKG,GAAmB,EAAIE,GAAuB,GAAKW,GAAsB,GAAKO,GAAuB,GAAKE,GAAsB,EAAIK,GAAiB,GAAKE,GAAmB,GAAKC,GAAmB,GAAKE,GAAsB,EAAIC,GAAkB,GAAKC,GAAoB,GAAKE,GAAoB,EAAIK,GAAiB,GAAKC,GAAkB,EAAII,GAAkB,GAAKI,GAAkB,EAAIC,GAAoB,EAAIE,GAAkC,GAAKW,GAAe,GAAKW,GAAW,EAAIc,GAAO,GAAKC,GAAQ,GAAKC,GAAgC,GAAKE,GAAgC,GAAKC,GAAoC,GAAKC,GAAgC,EAAIC,GAA0B,GAAKE,GAA2B,EAAIC,GAA2C,GAAKC,GAAyB,GAAKK,GAAyB,EAAIC,GAAyB,GAAKE,GAA6B,EAAIE,GAA0B,GAAKC,GAAyC,GAAKC,GAAoB,EAAIC,GAAkC,GAAKE,GAA4B,EAAIM,GAAqB,EAAIE,GAAyB,EAAIC,GAAoB,GAAKC,GAAuB,GAAKM,GAAwB,GAAKkB,GAAa,GAAKK,GAAmB,EAAIG,GAAU,GAAKC,GAAe,EAAII,GAAU,EAAIM,GAAW,EAAIC,GAAS,EAAIC,GAAS,GAAKG,GAAS,EAAII,GAAU,EAAIE,GAAa,GAAKe,GAAY,GAAKC,GAAa,GAAK4D,GAAY,EAAIE,GAAe,EAAIC,GAAmB,EAAIC,GAAc,EAAIC,GAAuB,EAAIC,GAAiB,GAAKC,GAAkB,EAAIC,GAAyB,EAAIC,GAAmB,GAAKC,GAAgB,GAAKC,GAAmB,EAAIC,GAAU,EAAIC,GAAqB,EAAIC,GAAuB,EAAIC,GAAyB,EAAIC,GAAkB,EAAIC,GAAkB,EAAIC,GAAiB,EAAIC,GAAe,EAAIC,GAAS,EAAIC,GAAU,EAAIC,GAAoB,EAAIC,EAAmB,EAAMyB,GAAI1a,GAAW,EAAM2a,GAAmB,UAAU,CAAC,OAAOA,GAAmB7gB,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM8gB,GAAM9gB,EAAO,MAAS,UAAU,CAAC,OAAO8gB,GAAM9gB,EAAO,MAASA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM+gB,GAA6B/gB,EAAO,6BAAgC,UAAU,CAAC,OAAO+gB,GAA6B/gB,EAAO,6BAAgCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMghB,GAA2BhhB,EAAO,2BAA8B,UAAU,CAAC,OAAOghB,GAA2BhhB,EAAO,2BAA8BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMihB,GAAsBjhB,EAAO,sBAAyB,UAAU,CAAC,OAAOihB,GAAsBjhB,EAAO,sBAAyBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMkhB,GAAkBlhB,EAAO,kBAAqB,UAAU,CAAC,OAAOkhB,GAAkBlhB,EAAO,kBAAqBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMmhB,GAAoBnhB,EAAO,oBAAuB,UAAU,CAAC,OAAOmhB,GAAoBnhB,EAAO,oBAAuBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMohB,GAAuBphB,EAAO,uBAA0B,UAAU,CAAC,OAAOohB,GAAuBphB,EAAO,uBAA0BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMqhB,GAAwBrhB,EAAO,wBAA2B,UAAU,CAAC,OAAOqhB,GAAwBrhB,EAAO,wBAA2BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMshB,GAAuBthB,EAAO,uBAA0B,UAAU,CAAC,OAAOshB,GAAuBthB,EAAO,uBAA0BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMuhB,GAAiBvhB,EAAO,iBAAoB,UAAU,CAAC,OAAOuhB,GAAiBvhB,EAAO,iBAAoBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMwhB,GAAiCxhB,EAAO,iCAAoC,UAAU,CAAC,OAAOwhB,GAAiCxhB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMyhB,GAA+BzhB,EAAO,+BAAkC,UAAU,CAAC,OAAOyhB,GAA+BzhB,EAAO,+BAAkCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM0hB,GAA8B1hB,EAAO,8BAAiC,UAAU,CAAC,OAAO0hB,GAA8B1hB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM2hB,GAAyB3hB,EAAO,yBAA4B,UAAU,CAAC,OAAO2hB,GAAyB3hB,EAAO,yBAA4BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM4hB,GAA0B5hB,EAAO,0BAA6B,UAAU,CAAC,OAAO4hB,GAA0B5hB,EAAO,0BAA6BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM6hB,GAA+B7hB,EAAO,+BAAkC,UAAU,CAAC,OAAO6hB,GAA+B7hB,EAAO,+BAAkCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM8hB,GAAmC9hB,EAAO,mCAAsC,UAAU,CAAC,OAAO8hB,GAAmC9hB,EAAO,mCAAsCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM+hB,GAAqC/hB,EAAO,qCAAwC,UAAU,CAAC,OAAO+hB,GAAqC/hB,EAAO,qCAAwCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMgiB,GAAiChiB,EAAO,iCAAoC,UAAU,CAAC,OAAOgiB,GAAiChiB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMiiB,GAAoCjiB,EAAO,oCAAuC,UAAU,CAAC,OAAOiiB,GAAoCjiB,EAAO,oCAAuCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMkiB,GAAgCliB,EAAO,gCAAmC,UAAU,CAAC,OAAOkiB,GAAgCliB,EAAO,gCAAmCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMmiB,GAA8BniB,EAAO,8BAAiC,UAAU,CAAC,OAAOmiB,GAA8BniB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMoiB,GAAwBpiB,EAAO,wBAA2B,UAAU,CAAC,OAAOoiB,GAAwBpiB,EAAO,wBAA2BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMqiB,GAA8BriB,EAAO,8BAAiC,UAAU,CAAC,OAAOqiB,GAA8BriB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMsiB,GAAqBtiB,EAAO,qBAAwB,UAAU,CAAC,OAAOsiB,GAAqBtiB,EAAO,qBAAwBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMuiB,GAA8BviB,EAAO,8BAAiC,UAAU,CAAC,OAAOuiB,GAA8BviB,EAAO,8BAAiCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMwiB,GAA4BxiB,EAAO,4BAA+B,UAAU,CAAC,OAAOwiB,GAA4BxiB,EAAO,4BAA+BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMyiB,GAA2BziB,EAAO,2BAA8B,UAAU,CAAC,OAAOyiB,GAA2BziB,EAAO,2BAA8BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM0iB,GAAyB1iB,EAAO,yBAA4B,UAAU,CAAC,OAAO0iB,GAAyB1iB,EAAO,yBAA4BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM2iB,GAA0B3iB,EAAO,0BAA6B,UAAU,CAAC,OAAO2iB,GAA0B3iB,EAAO,0BAA6BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM4iB,GAAsB5iB,EAAO,sBAAyB,UAAU,CAAC,OAAO4iB,GAAsB5iB,EAAO,sBAAyBA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM6iB,GAAgC7iB,EAAO,gCAAmC,UAAU,CAAC,OAAO6iB,GAAgC7iB,EAAO,gCAAmCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM8iB,GAA+B9iB,EAAO,+BAAkC,UAAU,CAAC,OAAO8iB,GAA+B9iB,EAAO,+BAAkCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM+iB,GAAiC/iB,EAAO,iCAAoC,UAAU,CAAC,OAAO+iB,GAAiC/iB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMgjB,GAAgChjB,EAAO,gCAAmC,UAAU,CAAC,OAAOgjB,GAAgChjB,EAAO,gCAAmCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMijB,GAA2BjjB,EAAO,2BAA8B,UAAU,CAAC,OAAOijB,GAA2BjjB,EAAO,2BAA8BA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMkjB,GAAyCljB,EAAO,yCAA4C,UAAU,CAAC,OAAOkjB,GAAyCljB,EAAO,yCAA4CA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMmjB,GAAiCnjB,EAAO,iCAAoC,UAAU,CAAC,OAAOmjB,GAAiCnjB,EAAO,iCAAoCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMojB,GAAkCpjB,EAAO,kCAAqC,UAAU,CAAC,OAAOojB,GAAkCpjB,EAAO,kCAAqCA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMqjB,GAAkB,UAAU,CAAC,OAAOA,GAAkBrjB,EAAO,IAAO,kBAAqB,MAAM,KAAK,SAAS,CAAC,EAAMwZ,GAAO,UAAU,CAAC,OAAOA,GAAOxZ,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMyM,GAAO,UAAU,CAAC,OAAOA,GAAOzM,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM0L,GAAO,UAAU,CAAC,OAAOA,GAAO1L,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMuS,GAAQvS,EAAO,QAAW,UAAU,CAAC,OAAOuS,GAAQvS,EAAO,QAAWA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMsjB,GAAMtjB,EAAO,MAAS,UAAU,CAAC,OAAOsjB,GAAMtjB,EAAO,MAASA,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMiF,GAAQ,UAAU,CAAC,OAAOA,GAAQjF,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAMygB,GAAU,UAAU,CAAC,OAAOA,GAAUzgB,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM2gB,GAAa,UAAU,CAAC,OAAOA,GAAa3gB,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAM6f,GAAW,UAAU,CAAC,OAAOA,GAAW7f,EAAO,IAAO,IAAO,MAAM,KAAK,SAAS,CAAC,EAAEA,EAAO,WAAc6f,GAAW7f,EAAO,UAAaygB,GAAUzgB,EAAO,aAAgB2gB,GAAa3gB,EAAO,MAAS8f,GAAM,IAAIyD,GAAU5e,GAAsB,SAAS6e,GAAW,CAAKD,IAAUE,GAAI,EAAMF,KAAU5e,GAAsB6e,EAAS,EAAE,SAASE,IAAU,CAAC,IAAIC,EAAc7C,GAAU8C,EAAK,EAAMC,EAAK,EAAE,GAAG,CAAC,IAAIjiB,EAAI+hB,EAAcC,EAAKC,CAAI,EAAE,OAAAvE,GAAO1d,EAAI,EAAI,EAASA,CAAG,OAAOsD,EAAN,CAAS,OAAOsa,GAAgBta,CAAC,CAAC,CAAC,CAAC,SAASue,IAAK,CAAuC,GAAnChf,GAAgB,IAAUT,GAAO,EAAKS,GAAgB,GAAG,OAAO,SAASqf,GAAO,CAAIP,KAAiBA,GAAU,GAAKvjB,EAAO,UAAa,GAAQ,CAAAyC,KAAa0B,GAAY,EAAEC,GAAQ,EAAEnE,EAAoBD,CAAM,EAAKA,EAAO,sBAAwBA,EAAO,qBAAwB,EAAK+jB,IAAaL,GAAS,EAAErf,GAAQ,GAAC,CAAIrE,EAAO,WAAcA,EAAO,UAAa,YAAY,EAAE,WAAW,UAAU,CAAC,WAAW,UAAU,CAACA,EAAO,UAAa,EAAE,CAAC,EAAE,CAAC,EAAE8jB,EAAM,CAAC,EAAE,CAAC,GAAOA,EAAM,CAAE,CAAC,GAAG9jB,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,OAAO,GAAGA,EAAO,QAAW,IAAI,EAAE,EAAG,IAAI+jB,GAAa,GAAK,OAAG/jB,EAAO,eAAgB+jB,GAAa,IAAMN,GAAI,EAGvnnD3jB,EAAO,KAChB,CAGA,GAAG,EACIkkB,GAAQlkB,GCRR,IAAMmkB,GAAN,cAAqBC,EAAsB,CAEvC,YACHC,EACAC,EACAC,EACAC,EAAkC,KACpC,CACE,MAAMH,EAAQC,EAASC,EAAeC,CAAgB,CAC1D,CAGU,gBAAgBC,EAA+D,CACrF,OAAOC,GAAW,CACd,GAAGD,EACH,gBAAiB,KAAK,gBAAgB,KAAK,IAAI,EAC/C,WAAY,KAAK,WAAW,KAAK,IAAI,CACzC,CAAC,CACL,CACJ,ECXA,eAAsBE,GAClBC,EACAC,EACAC,EACuB,CAEvB,OADiB,MAAMC,GAAoB,GAC9B,gBACLH,EAAQ,GACD,IAAII,GAAWH,EAAQC,EAASF,EAAQ,GAAI,UAAU,EAG9D,IAAII,GAAUH,EAAQC,EAASF,EAAQ,IAAI,UAAU,CAChE",
  "names": ["require_sha256", "__commonJSMin", "obj", "outputType", "is224", "message", "method", "i", "type", "key", "sharedMemory", "notString", "code", "index", "length", "blocks", "a", "b", "c", "d", "e", "f", "g", "h", "j", "s0", "s1", "maj", "t1", "t2", "ch", "ab", "da", "cd", "bc", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "hex", "arr", "buffer", "dataView", "bytes", "oKeyPad", "iKeyPad", "innerHash", "arrow", "DuckDBConnection", "bindings", "conn", "callback", "text", "buffer", "reader", "header", "resolve", "reject", "e", "iter", "ResultStreamIterator", "query", "stmt", "PreparedStatement", "name", "returns", "func", "table", "options", "path", "bufferI8", "connectionId", "statementId", "params", "StatusCode", "TEXT_ENCODER", "TEXT_DECODER", "storeError", "mod", "response", "message", "msgBuffer", "heapAddr", "heapArray", "getTypeSize", "ptype", "ptrToArray", "ptr", "n", "heap", "ptrToUint8Array", "ptrToFloat64Array", "callScalarUDF", "runtime", "funcId", "descPtr", "descSize", "ptrsPtr", "ptrsSize", "udf", "rawDesc", "desc", "ptrs", "buildResolver", "arg", "_a", "validity", "raw", "strings", "stringLengths", "j", "subarray", "str", "row", "tmp", "children", "attr", "child", "resolver", "data", "argResolvers", "i", "resultDataLen", "resultDataPtr", "resultData", "resultValidityPtr", "resultValidity", "rawResultData", "args", "res", "resultLengthsPtr", "resultDataUTF8", "resultLengths", "totalLength", "utf8", "resultStringPtr", "resultStringBuf", "writerOffset", "resultUTF8", "retLen", "retPtr", "retBuffer", "e", "TextDecoderWrapper", "decoder", "data", "decodeText", "failWith", "mod", "msg", "copyBuffer", "begin", "length", "buffer", "copy", "readString", "DuckDBDataProtocol", "FileFlags", "callSRet", "funcName", "argTypes", "args", "stackPointer", "response", "status", "dataSize", "dropResponseBuffers", "DEFAULT_RUNTIME", "_mod", "_feature", "_fileId", "flags", "_newSize", "_buffer", "_bytes", "_location", "_pathPtr", "_pathLen", "_fromPtr", "_fromLen", "_toPtr", "_toLen", "funcId", "descPtr", "descSize", "ptrsPtr", "ptrsSize", "callScalarUDF", "FileStatistics", "u8array", "f64", "blocks", "index", "out", "arrow", "arrowToSQLType", "type", "dec", "c", "arrowToSQLField", "map_", "name", "t", "TEXT_ENCODER", "DuckDBFeature", "DuckDBBindingsBase", "logger", "runtime", "onProgress", "_", "resolve", "x", "config", "s", "d", "n", "callSRet", "readString", "dropResponseBuffers", "version", "text", "res", "conn", "DuckDBConnection", "worker", "copyBuffer", "name", "returns", "func", "decl", "arrowToSQLType", "def", "statement", "params", "buffer", "options", "bufferPtr", "optJSON", "path", "k", "arrowToSQLField", "opt", "infoStr", "info", "url", "proto", "directIO", "ptr", "handle", "protocol", "copy", "file", "enable", "FileStatistics", "DuckDBAccessMode", "JSONTableShape", "LogLevel", "LogTopic", "LogEvent", "LogOrigin", "VoidLogger", "_entry", "ConsoleLogger", "level", "entry", "getLogLevelLabel", "getLogEventLabel", "event", "getLogTopicLabel", "topic", "getLogOriginLabel", "origin", "bulkMemory", "exceptions", "simd", "threads", "e", "PACKAGE_NAME", "package_default", "PACKAGE_VERSION", "VERSION_PARTS", "PACKAGE_VERSION_MAJOR", "PACKAGE_VERSION_MINOR", "PACKAGE_VERSION_PATCH", "isNode", "userAgent", "isFirefox", "isSafari", "getJsDelivrBundles", "jsdelivr_dist_url", "PACKAGE_NAME", "PACKAGE_VERSION", "bigInt64Array", "wasmExceptions", "wasmThreads", "wasmSIMD", "wasmBulkMemory", "getPlatformFeatures", "exceptions", "threads", "simd", "bulkMemory", "selectBundle", "bundles", "platform", "import_js_sha256", "getHTTPHost", "config", "url", "bucket", "_a", "httpHost", "offset", "getS3Params", "method", "_b", "_c", "_d", "parsedS3Url", "parseS3Url", "path", "isPathStyleAccess", "uriEncode", "input", "encode_slash", "hexDigit", "result", "i", "ch", "createS3Headers", "params", "payloadParams", "payloadHash", "res", "signedHeaders", "canonicalRequest", "canonicalRequestHashStr", "stringToSign", "signKey", "kDate", "kRegion", "kService", "signingKey", "signature", "createS3HeadersFromS3Config", "contentType", "payload", "addS3Headers", "xhr", "value", "header", "slashPos", "getHTTPUrl", "parsedUrl", "BROWSER_RUNTIME", "mod", "fileId", "cached", "s", "d", "n", "callSRet", "infoStr", "readString", "dropResponseBuffers", "info", "file", "_a", "_mod", "feature", "flags", "xhr", "getHTTPUrl", "addS3Headers", "data", "src", "result", "contentLength", "error", "e", "contentLength2", "handle", "buffer", "failWith", "pathPtr", "pathLen", "path", "globalInfo", "xhr2", "_fileId", "newSize", "buf", "bytes", "location", "_b", "sliced", "out", "input", "fromPtr", "fromLen", "toPtr", "toLen", "from", "to", "key", "value", "_pathPtr", "_pathLen", "response", "funcId", "descPtr", "descSize", "ptrsPtr", "ptrsSize", "callScalarUDF", "DuckDB", "_scriptDir", "Module", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "setWindowTitle", "createRequire", "require", "fs", "nodePath", "filename", "binary", "isFileURI", "ret", "onload", "onerror", "err", "data", "url", "xhr", "title", "out", "wasmBinary", "noExitRuntime", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "assert", "condition", "text", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "wasmTable", "__ATPRERUN__", "__ATINIT__", "__ATMAIN__", "__ATPOSTRUN__", "runtimeInitialized", "runtimeKeepaliveCounter", "keepRuntimeAlive", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "preMain", "postRun", "addOnPostRun", "cb", "addOnInit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "callback", "what", "e", "dataURIPrefix", "isDataURI", "wasmBinaryFile", "getBinary", "file", "getBinaryPromise", "binaryFile", "response", "instantiateArrayBuffer", "imports", "receiver", "instance", "reason", "instantiateAsync", "result", "createWasm", "info", "wasmImports", "receiveInstance", "module", "exports", "receiveInstantiationResult", "tempDouble", "tempI64", "ExitStatus", "callbacks", "_XML_GetBuffer", "_XML_GetErrorCode", "_XML_Parse", "_XML_ParseBuffer", "_XML_ParserCreate", "_XML_ParserFree", "_XML_ResumeParser", "_XML_SetCharacterDataHandler", "_XML_SetElementHandler", "_XML_SetUserData", "_XML_StopParser", "ExceptionInfo", "excPtr", "type", "destructor", "caught", "rethrown", "adjustedPtr", "isPointer", "___cxa_is_pointer_type", "adjusted", "exceptionLast", "uncaughtExceptionCount", "___cxa_throw", "ptr", "dlopenMissingError", "___dlsym", "handle", "symbol", "ra", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "SYSCALLS", "___syscall__newselect", "nfds", "readfds", "writefds", "exceptfds", "timeout", "total", "srcReadLow", "srcReadHigh", "srcWriteLow", "srcWriteHigh", "srcExceptLow", "srcExceptHigh", "dstReadLow", "dstReadHigh", "dstWriteLow", "dstWriteHigh", "dstExceptLow", "dstExceptHigh", "allLow", "allHigh", "check", "fd", "low", "high", "val", "mask", "stream", "flags", "SOCKFS", "FS", "getSocketFromFD", "socket", "inetNtop4", "addr", "inetNtop6", "ints", "word", "longest", "lastzero", "zstart", "len", "i", "parts", "hasipv4", "v4part", "_ntohs", "readSockaddr", "sa", "salen", "family", "port", "inetPton4", "tmp", "jstoi_q", "inetPton6", "words", "w", "offset", "z", "valid6regx", "_htons", "DNS", "name", "res", "getSocketAddress", "addrp", "addrlen", "allowNull", "___syscall_bind", "d1", "d2", "d3", "sock", "___syscall_connect", "___syscall_faccessat", "dirfd", "amode", "___syscall_fcntl64", "cmd", "varargs", "___syscall_fstat64", "buf", "___syscall_ftruncate64", "length_low", "length_high", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "u", "stringToUTF8", "outPtr", "___syscall_getdents64", "dirp", "count", "zeroMemory", "address", "size", "writeSockaddr", "___syscall_getpeername", "errno", "___syscall_getsockopt", "level", "optname", "optval", "optlen", "___syscall_ioctl", "op", "___syscall_lstat64", "___syscall_mkdirat", "mode", "___syscall_newfstatat", "___syscall_openat", "___syscall_recvfrom", "msg", "___syscall_renameat", "olddirfd", "oldpath", "newdirfd", "newpath", "___syscall_rmdir", "___syscall_sendto", "message", "length", "addr_len", "___syscall_socket", "domain", "protocol", "___syscall_stat64", "___syscall_unlinkat", "nowIsMonotonic", "__emscripten_get_now_is_monotonic", "readI53FromI64", "isLeapYear", "year", "MONTH_DAYS_LEAP_CUMULATIVE", "MONTH_DAYS_REGULAR_CUMULATIVE", "ydayFromDate", "date", "leap", "monthDaysCumulative", "yday", "__localtime_js", "time", "tmPtr", "start", "summerOffset", "winterOffset", "dst", "lengthBytesUTF8", "c", "stringToNewUTF8", "_malloc", "__tzset_js", "timezone", "daylight", "tzname", "currentYear", "winter", "summer", "stdTimezoneOffset", "extractZone", "match", "winterName", "summerName", "winterNamePtr", "summerNamePtr", "_abort", "_dlopen", "_duckdb_web_fs_directory_create", "pathLen", "_duckdb_web_fs_directory_exists", "_duckdb_web_fs_directory_list_files", "_duckdb_web_fs_directory_remove", "_duckdb_web_fs_file_close", "fileId", "_duckdb_web_fs_file_exists", "_duckdb_web_fs_file_get_last_modified_time", "_duckdb_web_fs_file_move", "from", "fromLen", "to", "toLen", "_duckdb_web_fs_file_open", "_duckdb_web_fs_file_read", "location", "_duckdb_web_fs_file_truncate", "newSize", "_duckdb_web_fs_file_write", "_duckdb_web_fs_get_default_data_protocol", "_duckdb_web_fs_glob", "_duckdb_web_test_platform_feature", "feature", "_duckdb_web_udf_scalar_call", "funcId", "descPtr", "descSize", "ptrsPtr", "ptrsSize", "_emscripten_date_now", "getHeapMax", "_emscripten_get_heap_max", "_emscripten_get_now", "_emscripten_memcpy_big", "dest", "src", "num", "emscripten_realloc_buffer", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "strings", "stringToAscii", "buffer", "_environ_get", "__environ", "environ_buf", "bufSize", "string", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "_fd_close", "_fd_fdstat_get", "pbuf", "rightsBase", "rightsInheriting", "_fd_pread", "iov", "iovcnt", "offset_low", "offset_high", "pnum", "_fd_pwrite", "_fd_read", "_fd_seek", "whence", "newOffset", "_fd_sync", "printCharBuffers", "printChar", "curr", "_fd_write", "j", "_getaddrinfo", "node", "service", "hint", "proto", "ai", "allocaddrinfo", "canon", "_htonl", "initRandomFill", "view", "crypto_module", "randomFillSync", "randomBytes", "randomFill", "_getentropy", "_getnameinfo", "nodelen", "serv", "servlen", "overflowed", "lookup", "numBytesWrittenExclNull", "arraySum", "array", "index", "sum", "MONTH_DAYS_LEAP", "MONTH_DAYS_REGULAR", "addDays", "days", "newDate", "currentMonth", "daysInCurrentMonth", "intArrayFromString", "stringy", "dontAddNull", "u8array", "numBytesWritten", "writeArrayToMemory", "_strftime", "s", "maxsize", "format", "tm", "tm_zone", "pattern", "EXPANSION_RULES_1", "rule", "WEEKDAYS", "MONTHS", "leadingSomething", "value", "digits", "character", "leadingNulls", "compareByDay", "date1", "date2", "sgn", "compare", "getFirstWeekStartDate", "janFourth", "getWeekBasedYear", "thisDate", "janFourthThisYear", "janFourthNextYear", "firstWeekStartThisYear", "firstWeekStartNextYear", "EXPANSION_RULES_2", "twelveHour", "jan1", "dec31", "off", "ahead", "bytes", "_strftime_l", "loc", "_ucnv_close_64", "_ucnv_convertEx_64", "_ucnv_open_64", "_ucnv_toAlgorithmic_64", "_ucsdet_close_64", "_ucsdet_detect_64", "_ucsdet_getConfidence_64", "_ucsdet_getName_64", "_ucsdet_open_64", "_ucsdet_setText_64", "_unzClose", "_unzCloseCurrentFile", "_unzGetCurrentFileInfo", "_unzGetCurrentFileInfo64", "_unzGetGlobalInfo", "_unzGoToFirstFile", "_unzGoToNextFile", "_unzLocateFile", "_unzOpen", "_unzOpen2", "_unzOpenCurrentFile", "_unzReadCurrentFile", "_proc_exit", "code", "exitJS", "implicit", "handleException", "getCFunc", "ident", "func", "stringToUTF8OnStack", "stackAlloc", "ccall", "returnType", "argTypes", "args", "opts", "toC", "arr", "convertReturnValue", "cArgs", "stack", "converter", "stackSave", "onDone", "stackRestore", "asm", "___wasm_call_ctors", "_main", "_duckdb_web_fs_glob_add_path", "_duckdb_web_clear_response", "_duckdb_web_fail_with", "_duckdb_web_reset", "_duckdb_web_connect", "_duckdb_web_disconnect", "_duckdb_web_flush_files", "_duckdb_web_flush_file", "_duckdb_web_open", "_duckdb_web_get_global_file_info", "_duckdb_web_collect_file_stats", "_duckdb_web_export_file_stats", "_duckdb_web_fs_drop_file", "_duckdb_web_fs_drop_files", "_duckdb_web_fs_glob_file_infos", "_duckdb_web_fs_get_file_info_by_id", "_duckdb_web_fs_get_file_info_by_name", "_duckdb_web_fs_register_file_url", "_duckdb_web_fs_register_file_buffer", "_duckdb_web_copy_file_to_buffer", "_duckdb_web_copy_file_to_path", "_duckdb_web_get_version", "_duckdb_web_get_feature_flags", "_duckdb_web_tokenize", "_duckdb_web_udf_scalar_create", "_duckdb_web_prepared_create", "_duckdb_web_prepared_close", "_duckdb_web_prepared_run", "_duckdb_web_prepared_send", "_duckdb_web_query_run", "_duckdb_web_pending_query_start", "_duckdb_web_pending_query_poll", "_duckdb_web_pending_query_cancel", "_duckdb_web_query_fetch_results", "_duckdb_web_get_tablenames", "_duckdb_web_insert_arrow_from_ipc_stream", "_duckdb_web_insert_csv_from_path", "_duckdb_web_insert_json_from_path", "___errno_location", "_free", "calledRun", "runCaller", "run", "callMain", "entryFunction", "argc", "argv", "doRun", "shouldRunNow", "duckdb_mvp_default", "DuckDBBrowserBindings", "DuckDBBindingsBase", "logger", "runtime", "mainModuleURL", "pthreadWorkerURL", "path", "prefix", "imports", "success", "handlers", "response", "_a", "request", "contentLengthHdr", "contentLength", "start", "progress", "tracker", "chunk", "ctrl", "now", "p", "ts", "output", "xhr", "url", "error", "e", "buffer", "DuckDB", "DuckDBBrowserBindings", "logger", "runtime", "mainModuleURL", "pthreadWorkerURL", "moduleOverrides", "duckdb_mvp_default", "DuckDB", "_scriptDir", "Module", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "setWindowTitle", "createRequire", "require", "fs", "nodePath", "filename", "binary", "isFileURI", "ret", "onload", "onerror", "err", "data", "url", "xhr", "title", "out", "wasmBinary", "noExitRuntime", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "assert", "condition", "text", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "wasmTable", "__ATPRERUN__", "__ATINIT__", "__ATMAIN__", "__ATPOSTRUN__", "runtimeInitialized", "runtimeKeepaliveCounter", "keepRuntimeAlive", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "preMain", "postRun", "addOnPostRun", "cb", "addOnInit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "callback", "what", "___trap", "e", "dataURIPrefix", "isDataURI", "wasmBinaryFile", "getBinary", "file", "getBinaryPromise", "binaryFile", "response", "instantiateArrayBuffer", "imports", "receiver", "instance", "reason", "instantiateAsync", "result", "createWasm", "info", "wasmImports", "receiveInstance", "module", "exports", "receiveInstantiationResult", "tempDouble", "tempI64", "ExitStatus", "callbacks", "_XML_GetBuffer", "_XML_GetErrorCode", "_XML_Parse", "_XML_ParseBuffer", "_XML_ParserCreate", "_XML_ParserFree", "_XML_ResumeParser", "_XML_SetCharacterDataHandler", "_XML_SetElementHandler", "_XML_SetUserData", "_XML_StopParser", "dlopenMissingError", "___dlsym", "handle", "symbol", "ra", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "ptr", "SYSCALLS", "___syscall__newselect", "nfds", "readfds", "writefds", "exceptfds", "timeout", "total", "srcReadLow", "srcReadHigh", "srcWriteLow", "srcWriteHigh", "srcExceptLow", "srcExceptHigh", "dstReadLow", "dstReadHigh", "dstWriteLow", "dstWriteHigh", "dstExceptLow", "dstExceptHigh", "allLow", "allHigh", "check", "fd", "low", "high", "val", "mask", "stream", "flags", "SOCKFS", "FS", "getSocketFromFD", "socket", "inetNtop4", "addr", "inetNtop6", "ints", "word", "longest", "lastzero", "zstart", "len", "i", "parts", "hasipv4", "v4part", "_ntohs", "readSockaddr", "sa", "salen", "family", "port", "inetPton4", "tmp", "jstoi_q", "inetPton6", "words", "w", "offset", "z", "valid6regx", "_htons", "DNS", "name", "res", "getSocketAddress", "addrp", "addrlen", "allowNull", "___syscall_bind", "d1", "d2", "d3", "sock", "___syscall_connect", "___syscall_faccessat", "dirfd", "amode", "___syscall_fcntl64", "cmd", "varargs", "___syscall_fstat64", "buf", "___syscall_ftruncate64", "length_low", "length_high", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "u", "stringToUTF8", "outPtr", "___syscall_getdents64", "dirp", "count", "zeroMemory", "address", "size", "writeSockaddr", "___syscall_getpeername", "errno", "___syscall_getsockopt", "level", "optname", "optval", "optlen", "___syscall_ioctl", "op", "___syscall_lstat64", "___syscall_mkdirat", "mode", "___syscall_newfstatat", "___syscall_openat", "___syscall_recvfrom", "msg", "___syscall_renameat", "olddirfd", "oldpath", "newdirfd", "newpath", "___syscall_rmdir", "___syscall_sendto", "message", "length", "addr_len", "___syscall_socket", "domain", "type", "protocol", "___syscall_stat64", "___syscall_unlinkat", "nowIsMonotonic", "__emscripten_get_now_is_monotonic", "readI53FromI64", "isLeapYear", "year", "MONTH_DAYS_LEAP_CUMULATIVE", "MONTH_DAYS_REGULAR_CUMULATIVE", "ydayFromDate", "date", "leap", "monthDaysCumulative", "yday", "__localtime_js", "time", "tmPtr", "start", "summerOffset", "winterOffset", "dst", "lengthBytesUTF8", "c", "stringToNewUTF8", "_malloc", "__tzset_js", "timezone", "daylight", "tzname", "currentYear", "winter", "summer", "stdTimezoneOffset", "extractZone", "match", "winterName", "summerName", "winterNamePtr", "summerNamePtr", "_abort", "_dlopen", "_duckdb_web_fs_directory_create", "pathLen", "_duckdb_web_fs_directory_exists", "_duckdb_web_fs_directory_list_files", "_duckdb_web_fs_directory_remove", "_duckdb_web_fs_file_close", "fileId", "_duckdb_web_fs_file_exists", "_duckdb_web_fs_file_get_last_modified_time", "_duckdb_web_fs_file_move", "from", "fromLen", "to", "toLen", "_duckdb_web_fs_file_open", "_duckdb_web_fs_file_read", "location", "_duckdb_web_fs_file_truncate", "newSize", "_duckdb_web_fs_file_write", "_duckdb_web_fs_get_default_data_protocol", "_duckdb_web_fs_glob", "_duckdb_web_test_platform_feature", "feature", "_duckdb_web_udf_scalar_call", "funcId", "descPtr", "descSize", "ptrsPtr", "ptrsSize", "_emscripten_date_now", "getHeapMax", "_emscripten_get_heap_max", "_emscripten_get_now", "_emscripten_memcpy_big", "dest", "src", "num", "emscripten_realloc_buffer", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "strings", "stringToAscii", "buffer", "_environ_get", "__environ", "environ_buf", "bufSize", "string", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "_fd_close", "_fd_fdstat_get", "pbuf", "rightsBase", "rightsInheriting", "_fd_pread", "iov", "iovcnt", "offset_low", "offset_high", "pnum", "_fd_pwrite", "_fd_read", "_fd_seek", "whence", "newOffset", "_fd_sync", "printCharBuffers", "printChar", "curr", "_fd_write", "j", "_getaddrinfo", "node", "service", "hint", "proto", "ai", "allocaddrinfo", "canon", "_htonl", "initRandomFill", "view", "crypto_module", "randomFillSync", "randomBytes", "randomFill", "_getentropy", "_getnameinfo", "nodelen", "serv", "servlen", "overflowed", "lookup", "numBytesWrittenExclNull", "arraySum", "array", "index", "sum", "MONTH_DAYS_LEAP", "MONTH_DAYS_REGULAR", "addDays", "days", "newDate", "currentMonth", "daysInCurrentMonth", "intArrayFromString", "stringy", "dontAddNull", "u8array", "numBytesWritten", "writeArrayToMemory", "_strftime", "s", "maxsize", "format", "tm", "tm_zone", "pattern", "EXPANSION_RULES_1", "rule", "WEEKDAYS", "MONTHS", "leadingSomething", "value", "digits", "character", "leadingNulls", "compareByDay", "date1", "date2", "sgn", "compare", "getFirstWeekStartDate", "janFourth", "getWeekBasedYear", "thisDate", "janFourthThisYear", "janFourthNextYear", "firstWeekStartThisYear", "firstWeekStartNextYear", "EXPANSION_RULES_2", "twelveHour", "jan1", "dec31", "off", "ahead", "bytes", "_strftime_l", "loc", "_ucnv_close_64", "_ucnv_convertEx_64", "_ucnv_open_64", "_ucnv_toAlgorithmic_64", "_ucsdet_close_64", "_ucsdet_detect_64", "_ucsdet_getConfidence_64", "_ucsdet_getName_64", "_ucsdet_open_64", "_ucsdet_setText_64", "_unzClose", "_unzCloseCurrentFile", "_unzGetCurrentFileInfo", "_unzGetCurrentFileInfo64", "_unzGetGlobalInfo", "_unzGoToFirstFile", "_unzGoToNextFile", "_unzLocateFile", "_unzOpen", "_unzOpen2", "_unzOpenCurrentFile", "_unzReadCurrentFile", "_proc_exit", "code", "exitJS", "implicit", "handleException", "getCFunc", "ident", "func", "stringToUTF8OnStack", "stackAlloc", "ccall", "returnType", "argTypes", "args", "opts", "toC", "arr", "convertReturnValue", "cArgs", "stack", "converter", "stackSave", "onDone", "stackRestore", "asm", "___wasm_call_ctors", "_main", "_duckdb_web_fs_glob_add_path", "_duckdb_web_clear_response", "_duckdb_web_fail_with", "_duckdb_web_reset", "_duckdb_web_connect", "_duckdb_web_disconnect", "_duckdb_web_flush_files", "_duckdb_web_flush_file", "_duckdb_web_open", "_duckdb_web_get_global_file_info", "_duckdb_web_collect_file_stats", "_duckdb_web_export_file_stats", "_duckdb_web_fs_drop_file", "_duckdb_web_fs_drop_files", "_duckdb_web_fs_glob_file_infos", "_duckdb_web_fs_get_file_info_by_id", "_duckdb_web_fs_get_file_info_by_name", "_duckdb_web_fs_register_file_url", "_duckdb_web_fs_register_file_buffer", "_duckdb_web_copy_file_to_buffer", "_duckdb_web_copy_file_to_path", "_duckdb_web_get_version", "_duckdb_web_get_feature_flags", "_duckdb_web_tokenize", "_duckdb_web_udf_scalar_create", "_duckdb_web_prepared_create", "_duckdb_web_prepared_close", "_duckdb_web_prepared_run", "_duckdb_web_prepared_send", "_duckdb_web_query_run", "_duckdb_web_pending_query_start", "_duckdb_web_pending_query_poll", "_duckdb_web_pending_query_cancel", "_duckdb_web_query_fetch_results", "_duckdb_web_get_tablenames", "_duckdb_web_insert_arrow_from_ipc_stream", "_duckdb_web_insert_csv_from_path", "_duckdb_web_insert_json_from_path", "___errno_location", "_free", "calledRun", "runCaller", "run", "callMain", "entryFunction", "argc", "argv", "doRun", "shouldRunNow", "duckdb_eh_default", "DuckDB", "DuckDBBrowserBindings", "logger", "runtime", "mainModuleURL", "pthreadWorkerURL", "moduleOverrides", "duckdb_eh_default", "createDuckDB", "bundles", "logger", "runtime", "getPlatformFeatures", "DuckDB"]
}
